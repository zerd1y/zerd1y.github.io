<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>jQuery</title>
      <link href="/2025/03/09/2025-3-9-jQuery/"/>
      <url>/2025/03/09/2025-3-9-jQuery/</url>
      
        <content type="html"><![CDATA[<h1 id="jQuery"><a href="#jQuery" class="headerlink" title="jQuery"></a>jQuery</h1><ol><li><em>多看看源码，看看游戏源码</em></li><li><em>多模仿网站：扒网站，对应修改，写网站</em></li></ol><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>jQuery 是一个轻量级的”写的少，做的多”的 JavaScript 库：</p><ul><li>HTML 元素选取</li><li>HTML 元素操作</li><li>CSS 操作</li><li>HTML 事件函数</li><li>JavaScript 特效和动画</li><li>HTML DOM 遍历和修改</li><li>AJAX</li><li>Utilities</li></ul><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>2种方法：</p><ol><li><p>下载jQuery库：<a href="https://jquery.com/">jQuery</a></p><p><strong>在要使用 jQuery 的页面引入.js文件</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script src=<span class="string">&quot;jquery-3.7.1.min.js&quot;</span>&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>路径替换为你的下载路径</p></li><li><p>CDN导入：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 从谷歌CDN服务器上导入jQuery库，将其添加到HTML页面中</span></span><br><span class="line">&lt;script src=<span class="string">&quot;https://ajax.googleapis.com/ajax/libs/jquery/3.6.0/jquery.min.js&quot;</span>&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure></li></ol><h2 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h2><p>基础语法： </p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$(selector).<span class="title function_">action</span>()</span><br></pre></td></tr></table></figure><ul><li>美元符号定义 jQuery</li><li>选择符（selector）”查询”和”查找” HTML 元素（<strong>和CSS选择器一样</strong>）</li><li>jQuery 的 action() 执行对元素的操作</li></ul><h2 id="选择器"><a href="#选择器" class="headerlink" title="选择器"></a>选择器</h2><ul><li><code>$(&quot;p&quot;)</code>：元素选择器</li><li><code>$(&quot;#test&quot;)</code>：id选择器</li><li><code>$(&quot;.test&quot;)</code>：class选择器</li><li><strong>css可用的，jQuery都可用</strong></li></ul><h2 id="事件"><a href="#事件" class="headerlink" title="事件"></a>事件</h2><p>事件：页面对不同访问者的响应</p><h3 id="事件方法"><a href="#事件方法" class="headerlink" title="事件方法"></a>事件方法</h3><p>基本语法：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">&quot;p&quot;</span>).<span class="title function_">click</span>(<span class="keyword">function</span>(<span class="params"></span>)&#123; <span class="comment">// 指定一个点击事件</span></span><br><span class="line">    <span class="comment">// 动作触发后执行的代码</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h3 id="document-ready"><a href="#document-ready" class="headerlink" title="$(document).ready()"></a>$(document).ready()</h3><p><code>$(document).ready()</code>方法允许我们在文档完全加载完后执行函数</p><p>简洁写法:：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">   <span class="comment">// jQuery 代码...</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h3 id="click"><a href="#click" class="headerlink" title="click()"></a>click()</h3><p><code>click()</code>：当按钮点击事件被触发时会调用一个函数</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">&quot;p&quot;</span>).<span class="title function_">click</span>(<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">  $(<span class="variable language_">this</span>).<span class="title function_">hide</span>();</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h3 id="mouseenter"><a href="#mouseenter" class="headerlink" title="mouseenter()"></a>mouseenter()</h3><p><code>mouseenter()</code>：当鼠标指针穿过元素时，会发生 mouseenter 事件</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">&quot;#p1&quot;</span>).<span class="title function_">mouseenter</span>(<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="title function_">alert</span>(<span class="string">&#x27;您的鼠标移到了 id=&quot;p1&quot; 的元素上!&#x27;</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h2 id="操作-DOM"><a href="#操作-DOM" class="headerlink" title="操作 DOM"></a>操作 DOM</h2><h3 id="获取"><a href="#获取" class="headerlink" title="获取"></a>获取</h3><ul><li><code>text()</code>：获取（设置）文本内容</li><li><code>html()</code>：获取（设置）HTML内容</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">&quot;#btn1&quot;</span>).<span class="title function_">click</span>(<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">  <span class="title function_">alert</span>(<span class="string">&quot;Text: &quot;</span> + $(<span class="string">&quot;#test&quot;</span>).<span class="title function_">text</span>());</span><br><span class="line">&#125;);</span><br><span class="line">$(<span class="string">&quot;#btn2&quot;</span>).<span class="title function_">click</span>(<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">  <span class="title function_">alert</span>(<span class="string">&quot;HTML: &quot;</span> + $(<span class="string">&quot;#test&quot;</span>).<span class="title function_">html</span>());</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h3 id="css"><a href="#css" class="headerlink" title="css()"></a>css()</h3><p><code>css() </code>方法设置或返回被选元素的一个或多个样式属性</p><ul><li><p><code>css(&quot;propertynam*&quot;,&quot;value&quot;);</code>设置 CSS 属性</p><p><code>css(&#123;&quot;propertyname&quot;:&quot;value&quot;,&quot;propertyname&quot;:&quot;value&quot;,...&#125;);</code></p></li></ul><p>脚本：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">&quot;p&quot;</span>).<span class="title function_">css</span>(&#123;<span class="string">&quot;background-color&quot;</span>:<span class="string">&quot;yellow&quot;</span>,<span class="string">&quot;font-size&quot;</span>:<span class="string">&quot;200%&quot;</span>&#125;);</span><br></pre></td></tr></table></figure><h2 id="显示-隐藏"><a href="#显示-隐藏" class="headerlink" title="显示 &#x2F; 隐藏"></a>显示 &#x2F; 隐藏</h2><ul><li><code>$(selector).hide(speed,callback);</code>：隐藏</li><li><code>$(selector).show(speed,callback);</code>：显示</li><li><code>$(selector).toggle(speed,callback);</code>：切换 hide() 和 show() 方法</li></ul><p>参数：</p><ol><li><code>speed</code>（可选）：隐藏&#x2F;显示的速度（”slow”、”fast” 或毫秒）</li><li><code>callback</code>（可选）：完成后所执行的函数名称</li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="variable language_">document</span>).<span class="title function_">ready</span>(<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">  $(<span class="string">&quot;.hidebtn&quot;</span>).<span class="title function_">click</span>(<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">    $(<span class="string">&quot;div&quot;</span>).<span class="title function_">hide</span>(<span class="number">1000</span>, <span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">      <span class="title function_">alert</span>(<span class="string">&quot;Hide() 方法已完成!&quot;</span>);</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 开发 </category>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> jQuery </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>线性回归（深度学习）</title>
      <link href="/2025/03/08/2025-3-8-%E7%BA%BF%E6%80%A7%E5%9B%9E%E5%BD%92%EF%BC%88%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%EF%BC%89/"/>
      <url>/2025/03/08/2025-3-8-%E7%BA%BF%E6%80%A7%E5%9B%9E%E5%BD%92%EF%BC%88%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h1 id="线性回归（深度学习）"><a href="#线性回归（深度学习）" class="headerlink" title="线性回归（深度学习）"></a>线性回归（深度学习）</h1><p><em>回归</em>（regression）是能为一个或多个自变量与因变量之间关系建模的一类方法</p><p><em>线性回归</em>（linear regression）</p><h2 id="线性回归的基本元素"><a href="#线性回归的基本元素" class="headerlink" title="线性回归的基本元素"></a>线性回归的基本元素</h2><ol><li>线性模型</li><li>损失函数</li><li>解析解</li><li>随机梯度下降</li><li>用模型进行预测</li></ol><h3 id="例子"><a href="#例子" class="headerlink" title="例子"></a>例子</h3><p>根据房屋的面积（平方英尺）和房龄（年）来估算房屋价格（美元）。</p><ul><li><em>训练数据集</em>（training data set） 或<em>训练集</em>（training set）：房屋的销售价格、面积和房龄</li><li><em>样本</em>（sample）&#x2F;<em>数据点</em>（data point）或<em>数据样本</em>（data instance）：每行数据</li><li><em>标签</em>（label）或<em>目标</em>（target）：试图预测的目标（比如预测房屋价格）</li><li><em>特征</em>（feature）或<em>协变量</em>（covariate）：预测所依据的自变量（面积和房龄）</li></ul><h3 id="线性模型"><a href="#线性模型" class="headerlink" title="线性模型"></a>线性模型</h3><p>$$<br>\mathrm{price} &#x3D; w_{\mathrm{area}} \cdot \mathrm{area} + w_{\mathrm{age}} \cdot \mathrm{age} + b<br>$$</p><ul><li><em>权重</em>（weight）：$w_{\mathrm{area}}$和$w_{\mathrm{age}}$</li><li><em>偏置</em>（bias）、<em>偏移量</em>（offset）或<em>截距</em>（intercept）：$b$</li></ul><p>机器学习领域，我们通常使用的是高维数据集，建模时采用线性代数表示法：<br>$$<br>\hat{y} &#x3D; w_1  x_1 + … + w_d  x_d + b<br>$$</p><p>$$<br>\hat{y} &#x3D; \mathbf{w}^\top \mathbf{x} + b<br>$$</p><p>向量$\mathbf{x}$对应于单个数据样本的特征。用符号表示的矩阵$\mathbf{X} \in \mathbb{R}^{n \times d}$可以很方便地引用我们整个数据集的$n$个样本:<br>$$<br>{\hat{\mathbf{y}}} &#x3D; \mathbf{X} \mathbf{w} + b<br>$$<br>过程中的求和将使用广播机制</p><p>我们很难找到一个有$n$个样本的真实数据集，其中对于所有的$1 \leq i \leq n$，$y^{(i)}$完全等于$\mathbf{w}^\top \mathbf{x}^{(i)}+b$。无论我们使用什么手段来观察特征$\mathbf{X}$和标签$\mathbf{y}$，都可能会出现少量的观测误差。因此，即使确信特征与标签的潜在关系是线性的，我们也会加入一个噪声项来考虑观测误差带来的影响。</p><p>在开始寻找最好的<em>模型参数</em>（model parameters）$\mathbf{w}$和$b$之前，我们还需要两个东西：<br>（1）一种模型质量的度量方式；<br>（2）一种能够更新模型以提高模型预测质量的方法。</p><h3 id="损失函数"><a href="#损失函数" class="headerlink" title="损失函数"></a>损失函数</h3><p><em>损失函数</em>（loss function）能够量化目标的<em>实际</em>值与<em>预测</em>值之间的差距</p><p>平方误差函数：<br>$$<br>l^{(i)}(\mathbf{w}, b) &#x3D; \frac{1}{2} \left(\hat{y}^{(i)} - y^{(i)}\right)^2<br>$$<br>由于平方误差函数中的二次方项， 估计值$\hat{y}^{(i)}$和观测值$y^{(i)}$之间较大的差异将导致更大的损失。 为了度量模型在整个数据集上的质量，我们需计算在$n$训练集个样本上的损失均值（也等价于求和）：<br>$$<br>L(\mathbf{w}, b) &#x3D;\frac{1}{n}\sum_{i&#x3D;1}^n l^{(i)}(\mathbf{w}, b) &#x3D;\frac{1}{n} \sum_{i&#x3D;1}^n \frac{1}{2}\left(\mathbf{w}^\top \mathbf{x}^{(i)} + b - y^{(i)}\right)^2<br>$$</p><p>我们希望寻找一组参数（$\mathbf{w}^<em>, b^</em>$），这组参数能最小化在所有训练样本上的总损失：<br>$$<br>\mathbf{w}^<em>, b^</em> &#x3D; \operatorname*{argmin}_{\mathbf{w}, b}\  L(\mathbf{w}, b)<br>$$</p><h3 id="解析解"><a href="#解析解" class="headerlink" title="解析解"></a>解析解</h3><p>线性回归的解可以用一个公式简单地表达出来， 这类解叫作解析解（analytical solution）。</p><p>解析解可以进行很好的数学分析，但解析解对问题的限制很严格，导致它无法广泛应用在深度学习里。</p><h3 id="随机梯度下降"><a href="#随机梯度下降" class="headerlink" title="随机梯度下降"></a>随机梯度下降</h3><p><em>梯度下降</em>（gradient descent）： 这种方法几乎可以优化所有深度学习模型。 它通过不断地在损失函数递减的方向上更新参数来降低误差</p><p>梯度下降最简单的用法是计算损失函数（数据集中所有样本的损失均值） 关于模型参数的导数（在这里也可以称为梯度）。</p><p>但实际中的执行可能会非常慢：因为在每一次更新参数之前，我们必须遍历整个数据集。 因此，我们通常会在每次需要计算更新的时候随机抽取一小批样本， 这种变体叫做<em>小批量随机梯度下降</em>（minibatch stochastic gradient descent）。</p><p>在每次迭代中，我们首先随机抽样一个小批量$\mathcal{B}$，它是由固定数量的训练样本组成的。然后，我们计算小批量的平均损失关于模型参数的导数（也可以称为梯度）。最后，我们将梯度乘以一个预先确定的正数$\eta$，并从当前参数的值中减掉：<br>$$<br>(\mathbf{w},b) \leftarrow (\mathbf{w},b) - \frac{\eta}{|\mathcal{B}|} \sum_{i \in \mathcal{B}} \partial_{(\mathbf{w},b)} l^{(i)}(\mathbf{w},b)<br>$$<br>即：<br>$$<br>\begin{aligned} \mathbf{w} &amp;\leftarrow \mathbf{w} -   \frac{\eta}{|\mathcal{B}|} \sum_{i \in \mathcal{B}} \partial_{\mathbf{w}} l^{(i)}(\mathbf{w}, b) &#x3D; \mathbf{w} - \frac{\eta}{|\mathcal{B}|} \sum_{i \in \mathcal{B}} \mathbf{x}^{(i)} \left(\mathbf{w}^\top \mathbf{x}^{(i)} + b - y^{(i)}\right),\ b &amp;\leftarrow b -  \frac{\eta}{|\mathcal{B}|} \sum_{i \in \mathcal{B}} \partial_b l^{(i)}(\mathbf{w}, b)  &#x3D; b - \frac{\eta}{|\mathcal{B}|} \sum_{i \in \mathcal{B}} \left(\mathbf{w}^\top \mathbf{x}^{(i)} + b - y^{(i)}\right). \end{aligned}<br>$$</p><ul><li><em>批量大小</em>（batch size）：$|\mathcal{B}|$</li><li><em>学习率</em>（learning rate）：$\eta$</li><li><em>超参数</em>（hyperparameter）：批量大小和学习率（可以调整但不在训练过程中更新的参数）</li></ul><h3 id="用模型预测"><a href="#用模型预测" class="headerlink" title="用模型预测"></a>用模型预测</h3><p>通过房屋面积$x_1$和房龄$x_2$来估计一个（<strong>未包含在训练数据中</strong>的）新房屋价格</p><h2 id="矢量化加速"><a href="#矢量化加速" class="headerlink" title="矢量化加速"></a>矢量化加速</h2><p>在训练我们的模型时，我们经常希望能够同时处理整个小批量的样本。 为了实现这一点，需要(<strong>我们对计算进行矢量化， 从而利用线性代数库，而不是在Python中编写开销高昂的for循环</strong>)</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">%matplotlib inline</span><br><span class="line"><span class="keyword">import</span> math</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> torch</span><br><span class="line"><span class="keyword">from</span> d2l <span class="keyword">import</span> torch <span class="keyword">as</span> d2l</span><br><span class="line"></span><br><span class="line">n = <span class="number">10000</span></span><br><span class="line">a = torch.ones([n])</span><br><span class="line">b = torch.ones([n])</span><br><span class="line"><span class="comment"># 定义一个计时器</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Timer</span>:  <span class="comment">#@save</span></span><br><span class="line">    <span class="string">&quot;&quot;&quot;记录多次运行时间&quot;&quot;&quot;</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="variable language_">self</span>.times = []</span><br><span class="line">        <span class="variable language_">self</span>.start()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">start</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="string">&quot;&quot;&quot;启动计时器&quot;&quot;&quot;</span></span><br><span class="line">        <span class="variable language_">self</span>.tik = time.time()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">stop</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="string">&quot;&quot;&quot;停止计时器并将时间记录在列表中&quot;&quot;&quot;</span></span><br><span class="line">        <span class="variable language_">self</span>.times.append(time.time() - <span class="variable language_">self</span>.tik)</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">self</span>.times[-<span class="number">1</span>]</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">avg</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="string">&quot;&quot;&quot;返回平均时间&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">sum</span>(<span class="variable language_">self</span>.times) / <span class="built_in">len</span>(<span class="variable language_">self</span>.times)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">sum</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="string">&quot;&quot;&quot;返回时间总和&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">sum</span>(<span class="variable language_">self</span>.times)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">cumsum</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="string">&quot;&quot;&quot;返回累计时间&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> np.array(<span class="variable language_">self</span>.times).cumsum().tolist()</span><br></pre></td></tr></table></figure><ul><li><code>__init__</code>：在 Python 类中，<code>__init__</code> 是 <strong>构造函数</strong>，用于 <strong>初始化类的实例</strong>。当你创建一个类的对象时，<code>__init__</code> 方法会自动运行，为对象赋初始值</li><li><code>np.array(self.times)</code>：把 <code>self.times</code>（一个 Python 列表）转换为 NumPy 数组，方便进行数值运算</li><li><code>.cumsum()</code>：<strong>计算累计和</strong>，即前面的所有数相加</li><li><code>.tolist()</code>：<strong>把 NumPy 数组转换回 Python 列表</strong>，以便在 Python 代码中更容易使用</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">c = torch.zeros(n)</span><br><span class="line">timer = Timer()</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(n):</span><br><span class="line">    c[i] = a[i] + b[i]</span><br><span class="line"><span class="string">f&#x27;<span class="subst">&#123;timer.stop():<span class="number">.5</span>f&#125;</span> sec&#x27;</span></span><br><span class="line"><span class="comment"># &#x27;0.09661 sec&#x27;</span></span><br><span class="line"></span><br><span class="line">timer.start()</span><br><span class="line">d = a + b</span><br><span class="line"><span class="string">f&#x27;<span class="subst">&#123;timer.stop():<span class="number">.5</span>f&#125;</span> sec&#x27;</span></span><br><span class="line"><span class="comment"># &#x27;0.00021 sec&#x27;</span></span><br></pre></td></tr></table></figure><ul><li><code>torch.zeros(n)</code>: 创建长度为 <code>n</code> 的全零张量 <code>c</code>。</li><li><code>timer = Timer()</code>: 创建 <code>Timer</code> 计时器，并自动启动</li><li><code>timer.stop()</code>: 停止计时并返回运行时间</li><li><code>f&#39;&#123;timer.stop():.5f&#125; sec&#39;</code>: 格式化时间，保留 5 位小数<ul><li><strong><code>f&#39;...&#39;</code></strong>：<strong>f-string</strong>（格式化字符串），用于插入变量值</li><li><strong><code>&#123;&#125;</code></strong>：<strong>占位符</strong>，用于插入变量或表达式的计算结果</li><li><strong><code>:.5f</code></strong>：格式化输出，<code>.</code>：表示小数点；<code>5</code>：保留 <strong>5 位小数</strong>；<code>f</code>：表示 <strong>浮点数格式</strong></li></ul></li><li><code>timer.start()</code>: <strong>重新启动计时器</strong></li></ul><h2 id="正态分布与平方损失"><a href="#正态分布与平方损失" class="headerlink" title="正态分布与平方损失"></a>正态分布与平方损失</h2><p>正态分布（normal distribution），也称为<em>高斯分布</em>（Gaussian distribution）</p><p>若随机变量$x$具有均值$\mu$和方差$\sigma^2$（标准差$\sigma$），其正态分布概率密度函数如下：<br>$$<br>p(x) &#x3D; \frac{1}{\sqrt{2 \pi \sigma^2}} \exp\left(-\frac{1}{2 \sigma^2} (x - \mu)^2\right)<br>$$</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">normal</span>(<span class="params">x, mu, sigma</span>):</span><br><span class="line">    p = <span class="number">1</span> / math.sqrt(<span class="number">2</span> * math.pi * sigma**<span class="number">2</span>)</span><br><span class="line">    <span class="keyword">return</span> p * np.exp(-<span class="number">0.5</span> / sigma**<span class="number">2</span> * (x - mu)**<span class="number">2</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 再次使用numpy进行可视化</span></span><br><span class="line">x = np.arange(-<span class="number">7</span>, <span class="number">7</span>, <span class="number">0.01</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 均值和标准差对</span></span><br><span class="line">params = [(<span class="number">0</span>, <span class="number">1</span>), (<span class="number">0</span>, <span class="number">2</span>), (<span class="number">3</span>, <span class="number">1</span>)]</span><br><span class="line">d2l.plot(x, [normal(x, mu, sigma) <span class="keyword">for</span> mu, sigma <span class="keyword">in</span> params], xlabel=<span class="string">&#x27;x&#x27;</span>,</span><br><span class="line">         ylabel=<span class="string">&#x27;p(x)&#x27;</span>, figsize=(<span class="number">4.5</span>, <span class="number">2.5</span>),</span><br><span class="line">         legend=[<span class="string">f&#x27;mean <span class="subst">&#123;mu&#125;</span>, std <span class="subst">&#123;sigma&#125;</span>&#x27;</span> <span class="keyword">for</span> mu, sigma <span class="keyword">in</span> params])</span><br></pre></td></tr></table></figure><p><img src="/../img/screenshot/normal_distribution.png" alt="normal_distribution"></p><p>均方误差损失函数（简称均方损失）可以用于线性回归的一个原因是： 我们假设了观测中包含噪声，其中噪声服从正态分布。 噪声正态分布如下式:<br>$$<br>y &#x3D; \mathbf{w}^\top \mathbf{x} + b + \epsilon<br>$$<br>其中，$\epsilon \sim \mathcal{N}(0, \sigma^2)$</p><p>我们现在可以写出通过给定的$\mathbf{x}$观测到特定$y$的<em>似然</em>（likelihood）：<br>$$<br>P(y \mid \mathbf{x}) &#x3D; \frac{1}{\sqrt{2 \pi \sigma^2}} \exp\left(-\frac{1}{2 \sigma^2} (y - \mathbf{w}^\top \mathbf{x} - b)^2\right)<br>$$<br>根据极大似然估计法，参数$\mathbf{w}$和$b$的最优值是使整个数据集的<em>似然</em>最大的值：<br>$$<br>P(\mathbf y \mid \mathbf X) &#x3D; \prod_{i&#x3D;1}^{n} p(y^{(i)}|\mathbf{x}^{(i)})<br>$$<br>根据极大似然估计法选择的估计量称为<em>极大似然估计量</em>。虽然使许多指数函数的乘积最大化看起来很困难，但是我们可以在不改变目标的前提下，通过最大化似然对数来简化。由于历史原因，优化通常是说最小化而不是最大化。我们可以改为<em>最小化负对数似然</em>$-\log P(\mathbf y \mid \mathbf X)$。由此可以得到的数学公式是：<br>$$<br>-\log P(\mathbf y \mid \mathbf X) &#x3D; \sum_{i&#x3D;1}^n \frac{1}{2} \log(2 \pi \sigma^2) + \frac{1}{2 \sigma^2} \left(y^{(i)} - \mathbf{w}^\top \mathbf{x}^{(i)} - b\right)^2<br>$$<br>现在我们只需要假设$\sigma$是某个固定常数就可以忽略第一项，因为第一项不依赖于$\mathbf{w}$和$b$。现在第二项除了常数$\frac{1}{\sigma^2}$外，其余部分和前面介绍的均方误差是一样的。幸运的是，上面式子的解并不依赖于$\sigma$。因此，在高斯噪声的假设下，最小化均方误差等价于对线性模型的极大似然估计。</p>]]></content>
      
      
      <categories>
          
          <category> AI </category>
          
          <category> 机器学习 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>概率（深度学习）</title>
      <link href="/2025/03/07/2025-3-7-%E6%A6%82%E7%8E%87%EF%BC%88%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%EF%BC%89/"/>
      <url>/2025/03/07/2025-3-7-%E6%A6%82%E7%8E%87%EF%BC%88%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h1 id="概率-（深度学习）"><a href="#概率-（深度学习）" class="headerlink" title="概率 （深度学习）"></a>概率 （深度学习）</h1><p>简单地说，机器学习就是做出预测</p><p>概率是一种灵活的语言，用于说明我们的确定程度，并且它可以有效地应用于广泛的领域中</p><h2 id="基本概率论"><a href="#基本概率论" class="headerlink" title="基本概率论"></a>基本概率论</h2><h3 id="掷骰子"><a href="#掷骰子" class="headerlink" title="掷骰子"></a>掷骰子</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">%matplotlib inline</span><br><span class="line"><span class="keyword">import</span> torch</span><br><span class="line"><span class="keyword">from</span> torch.distributions <span class="keyword">import</span> multinomial</span><br><span class="line"><span class="keyword">from</span> d2l <span class="keyword">import</span> torch <span class="keyword">as</span> d2l</span><br><span class="line"></span><br><span class="line">fair_probs = torch.ones([<span class="number">6</span>]) / <span class="number">6</span></span><br><span class="line">multinomial.Multinomial(<span class="number">1</span>, fair_probs).sample() <span class="comment"># tensor([0., 0., 0., 1., 0., 0.])</span></span><br><span class="line"></span><br><span class="line">multinomial.Multinomial(<span class="number">10</span>, fair_probs).sample() <span class="comment"># tensor([1., 2., 2., 1., 1., 3.])</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 将结果存储为32位浮点数以进行除法</span></span><br><span class="line">counts = multinomial.Multinomial(<span class="number">1000</span>, fair_probs).sample()</span><br><span class="line">counts / <span class="number">1000</span>  <span class="comment"># 相对频率作为估计值</span></span><br><span class="line"><span class="comment"># tensor([0.1820, 0.1790, 0.1600, 0.1510, 0.1770, 0.1510])</span></span><br></pre></td></tr></table></figure><h4 id="创建公平骰子的概率分布"><a href="#创建公平骰子的概率分布" class="headerlink" title="创建公平骰子的概率分布"></a>创建公平骰子的概率分布</h4><ul><li><p><code>torch.distributions.multinomial</code>：用于多项式分布采样（类似投掷骰子的实验）</p></li><li><p><code>fair_probs = torch.ones([6]) / 6</code>：</p><ul><li><code>torch.ones([6])</code> 生成一个全为 <code>1</code> 的长度为 <code>6</code> 的张量（对应于 6 个骰子面）</li><li><code>/ 6</code> 让每个面出现的概率都是 <code>1/6</code>，表示 <strong>公平骰子</strong></li></ul></li><li><pre><code class="language-python">torch.distributions.Multinomial(total_count, probs).sample(sample_shape=torch.Size([]))<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">  - `total_count`：整数，表示 **一次实验中进行的独立试验次数**（比如投掷几次骰子）</span><br><span class="line">  - `probs`：张量，表示 **每个类别（骰子面）的概率分布**（必须是非负数，且和为 1）</span><br><span class="line">  - `sample_shape`（可选）：生成多个样本的形状，通常不需要指定</span><br><span class="line"></span><br><span class="line">#### 投掷10次骰子</span><br><span class="line"></span><br><span class="line">- `Multinomial(10, fair_probs).sample()` **相当于投掷 10 次骰子**，统计每个面的出现次数</span><br><span class="line"></span><br><span class="line">### 绘图</span><br><span class="line"></span><br><span class="line">```python</span><br><span class="line">counts = multinomial.Multinomial(10, fair_probs).sample((500,))</span><br><span class="line">cum_counts = counts.cumsum(dim=0)</span><br><span class="line">estimates = cum_counts / cum_counts.sum(dim=1, keepdims=True)</span><br><span class="line"></span><br><span class="line">d2l.set_figsize((6, 4.5))</span><br><span class="line">for i in range(6):</span><br><span class="line">    d2l.plt.plot(estimates[:, i].numpy(),</span><br><span class="line">                 label=(&quot;P(die=&quot; + str(i + 1) + &quot;)&quot;))</span><br><span class="line">d2l.plt.axhline(y=0.167, color=&#x27;black&#x27;, linestyle=&#x27;dashed&#x27;)</span><br><span class="line">d2l.plt.gca().set_xlabel(&#x27;Groups of experiments&#x27;)</span><br><span class="line">d2l.plt.gca().set_ylabel(&#x27;Estimated probability&#x27;)</span><br><span class="line">d2l.plt.legend();</span><br></pre></td></tr></table></figure></code></pre></li></ul><p><img src="/../img/screenshot/probability_test.png" alt="图像"></p><h4 id="生成数据"><a href="#生成数据" class="headerlink" title="生成数据"></a>生成数据</h4><ul><li><code>multinomial.Multinomial(10, fair_probs).sample((500,))</code>：<ul><li><strong><code>10</code></strong>：每次实验投掷 10 次骰子</li><li><strong><code>fair_probs</code></strong>：每个面出现的概率是 <code>1/6</code></li><li><strong><code>sample((500,))</code></strong>：表示<strong>重复实验 500 组</strong>，结果 <code>counts</code> 是一个形状 <code>(500, 6)</code> 的张量，其中每一行表示 <strong>10 次投掷后各个面出现的次数</strong>。</li></ul></li></ul><h4 id="计算累积出现次数"><a href="#计算累积出现次数" class="headerlink" title="计算累积出现次数"></a>计算累积出现次数</h4><ul><li><code>cum_counts = counts.cumsum(dim=0)</code>：<ul><li><code>cumsum(dim=0)</code> <strong>按行累加</strong>，即 <strong>计算前 <code>n</code> 组实验的累计次数</strong></li><li><code>cum_counts[i]</code> <strong>表示前 <code>i+1</code> 组实验中各个骰子面出现的总次数</strong></li></ul></li></ul><h4 id="计算每个面的估计概率"><a href="#计算每个面的估计概率" class="headerlink" title="计算每个面的估计概率"></a>计算每个面的估计概率</h4><ul><li><code>estimates = cum_counts / cum_counts.sum(dim=1, keepdims=True)</code>：<ul><li><code>cum_counts.sum(dim=1, keepdims=True)</code> 计算<strong>每组实验的总投掷次数</strong></li><li><strong>每个面的累计出现次数</strong> ÷ <strong>总投掷次数</strong> &#x3D; <strong>估计概率</strong></li></ul></li></ul><h4 id="画图"><a href="#画图" class="headerlink" title="画图"></a>画图</h4><ul><li><p><code>d2l.set_figsize((6, 4.5))</code>：<strong>设置绘图大小</strong>，<code>(6, 4.5)</code> 表示宽 <code>6</code>、高 <code>4.5</code></p></li><li><pre><code class="language-python">for i in range(6):    d2l.plt.plot(estimates[:, i].numpy(),                 label=(&quot;P(die=&quot; + str(i + 1) + &quot;)&quot;))</code></pre></li><li><p><code>estimates[:, i].numpy()</code>：<strong>取出第 <code>i</code> 列的所有行数据，并转换为 NumPy 数组</strong>，以便 Matplotlib 可以绘制图像</p><ul><li><code>estimates</code> 是一个 <strong>张量（Tensor）</strong>，它的形状是 <code>(500, 6)</code></li><li>索引 <code>[:, i]</code>：<ol><li><code>:</code> 代表 <strong>取所有行</strong>（即 500 组实验）</li><li><code>i</code> 代表 <strong>取第 <code>i</code> 列</strong>（即骰子第 <code>i+1</code> 面的估计概率）</li><li><strong>结果是一个 <code>(500,)</code> 形状的张量</strong>，表示 <strong>随着实验次数增加，骰子第 <code>i+1</code> 面的估计概率变化</strong></li></ol></li><li><code>.numpy()</code>：<code>estimates[:, i]</code> 是一个 PyTorch <strong>张量（Tensor）</strong>，但 Matplotlib <strong>只能绘制 NumPy 数组</strong>，所以 <code>.numpy()</code> <strong>将其转换为 NumPy 数组</strong>，方便绘制</li><li><code>label=(&quot;P(die=&quot; + str(i + 1) + &quot;)&quot;)</code>： 添加图例，例如 <code>P(die=1)</code>、<code>P(die=2)</code> 等</li></ul></li></ul><h4 id="添加参考线"><a href="#添加参考线" class="headerlink" title="添加参考线"></a>添加参考线</h4><ul><li><code>d2l.plt.axhline(y=0.167, color=&#39;black&#39;, linestyle=&#39;dashed&#39;)</code>：画一条 <strong>y&#x3D;0.167</strong> 的 <strong>水平虚线</strong>（<code>1/6 ≈ 0.167</code>），表示<strong>理论概率</strong></li></ul><h4 id="设置坐标轴和图例"><a href="#设置坐标轴和图例" class="headerlink" title="设置坐标轴和图例"></a>设置坐标轴和图例</h4><ul><li><code>set_xlabel(&#39;Groups of experiments&#39;)</code>：x 轴表示 <strong>实验次数</strong></li><li><code>set_ylabel(&#39;Estimated probability&#39;)</code>：y 轴表示 <strong>每个面的估计概率</strong></li><li><code>plt.legend()</code>：显示图例（不同面的概率曲线）</li><li><code>d2l.plt.gca()</code> 是 <strong><code>matplotlib.pyplot.gca()</code></strong> 的调用方式，它的作用是 <strong>获取当前的坐标轴（Axes）对象</strong>，用于进一步调整图表的格式</li><li><code>gca()</code> 代表 <strong>“Get Current Axes”（获取当前坐标轴）</strong>，它返回当前的 <code>Axes</code> 对象，允许我们对坐标轴进行更细致的调整，例如：<ul><li>修改 <code>x</code> 轴和 <code>y</code> 轴的标签</li><li>调整刻度</li><li>设置标题</li><li>修改坐标轴的外观</li></ul></li></ul><h2 id="概率论公理"><a href="#概率论公理" class="headerlink" title="概率论公理"></a>概率论公理</h2><p><em>概率</em>（probability）可以被认为是将集合映射到真实值的函数。在给定的样本空间$\mathcal{S}$中，事件$\mathcal{A}$的概率，表示为$P(\mathcal{A})$，满足以下属性：</p><ul><li>对于任意事件$\mathcal{A}$，其概率从不会是负数，即$P(\mathcal{A}) \geq 0$；</li><li>整个样本空间的概率为$1$，即$P(\mathcal{S}) &#x3D; 1$；</li><li>对于<em>互斥</em>（mutually exclusive）事件（对于所有$i \neq j$都有$\mathcal{A}_i \cap \mathcal{A}_j &#x3D; \emptyset$）的任意一个可数序列$\mathcal{A}_1, \mathcal{A}<em>2, \ldots$，序列中任意一个事件发生的概率等于它们各自发生的概率之和，即$P(\bigcup</em>{i&#x3D;1}^{\infty} \mathcal{A}<em>i) &#x3D; \sum</em>{i&#x3D;1}^{\infty} P(\mathcal{A}_i)$。</li></ul><h2 id="处理多个随机变量"><a href="#处理多个随机变量" class="headerlink" title="处理多个随机变量"></a>处理多个随机变量</h2><h3 id="联合概率"><a href="#联合概率" class="headerlink" title="联合概率"></a>联合概率</h3><p>第一个被称为<em>联合概率</em>（joint probability）$P(A&#x3D;a,B&#x3D;b)$：$A&#x3D;a$和$B&#x3D;b$同时满足的概率</p><ul><li>$P(A &#x3D; a, B&#x3D;b) \leq P(A&#x3D;a)$</li></ul><h3 id="条件概率"><a href="#条件概率" class="headerlink" title="条件概率"></a>条件概率</h3><ul><li>$0 \leq \frac{P(A&#x3D;a, B&#x3D;b)}{P(A&#x3D;a)} \leq 1$：我们称这个比率为<em>条件概率</em>（conditional probability）</li><li>$P(B&#x3D;b \mid A&#x3D;a)$</li></ul><h3 id="贝叶斯定理"><a href="#贝叶斯定理" class="headerlink" title="贝叶斯定理"></a>贝叶斯定理</h3><p>$$<br>P(A \mid B) &#x3D; \frac{P(B \mid A) P(A)}{P(B)}<br>$$</p><p>这里我们使用紧凑的表示法：其中$P(A, B)$是一个<em>联合分布</em>（joint distribution），$P(A \mid B)$是一个<em>条件分布</em>（conditional distribution）。这种分布可以在给定值$A &#x3D; a, B&#x3D;b$上进行求值。</p><h3 id="边际化"><a href="#边际化" class="headerlink" title="边际化"></a>边际化</h3><p>$$<br>P(B) &#x3D; \sum_{A} P(A, B)<br>$$</p><p>$B$的概率相当于计算$A$的所有可能选择，并将所有选择的联合概率聚合在一起：这也称为<em>边际化</em>（marginalization）。边际化结果的概率或分布称为<em>边际概率</em>（marginal probability）或<em>边际分布</em>（marginal distribution）。</p><h3 id="独立性"><a href="#独立性" class="headerlink" title="独立性"></a>独立性</h3><p>$$<br>P(A, B) &#x3D; P(A)P(B)<br>$$</p><p>如果两个随机变量$A$和$B$是独立的，意味着事件$A$的发生跟$B$事件的发生无关。在这种情况下，统计学家通常将这一点表述为$A \perp  B$。</p><p>同样地，给定另一个随机变量$C$时，两个随机变量$A$和$B$是<em>条件独立的</em>（conditionally independent），当且仅当$P(A, B \mid C) &#x3D; P(A \mid C)P(B \mid C)$。这个情况表示为$A \perp B \mid C$。</p><h3 id="期望和方差"><a href="#期望和方差" class="headerlink" title="期望和方差"></a>期望和方差</h3><p>一个随机变量$X$的<em>期望</em>（expectation，或平均值（average））:<br>$$<br>E[X] &#x3D; \sum_{x} x P(X &#x3D; x)<br>$$<br>函数$f(x)$的输入是从分布$P$中抽取的随机变量：<br>$$<br>E_{x \sim P}[f(x)] &#x3D; \sum_x f(x) P(x)<br>$$<br>衡量随机变量$X$与其期望值的偏差，可通过方差来量化：<br>$$<br>\mathrm{Var}[X] &#x3D; E\left[(X - E[X])^2\right] &#x3D;<br>E[X^2] - E[X]^2<br>$$<br>随机变量函数的方差衡量的是：当从该随机变量分布中采样不同值$x$时，函数值偏离该函数的期望的程度：<br>$$<br>\mathrm{Var}[f(x)] &#x3D; E\left[\left(f(x) - E[f(x)]\right)^2\right]<br>$$<br><strong>方差的平方根被称为<em>标准差</em>（standard deviation）</strong></p>]]></content>
      
      
      <categories>
          
          <category> AI </category>
          
          <category> 机器学习 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>查阅文档（深度学习）</title>
      <link href="/2025/03/07/2025-3-7-%E6%9F%A5%E9%98%85%E6%96%87%E6%A1%A3%EF%BC%88%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%EF%BC%89/"/>
      <url>/2025/03/07/2025-3-7-%E6%9F%A5%E9%98%85%E6%96%87%E6%A1%A3%EF%BC%88%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h1 id="查阅文档（深度学习）"><a href="#查阅文档（深度学习）" class="headerlink" title="查阅文档（深度学习）"></a>查阅文档（深度学习）</h1><h2 id="查找模块中的所有函数和类"><a href="#查找模块中的所有函数和类" class="headerlink" title="查找模块中的所有函数和类"></a>查找模块中的所有函数和类</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> torch</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">dir</span>(torch.distributions))</span><br><span class="line"></span><br><span class="line"><span class="comment"># [&#x27;AbsTransform&#x27;, &#x27;AffineTransform&#x27;, &#x27;Bernoulli&#x27;, &#x27;Beta&#x27;, &#x27;Binomial&#x27;, &#x27;CatTransform&#x27;, &#x27;Categorical&#x27;, &#x27;Cauchy&#x27;, &#x27;Chi2&#x27;, &#x27;ComposeTransform&#x27;, &#x27;ContinuousBernoulli&#x27;, &#x27;CorrCholeskyTransform&#x27;, &#x27;CumulativeDistributionTransform&#x27;, &#x27;Dirichlet&#x27;, &#x27;Distribution&#x27;, &#x27;ExpTransform&#x27;, &#x27;Exponential&#x27;, &#x27;ExponentialFamily&#x27;, &#x27;FisherSnedecor&#x27;, &#x27;Gamma&#x27;, &#x27;Geometric&#x27;, &#x27;Gumbel&#x27;, &#x27;HalfCauchy&#x27;, &#x27;HalfNormal&#x27;, &#x27;Independent&#x27;, &#x27;IndependentTransform&#x27;, &#x27;Kumaraswamy&#x27;, &#x27;LKJCholesky&#x27;, &#x27;Laplace&#x27;, &#x27;LogNormal&#x27;, &#x27;LogisticNormal&#x27;, &#x27;LowRankMultivariateNormal&#x27;, &#x27;LowerCholeskyTransform&#x27;, &#x27;MixtureSameFamily&#x27;, &#x27;Multinomial&#x27;, &#x27;MultivariateNormal&#x27;, &#x27;NegativeBinomial&#x27;, &#x27;Normal&#x27;, &#x27;OneHotCategorical&#x27;, &#x27;OneHotCategoricalStraightThrough&#x27;, &#x27;Pareto&#x27;, &#x27;Poisson&#x27;, &#x27;PowerTransform&#x27;, &#x27;RelaxedBernoulli&#x27;, &#x27;RelaxedOneHotCategorical&#x27;, &#x27;ReshapeTransform&#x27;, &#x27;SigmoidTransform&#x27;, &#x27;SoftmaxTransform&#x27;, &#x27;SoftplusTransform&#x27;, &#x27;StackTransform&#x27;, &#x27;StickBreakingTransform&#x27;, &#x27;StudentT&#x27;, &#x27;TanhTransform&#x27;, &#x27;Transform&#x27;, &#x27;TransformedDistribution&#x27;, &#x27;Uniform&#x27;, &#x27;VonMises&#x27;, &#x27;Weibull&#x27;, &#x27;Wishart&#x27;, &#x27;__all__&#x27;, &#x27;__builtins__&#x27;, &#x27;__cached__&#x27;, &#x27;__doc__&#x27;, &#x27;__file__&#x27;, &#x27;__loader__&#x27;, &#x27;__name__&#x27;, &#x27;__package__&#x27;, &#x27;__path__&#x27;, &#x27;__spec__&#x27;, &#x27;bernoulli&#x27;, &#x27;beta&#x27;, &#x27;biject_to&#x27;, &#x27;binomial&#x27;, &#x27;categorical&#x27;, &#x27;cauchy&#x27;, &#x27;chi2&#x27;, &#x27;constraint_registry&#x27;, &#x27;constraints&#x27;, &#x27;continuous_bernoulli&#x27;, &#x27;dirichlet&#x27;, &#x27;distribution&#x27;, &#x27;exp_family&#x27;, &#x27;exponential&#x27;, &#x27;fishersnedecor&#x27;, &#x27;gamma&#x27;, &#x27;geometric&#x27;, &#x27;gumbel&#x27;, &#x27;half_cauchy&#x27;, &#x27;half_normal&#x27;, &#x27;identity_transform&#x27;, &#x27;independent&#x27;, &#x27;kl&#x27;, &#x27;kl_divergence&#x27;, &#x27;kumaraswamy&#x27;, &#x27;laplace&#x27;, &#x27;lkj_cholesky&#x27;, &#x27;log_normal&#x27;, &#x27;logistic_normal&#x27;, &#x27;lowrank_multivariate_normal&#x27;, &#x27;mixture_same_family&#x27;, &#x27;multinomial&#x27;, &#x27;multivariate_normal&#x27;, &#x27;negative_binomial&#x27;, &#x27;normal&#x27;, &#x27;one_hot_categorical&#x27;, &#x27;pareto&#x27;, &#x27;poisson&#x27;, &#x27;register_kl&#x27;, &#x27;relaxed_bernoulli&#x27;, &#x27;relaxed_categorical&#x27;, &#x27;studentT&#x27;, &#x27;transform_to&#x27;, &#x27;transformed_distribution&#x27;, &#x27;transforms&#x27;, &#x27;uniform&#x27;, &#x27;utils&#x27;, &#x27;von_mises&#x27;, &#x27;weibull&#x27;, &#x27;wishart&#x27;]</span></span><br></pre></td></tr></table></figure><p>通常可以忽略以“<code>__</code>”（双下划线）开始和结束的函数，它们是Python中的特殊对象， 或以单个“<code>_</code>”（单下划线）开始的函数，它们通常是内部函数。根据剩余的函数名或属性名，我们可能会猜测这个模块提供了各种生成随机数的方法， 包括从均匀分布（<code>uniform</code>）、正态分布（<code>normal</code>）和多项分布（<code>multinomial</code>）中采样。</p><h2 id="查找特定函数和类的用法"><a href="#查找特定函数和类的用法" class="headerlink" title="查找特定函数和类的用法"></a>查找特定函数和类的用法</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">help</span>(torch.ones)</span><br><span class="line"></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">Help on built-in function ones in module torch:</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">ones(...)</span></span><br><span class="line"><span class="string">    ones(*size, *, out=None, dtype=None, layout=torch.strided, device=None, requires_grad=False) -&gt; Tensor</span></span><br><span class="line"><span class="string">    </span></span><br><span class="line"><span class="string">    Returns a tensor filled with the scalar value `1`, with the shape defined</span></span><br><span class="line"><span class="string">    by the variable argument :attr:`size`.</span></span><br><span class="line"><span class="string">    </span></span><br><span class="line"><span class="string">    Args:</span></span><br><span class="line"><span class="string">        size (int...): a sequence of integers defining the shape of the output tensor.</span></span><br><span class="line"><span class="string">            Can be a variable number of arguments or a collection like a list or tuple.</span></span><br><span class="line"><span class="string">    </span></span><br><span class="line"><span class="string">    Keyword arguments:</span></span><br><span class="line"><span class="string">        out (Tensor, optional): the output tensor.</span></span><br><span class="line"><span class="string">        dtype (:class:`torch.dtype`, optional): the desired data type of returned tensor.</span></span><br><span class="line"><span class="string">            Default: if ``None``, uses a global default (see :func:`torch.set_default_tensor_type`).</span></span><br><span class="line"><span class="string">        layout (:class:`torch.layout`, optional): the desired layout of returned Tensor.</span></span><br><span class="line"><span class="string">            Default: ``torch.strided``.</span></span><br><span class="line"><span class="string">        device (:class:`torch.device`, optional): the desired device of returned tensor.</span></span><br><span class="line"><span class="string">            Default: if ``None``, uses the current device for the default tensor type</span></span><br><span class="line"><span class="string">            (see :func:`torch.set_default_tensor_type`). :attr:`device` will be the CPU</span></span><br><span class="line"><span class="string">            for CPU tensor types and the current CUDA device for CUDA tensor types.</span></span><br><span class="line"><span class="string">        requires_grad (bool, optional): If autograd should record operations on the</span></span><br><span class="line"><span class="string">            returned tensor. Default: ``False``.</span></span><br><span class="line"><span class="string">    </span></span><br><span class="line"><span class="string">    Example::</span></span><br><span class="line"><span class="string">    </span></span><br><span class="line"><span class="string">        &gt;&gt;&gt; torch.ones(2, 3)</span></span><br><span class="line"><span class="string">        tensor([[ 1.,  1.,  1.],</span></span><br><span class="line"><span class="string">                [ 1.,  1.,  1.]])</span></span><br><span class="line"><span class="string">    </span></span><br><span class="line"><span class="string">        &gt;&gt;&gt; torch.ones(5)</span></span><br><span class="line"><span class="string">        tensor([ 1.,  1.,  1.,  1.,  1.])</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> AI </category>
          
          <category> 机器学习 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>面向对象（JavaScript）</title>
      <link href="/2025/03/07/2025-3-7-%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%EF%BC%88JavaScript%EF%BC%89/"/>
      <url>/2025/03/07/2025-3-7-%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%EF%BC%88JavaScript%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h1 id="面向对象（JavaScript）"><a href="#面向对象（JavaScript）" class="headerlink" title="面向对象（JavaScript）"></a>面向对象（JavaScript）</h1><p><strong>JavaScript中一切引用类型都是对象，对象就是属性的集合。</strong></p><p>Array、Function、Object、Date、RegExp等都是引用类型</p><p>也就是说 ，<strong>数组是对象、函数是对象、正则是对象、对象还是对象。</strong></p><h2 id="原型和原型链"><a href="#原型和原型链" class="headerlink" title="原型和原型链"></a>原型和原型链</h2><p>原型存在的意义就是组成原型链</p><p>原型链存在的意义就是继承</p><p>继承存在的意义就是属性共享</p><h3 id="原型"><a href="#原型" class="headerlink" title="原型"></a>原型</h3><p>每一个对象从被创建开始就和另一个对象关联，从另一个对象上继承其属性，这个<strong>另一个对象</strong>就是 <strong>原型</strong></p><p><em>当访问一个对象的属性时，先在对象的本身找，找不到就去对象的原型上找，如果还是找不到，就去对象的原型（原型也是对象，也有它自己的原型）的原型上找，如此继续，直到找到为止，或者查找到最顶层的原型对象中也没有找到，就结束查找，返回<code>undefined</code></em></p><h3 id="原型链"><a href="#原型链" class="headerlink" title="原型链"></a>原型链</h3><p><strong>这条由对象及其原型组成的链就叫做原型链。</strong></p><h2 id="proto-和-prototype"><a href="#proto-和-prototype" class="headerlink" title="proto 和 prototype"></a>proto 和 prototype</h2><h3 id="proto"><a href="#proto" class="headerlink" title="_proto_"></a>_<em>proto</em>_</h3><p>每个 JavaScript 对象（除了 null）都自动拥有一个隐藏的属性 <strong>proto</strong>，它指向该对象的原型对象</p><h3 id="prototype"><a href="#prototype" class="headerlink" title="prototype"></a>prototype</h3><p>所有的 JavaScript 对象都会从一个 prototype（原型对象）中继承属性和方法</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    <span class="string">&quot;use strict&quot;</span>;</span><br><span class="line"></span><br><span class="line">    var Student = &#123;</span><br><span class="line">        name: <span class="string">&quot;student&quot;</span>,</span><br><span class="line">        age: <span class="number">18</span>,</span><br><span class="line">        run: function() &#123;</span><br><span class="line">            console.log(this.name + <span class="string">&quot;run...&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    var zerd1y = &#123;</span><br><span class="line">        name: <span class="string">&quot;zerd1y&quot;</span>,</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    zerd1y.__proto__ = Student;</span><br><span class="line">    zerd1y.run();</span><br><span class="line"></span><br><span class="line">    var Bird = &#123;</span><br><span class="line">        fly: function() &#123;</span><br><span class="line">            console.log(this.name + <span class="string">&quot;fly..&quot;</span>)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    zerd1y.__proto__ = Bird;</span><br><span class="line">    zerd1y.fly();</span><br><span class="line"></span><br><span class="line">    zerd1y.run(); // Uncaught TypeError: zerd1y.run <span class="keyword">is</span> <span class="keyword">not</span> a function</span><br><span class="line"></span><br><span class="line">    &lt;/script&gt;</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">Student</span>(<span class="params">name</span>) &#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">name</span> = name;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 给student新增一个方法</span></span><br><span class="line"><span class="title class_">Student</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">hello</span> = <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="title function_">alert</span>(<span class="string">&quot;hello&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="继承"><a href="#继承" class="headerlink" title="继承"></a>继承</h2><h3 id="class-…-extends"><a href="#class-…-extends" class="headerlink" title="class … extends"></a>class … extends</h3><p><code>class </code> 关键字：ES6引入，但底层机制仍然基于原型继承</p><p>JavaScript 类继承使用 <code>extends</code> 关键字</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 定义一个学生的类</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Student</span> &#123;</span><br><span class="line">    <span class="title function_">constructor</span>(<span class="params">name</span>) &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">name</span> = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">hello</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="title function_">alert</span>(<span class="string">&quot;hello&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> <span class="title class_">Xiao</span> = <span class="keyword">new</span> <span class="title class_">Student</span>(<span class="string">&quot;Xiao&quot;</span>);</span><br><span class="line"><span class="keyword">var</span> zerd1y = <span class="keyword">new</span> <span class="title class_">Student</span>(<span class="string">&quot;zerd1y&quot;</span>);</span><br></pre></td></tr></table></figure><h3 id="super"><a href="#super" class="headerlink" title="super"></a>super</h3><p><strong>super()</strong> 方法引用父类的构造方法</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Student</span> &#123;</span><br><span class="line">    <span class="title function_">constructor</span>(<span class="params">name</span>) &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">name</span> = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">hello</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="title function_">alert</span>(<span class="string">&quot;hello&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> <span class="title class_">Xiao</span> = <span class="keyword">new</span> <span class="title class_">Student</span>(<span class="string">&quot;Xiao&quot;</span>);</span><br><span class="line"><span class="keyword">var</span> zerd1y = <span class="keyword">new</span> <span class="title class_">Student</span>(<span class="string">&quot;zerd1y&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">newStudent</span> <span class="keyword">extends</span> <span class="title class_ inherited__">Student</span> &#123;</span><br><span class="line">    <span class="title function_">constructor</span>(<span class="params">name, grade</span>) &#123;</span><br><span class="line">        <span class="variable language_">super</span>(name);</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">grade</span> = grade;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">myGrade</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="title function_">alert</span>(<span class="string">&quot;Grade one&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="BOM"><a href="#BOM" class="headerlink" title="BOM"></a>BOM</h2><p><em>BOM 使 JavaScript 有能力与浏览器”对话”</em></p><p>BOM（Browser Object Model）即浏览器对象模型，它提供了独立于内容而与浏览器窗口进行交互的对象，其核心对象是 window</p><h3 id="浏览器"><a href="#浏览器" class="headerlink" title="浏览器"></a>浏览器</h3><ul><li>IE （Internet Explorer）</li><li>Chrome</li><li>Firefox</li><li>Safari</li></ul><h3 id="window-对象（重要）"><a href="#window-对象（重要）" class="headerlink" title="window 对象（重要）"></a>window 对象（重要）</h3><ul><li>所有浏览器都支持 window 对象。它表示浏览器窗口</li><li>所有 JavaScript 全局对象、全局函数以及全局变量均自动成为 window 对象的成员</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">window</span>.<span class="property">innerHeight</span> <span class="comment">// 浏览器窗口的内容区域的高度</span></span><br><span class="line">&gt; <span class="number">506</span></span><br><span class="line"><span class="variable language_">window</span>.<span class="property">innerWidth</span> <span class="comment">// 浏览器窗口的内容区域的宽度</span></span><br><span class="line">&gt; <span class="number">1659</span></span><br><span class="line"><span class="variable language_">window</span>.<span class="property">outerHeight</span> <span class="comment">// 浏览器窗口外侧的高度</span></span><br><span class="line">&gt; <span class="number">1019</span></span><br><span class="line"><span class="variable language_">window</span>.<span class="property">outerWidth</span> <span class="comment">// 浏览器窗口外侧的宽度</span></span><br><span class="line">&gt; <span class="number">1707</span></span><br></pre></td></tr></table></figure><h3 id="navigator-对象"><a href="#navigator-对象" class="headerlink" title="navigator 对象"></a>navigator 对象</h3><p>window.navigator 对象包含有关访问者浏览器的信息</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">navigator.<span class="property">appName</span></span><br><span class="line">&gt; <span class="string">&#x27;Netscape&#x27;</span></span><br><span class="line">navigator.<span class="property">appVersion</span></span><br><span class="line">&gt; <span class="string">&#x27;5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/133.0.0.0 Safari/537.36 Edg/133.0.0.0&#x27;</span></span><br><span class="line">navigator.<span class="property">platform</span></span><br><span class="line">&gt; <span class="string">&#x27;Win32&#x27;</span></span><br></pre></td></tr></table></figure><p><strong>大多数情况，我们不会使用<code>navigator</code>：</strong></p><ul><li>navigator 数据可被浏览器使用者更改</li><li>一些浏览器对测试站点会识别错误</li><li>浏览器无法报告晚于浏览器发布的新操作系统</li></ul><h3 id="screen-对象"><a href="#screen-对象" class="headerlink" title="screen 对象"></a>screen 对象</h3><p>window.screen 对象包含用户屏幕的信息</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">screen.<span class="property">width</span></span><br><span class="line">&gt; <span class="number">1707</span></span><br><span class="line">screen.<span class="property">height</span></span><br><span class="line">&gt; <span class="number">1067</span></span><br></pre></td></tr></table></figure><h3 id="location-对象（重要）"><a href="#location-对象（重要）" class="headerlink" title="location 对象（重要）"></a>location 对象（重要）</h3><p>window.location 对象用于获得当前页面的地址 (URL)，并把浏览器重定向到新的页面</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">location.<span class="property">host</span></span><br><span class="line"><span class="string">&#x27;developer.mozilla.org&#x27;</span></span><br><span class="line">location.<span class="property">href</span></span><br><span class="line"><span class="string">&#x27;https://developer.mozilla.org/zh-CN/docs/Web/API/Location&#x27;</span></span><br><span class="line">location.<span class="property">protocol</span></span><br><span class="line"><span class="string">&#x27;https:&#x27;</span></span><br><span class="line">location.<span class="title function_">reload</span>() <span class="comment">// 刷新</span></span><br><span class="line">locarion.<span class="title function_">assign</span>(<span class="string">&quot;https://www.zerd1y.com/&quot;</span>)</span><br></pre></td></tr></table></figure><h3 id="document-对象"><a href="#document-对象" class="headerlink" title="document 对象"></a>document 对象</h3><p>Document 对象是 HTML 文档的根节点</p><p>Document 对象使我们可以从脚本中对 HTML 页面中的所有元素进行访问</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">document</span>.<span class="property">title</span></span><br><span class="line"><span class="string">&#x27;Document - Web API | MDN&#x27;</span></span><br><span class="line"><span class="variable language_">document</span>.<span class="property">body</span></span><br><span class="line">&lt;body&gt;​…​&lt;/body&gt;​</span><br></pre></td></tr></table></figure><p>获取具体的文档树节点</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;dl id=<span class="string">&quot;language&quot;</span>&gt;</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">dt</span>&gt;</span>language<span class="tag">&lt;/<span class="name">dt</span>&gt;</span></span></span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">dd</span>&gt;</span>Java<span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span></span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">dd</span>&gt;</span>Python<span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span></span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">dd</span>&gt;</span>C++<span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span></span><br><span class="line">&lt;/dl&gt;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="keyword">var</span> dl = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;language&#x27;</span>);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure><p>获取 cookie</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">document</span>.<span class="property">cookie</span></span><br><span class="line"><span class="string">&#x27;_gid=GA1.2.940060470.1741345570; _ga_PWTK27XVWP=GS1.1.1741399110.36.1.1741401933.0.0.0; _ga=GA1.2.2098569997.1740204047&#x27;</span></span><br></pre></td></tr></table></figure><h3 id="history-对象（不建议使用）"><a href="#history-对象（不建议使用）" class="headerlink" title="history 对象（不建议使用）"></a>history 对象（不建议使用）</h3><p>history 代表浏览器历史记录</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">history.<span class="title function_">back</span>() <span class="comment">// 后退</span></span><br><span class="line">history.<span class="title function_">forward</span>() <span class="comment">// 前进</span></span><br></pre></td></tr></table></figure><h2 id="DOM"><a href="#DOM" class="headerlink" title="DOM"></a>DOM</h2><p>当网页被加载时，浏览器会创建页面的文档对象模型（Document Object Model）</p><p>通过 HTML DOM，可访问 JavaScript HTML 文档的所有元素</p><h3 id="查找"><a href="#查找" class="headerlink" title="查找"></a>查找</h3><ul><li><p><code>var p1 = document.getElementById(&#39;p1&#39;);</code>：通过 id 查找 HTML 元素</p></li><li><p><code>var h1 = document.getElementsByTagName(&#39;h1&#39;);</code>：通过标签名查找 HTML 元素</p></li><li><p><code>var p2 = document.getElementsByClassName(&#39;p2&#39;);</code>：通过类名找到 HTML 元素</p></li></ul><p><em>example–查找 DOM 节点：</em></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&lt;div id=<span class="string">&quot;father&quot;</span>&gt;</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>languauge<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span></span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">&quot;p1&quot;</span>&gt;</span>Java<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;p2&quot;</span>&gt;</span>Python<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line">&lt;/div&gt;</span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="keyword">var</span> h1 = <span class="variable language_">document</span>.<span class="title function_">getElementsByTagName</span>(<span class="string">&#x27;h1&#x27;</span>);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="keyword">var</span> p1 = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;p1&#x27;</span>);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="keyword">var</span> p2 = <span class="variable language_">document</span>.<span class="title function_">getElementsByClassName</span>(<span class="string">&#x27;p2&#x27;</span>);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="keyword">var</span> father = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;father&#x27;</span>);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="keyword">var</span> childrens = father.<span class="property">children</span>; <span class="comment">// 获取父节点下所有子节点</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="comment">// father.firstChild</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="comment">// father.lastChild</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure><p>这是原生代码，后续会用框架（jQuery）</p><h3 id="更改"><a href="#更改" class="headerlink" title="更改"></a>更改</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;div id=<span class="string">&quot;div1&quot;</span>&gt;&lt;/div&gt;</span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="keyword">var</span> div1 = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;div1&#x27;</span>);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure><p><strong>更改文本：</strong></p><ul><li><code>div1.innerHTML=&#39;\&lt;strong&gt;hello world\&lt;/strong&gt;&#39;</code>：更改HTML内容</li><li><code>div1.innerText=&#39;Xiao Jinghuai&#39;</code>：更改文本内容</li><li><code>document.getElementById(&quot;image&quot;).src=&quot;landscape.jpg&quot;;</code>：更改HTML属性</li></ul><p>如果DOM节点已经存在元素，会被覆盖</p><p><strong>更改CSS：</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">document</span>.<span class="title function_">getElementById</span>(id).<span class="property">style</span>.<span class="property">property</span>=新样式</span><br></pre></td></tr></table></figure><p><em>example：</em></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">div1.<span class="property">style</span>.<span class="property">color</span>=<span class="string">&#x27;green&#x27;</span></span><br><span class="line">div1.<span class="property">style</span>.<span class="property">fontSize</span>=<span class="string">&#x27;100px&#x27;</span></span><br><span class="line">div1.<span class="property">style</span>.<span class="property">padding</span>=<span class="string">&#x27;10px&#x27;</span></span><br></pre></td></tr></table></figure><h3 id="删除"><a href="#删除" class="headerlink" title="删除"></a>删除</h3><ul><li><code>father.removeChild()</code></li></ul><p>先获取父节点，再通过父节点删除子节点</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;div id=<span class="string">&quot;father&quot;</span>&gt;</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>title<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span></span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">&quot;p1&quot;</span>&gt;</span>Java<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">&quot;p2&quot;</span>&gt;</span>Python<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line">&lt;/div&gt;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="keyword">var</span> self = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;p1&#x27;</span>);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> father = p1.<span class="property">parentElement</span>;</span><br><span class="line">father.<span class="title function_">removeChild</span>(self) <span class="comment">// delete Java</span></span><br><span class="line">father.<span class="title function_">removeChild</span>(father.<span class="property">children</span>[<span class="number">1</span>]) <span class="comment">// delete Python</span></span><br></pre></td></tr></table></figure><p><strong>注意：</strong></p><p>删除多个节点，children的序号时刻更新</p><h3 id="插入"><a href="#插入" class="headerlink" title="插入"></a>插入</h3><ul><li><code>createElement()</code>：创建元素</li><li><code>appendChild()</code>：添加新元素到尾部</li><li><code>insertBefore()</code>：添加新元素到开始位置</li></ul><p><em>example：</em></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">&lt;p id=<span class="string">&quot;js&quot;</span>&gt;<span class="title class_">JavaScript</span>&lt;/p&gt;</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;list&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">&quot;se&quot;</span>&gt;</span>JavaSE<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">&quot;ee&quot;</span>&gt;</span>JavaEE<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">&quot;me&quot;</span>&gt;</span>JavaME<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">    </span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="keyword">var</span> js = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;js&#x27;</span>);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="keyword">var</span> list = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;list&#x27;</span>);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        list.<span class="title function_">appendChild</span>(js);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="keyword">var</span> newP = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&#x27;p&#x27;</span>);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        newP.<span class="property">id</span> = <span class="string">&#x27;newP&#x27;</span>;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        newP.<span class="property">innerText</span> = <span class="string">&#x27;hello world&#x27;</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="keyword">var</span> myStyle = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&#x27;style&#x27;</span>);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        myStyle.<span class="title function_">setAttribute</span>(<span class="string">&#x27;type&#x27;</span>, <span class="string">&#x27;text/css&#x27;</span>);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        myStyle.<span class="property">innerHTML</span> = <span class="string">&#x27;body&#123;background-color: chartreuse&#125;&#x27;</span>;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="variable language_">document</span>.<span class="title function_">getElementsByTagName</span>(<span class="string">&#x27;head&#x27;</span>)[<span class="number">0</span>].<span class="title function_">appendChild</span>(myStyle);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="keyword">var</span> ee = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;ee&#x27;</span>);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="keyword">var</span> js = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;js&#x27;</span>);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="keyword">var</span> list = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;list&#x27;</span>);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        list.<span class="title function_">insertBefore</span>(js, ee);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure><h2 id="表单"><a href="#表单" class="headerlink" title="表单"></a>表单</h2><p>HTML 表单用于收集用户的输入信息</p><p>HTML 表单表示文档中的一个区域，此区域包含交互控件，将用户收集到的信息发送到 Web 服务器</p><ul><li><p>文本域</p></li><li><p>密码框</p></li><li><p>单选按钮</p></li><li><p>复选框</p></li><li><p>提交按钮</p></li><li><p>…</p></li></ul><h3 id="获取"><a href="#获取" class="headerlink" title="获取"></a>获取</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&lt;form action=<span class="string">&quot;#&quot;</span> method=<span class="string">&quot;post&quot;</span>&gt;</span><br><span class="line">    &lt;p&gt;</span><br><span class="line">        &lt;span&gt;用户名：&lt;/span&gt;&lt;input type=&quot;text&quot; id=&quot;username&quot;&gt;</span><br><span class="line">    &lt;/p&gt;</span><br><span class="line">    &lt;p&gt;</span><br><span class="line">        &lt;span&gt;性别：&lt;/span&gt;</span><br><span class="line">        &lt;input type=&quot;radio&quot; name=&quot;sex&quot; value=&quot;male&quot; id=&quot;male&quot;&gt;男</span><br><span class="line">        &lt;input type=&quot;radio&quot; name=&quot;sex&quot; value=&quot;female&quot; id=&quot;female&quot;&gt;女</span><br><span class="line">    &lt;/p&gt;</span><br><span class="line">&lt;/form&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">    var username = document.getElementById(&#x27;username&#x27;);</span><br><span class="line">    var male = document.getElementById(&#x27;male&#x27;);</span><br><span class="line">    var female = document.getElementById(&#x27;female&#x27;);</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 获取输入的值</span></span><br><span class="line">username.<span class="property">value</span></span><br><span class="line">&gt; <span class="string">&#x27;Xiao Jinghuai&#x27;</span></span><br><span class="line"><span class="comment">// 修改</span></span><br><span class="line">username.<span class="property">value</span> = <span class="string">&#x27;zerd1y&#x27;</span></span><br><span class="line"><span class="comment">// 单/多选框male.value只能读取value值，不能看选择了哪个</span></span><br><span class="line"><span class="comment">// 查看返回结果</span></span><br><span class="line">male.<span class="property">checked</span></span><br><span class="line">&gt; <span class="literal">true</span></span><br><span class="line">female.<span class="property">checked</span></span><br><span class="line">&gt; <span class="literal">false</span></span><br></pre></td></tr></table></figure><h3 id="验证"><a href="#验证" class="headerlink" title="验证"></a>验证</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"> &lt;form name=<span class="string">&quot;myForm&quot;</span> action=<span class="string">&quot;#&quot;</span> onsubmit=<span class="string">&quot;return validateForm()&quot;</span> method=<span class="string">&quot;post&quot;</span>&gt;</span><br><span class="line">    姓名: <span class="language-xml"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;提交&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="keyword">function</span> <span class="title function_">validateForm</span>(<span class="params"></span>) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="keyword">var</span> x=<span class="variable language_">document</span>.<span class="property">forms</span>[<span class="string">&quot;myForm&quot;</span>][<span class="string">&quot;username&quot;</span>].<span class="property">value</span>;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="keyword">if</span> (x==<span class="literal">null</span> || x==<span class="string">&quot;&quot;</span>)</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="title function_">alert</span>(<span class="string">&quot;姓名必须填写&quot;</span>);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="keyword">return</span> <span class="literal">false</span>;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 开发 </category>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>内部对象（JavaScript）</title>
      <link href="/2025/03/06/2025-3-6-%E5%86%85%E9%83%A8%E5%AF%B9%E8%B1%A1%EF%BC%88JavaScript%EF%BC%89/"/>
      <url>/2025/03/06/2025-3-6-%E5%86%85%E9%83%A8%E5%AF%B9%E8%B1%A1%EF%BC%88JavaScript%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h1 id="内部对象（JavaScript）"><a href="#内部对象（JavaScript）" class="headerlink" title="内部对象（JavaScript）"></a>内部对象（JavaScript）</h1><h2 id="Date"><a href="#Date" class="headerlink" title="Date"></a>Date</h2><h3 id="创建"><a href="#创建" class="headerlink" title="创建"></a>创建</h3><p>创建 Date 对象： <code>new Date()</code></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&quot;use strict&quot;</span>;</span><br><span class="line"><span class="keyword">var</span> now = <span class="keyword">new</span> <span class="title class_">Date</span>();</span><br><span class="line"></span><br><span class="line">now <span class="comment">// Thu Mar 06 2025 19:19:50 GMT+0800 (中国标准时间)</span></span><br><span class="line">now.<span class="title function_">getFullYear</span>() <span class="comment">// 年</span></span><br><span class="line">now.<span class="title function_">getMonth</span>() <span class="comment">// 月 （从0开始计数）</span></span><br><span class="line">now,<span class="title function_">getDate</span>() <span class="comment">// 日</span></span><br><span class="line">now.<span class="title function_">getDay</span>() <span class="comment">// 星期几</span></span><br><span class="line">now.<span class="title function_">getHours</span>() <span class="comment">// 时</span></span><br><span class="line">now.<span class="title function_">getMinutes</span>() <span class="comment">// 分</span></span><br><span class="line">now.<span class="title function_">getSeconds</span>() <span class="comment">// 秒</span></span><br><span class="line"></span><br><span class="line">now.<span class="title function_">getTime</span>() <span class="comment">// 时间戳：1970 1.1 0:00:00 至今的毫秒数 </span></span><br><span class="line"><span class="comment">// 1741259990855</span></span><br></pre></td></tr></table></figure><h3 id="转换"><a href="#转换" class="headerlink" title="转换"></a>转换</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">now = <span class="keyword">new</span> <span class="title class_">Date</span>(<span class="number">1741259990855</span>); <span class="comment">// 时间戳转换为时间</span></span><br><span class="line"><span class="comment">// Thu Mar 06 2025 19:19:50 GMT+0800 (中国标准时间)</span></span><br><span class="line">now.<span class="title function_">toLocaleDateString</span>()</span><br><span class="line"><span class="comment">// &#x27;2025/3/6&#x27;</span></span><br><span class="line">now.<span class="title function_">toLocaleString</span>()</span><br><span class="line"><span class="comment">// &#x27;2025/3/6 19:19:50&#x27;</span></span><br><span class="line">now.<span class="title function_">toGMTString</span>()</span><br><span class="line"><span class="comment">// &#x27;Thu, 06 Mar 2025 11:19:50 GMT&#x27;</span></span><br></pre></td></tr></table></figure><h2 id="JSON"><a href="#JSON" class="headerlink" title="JSON"></a>JSON</h2><p>JSON 指的是 JavaScript 对象表示法（<strong>J</strong>ava<strong>S</strong>cript <strong>O</strong>bject <strong>N</strong>otation）</p><p>JSON 是存储和交换文本信息的语法，类似 XML</p><p>JSON 比 XML 更小、更快，更易解析</p><h3 id="语法规则"><a href="#语法规则" class="headerlink" title="语法规则"></a>语法规则</h3><ul><li>对象：<code>&#123;&#125;</code></li><li>数组：<code>[]</code></li><li>数据：键值对 <code>key: value</code>，由<code>,</code>分隔</li></ul><h3 id="JSON字符串-和-JS对象-之间转换"><a href="#JSON字符串-和-JS对象-之间转换" class="headerlink" title="JSON字符串 和 JS对象 之间转换"></a>JSON字符串 和 JS对象 之间转换</h3><ul><li>JavaScript 转换为JSON：<code>JSON.stringify()</code></li><li>JSON 转换为JavaScript：<code>JSON.parse()</code></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> user = &#123;</span><br><span class="line">    <span class="attr">name</span>: <span class="string">&quot;Xiao Jinghuai&quot;</span>,</span><br><span class="line">    <span class="attr">age</span>: <span class="number">18</span>,</span><br><span class="line">    <span class="attr">major</span>: <span class="string">&quot;software engineering&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> jsonUser = <span class="title class_">JSON</span>.<span class="title function_">stringify</span>(user);</span><br><span class="line"><span class="comment">// &#x27;&#123;&quot;name&quot;:&quot;Xiao Jinghuai&quot;,&quot;age&quot;:18,&quot;major&quot;:&quot;software engineering&quot;&#125;&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> jsObj = <span class="title class_">JSON</span>.<span class="title function_">parse</span>(<span class="string">&#x27;&#123;&quot;name&quot;:&quot;Xiao Jinghuai&quot;,&quot;age&quot;:18,&quot;major&quot;:&quot;software engineering&quot;&#125;&#x27;</span>)</span><br><span class="line"><span class="comment">// &#123;name: &#x27;Xiao Jinghuai&#x27;, age: 18, major: &#x27;software engineering&#x27;&#125;</span></span><br></pre></td></tr></table></figure><h2 id="Ajax"><a href="#Ajax" class="headerlink" title="Ajax"></a>Ajax</h2><p>AJAX &#x3D; Asynchronous JavaScript and XML（异步的 JavaScript 和 XML）</p><p>浏览器与服务器之间的一种异步通信方式</p><h2 id="jQuery"><a href="#jQuery" class="headerlink" title="jQuery"></a>jQuery</h2><p><code>$(&quot;#name&quot;).ajax(&quot;&quot;)</code></p><h2 id="Axios"><a href="#Axios" class="headerlink" title="Axios"></a>Axios</h2><p>Axios 是一个基于 <em><a href="https://javascript.info/promise-basics">promise</a></em> 网络请求库，作用于<a href="https://nodejs.org/"><code>node.js</code></a> 和浏览器中。 它是 <em><a href="https://www.lullabot.com/articles/what-is-an-isomorphic-application">isomorphic</a></em> 的(即同一套代码可以运行在浏览器和node.js中)。在服务端它使用原生 node.js <code>http</code> 模块, 而在客户端 (浏览端) 则使用 XMLHttpRequests。</p>]]></content>
      
      
      <categories>
          
          <category> 开发 </category>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>微积分（深度学习）</title>
      <link href="/2025/03/05/2025-3-5-%E5%BE%AE%E7%A7%AF%E5%88%86%EF%BC%88%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%EF%BC%89/"/>
      <url>/2025/03/05/2025-3-5-%E5%BE%AE%E7%A7%AF%E5%88%86%EF%BC%88%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h1 id="微积分（深度学习）"><a href="#微积分（深度学习）" class="headerlink" title="微积分（深度学习）"></a>微积分（深度学习）</h1><h2 id="安装-matplotlib-库和-d2l-库"><a href="#安装-matplotlib-库和-d2l-库" class="headerlink" title="安装 matplotlib 库和 d2l 库"></a>安装 matplotlib 库和 d2l 库</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">conda activate d2l</span><br><span class="line">pip install matplotlib</span><br><span class="line">pip install d2l</span><br></pre></td></tr></table></figure><h3 id="验证安装"><a href="#验证安装" class="headerlink" title="验证安装"></a>验证安装</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> matplotlib</span><br><span class="line"><span class="built_in">print</span>(matplotlib.__version__)</span><br><span class="line"><span class="keyword">import</span> d2l</span><br><span class="line"><span class="built_in">print</span>(d2l.__version__)</span><br></pre></td></tr></table></figure><h2 id="导数和微分"><a href="#导数和微分" class="headerlink" title="导数和微分"></a>导数和微分</h2><p>假设我们有一个函数$f: \mathbb{R} \rightarrow \mathbb{R}$，其输入和输出都是标量，<strong>如果$f$的<em>导数</em>存在，这个极限被定义为</strong>：<br>$$<br>f’(x) &#x3D; \lim_{h \rightarrow 0} \frac{f(x+h) - f(x)}{h}.<br>$$<br>如果$f’(a)$存在，则称$f$在$a$处是<em>可微</em>（differentiable）的。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">%matplotlib inline    </span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">from</span> matplotlib_inline <span class="keyword">import</span> backend_inline</span><br><span class="line"><span class="keyword">from</span> d2l <span class="keyword">import</span> torch <span class="keyword">as</span> d2l</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">f</span>(<span class="params">x</span>):</span><br><span class="line">    <span class="keyword">return</span> <span class="number">3</span> * x ** <span class="number">2</span> - <span class="number">4</span> * x</span><br></pre></td></tr></table></figure><ul><li><code>%matplotlib inline</code>：<strong>Jupyter Notebook</strong> 的 <strong>魔法命令</strong>，让 <code>matplotlib</code> 生成的图像直接嵌入在 Jupyter Notebook 的输出单元格中，而不是弹出一个单独的窗口</li><li><code>from matplotlib_inline import backend_inline</code>：确保图像在 Jupyter Notebook 中 <strong>直接显示</strong>，而不会单独弹出窗口</li><li><code>from d2l import torch as d2l</code>：从 <code>d2l</code>（《动手学深度学习》的官方库）中 <strong>导入 PyTorch 版本的工具包</strong>，<code>d2l</code> 封装了一些绘图、数据加载等功能，方便深度学习相关任务</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">numerical_lim</span>(<span class="params">f, x, h</span>):</span><br><span class="line">    <span class="keyword">return</span> (f(x + h) - f(x)) / h</span><br><span class="line"></span><br><span class="line">h = <span class="number">0.1</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">5</span>):</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&#x27;h=<span class="subst">&#123;h:<span class="number">.5</span>f&#125;</span>, numerical limit=<span class="subst">&#123;numerical_lim(f, <span class="number">1</span>, h):<span class="number">.5</span>f&#125;</span>&#x27;</span>)</span><br><span class="line">    h *= <span class="number">0.1</span></span><br></pre></td></tr></table></figure><ul><li><code>deff numerical_lim</code>：定义导数</li><li><code>h=&#123;h:.5f&#125;</code>：格式化 <code>h</code> 为小数点后 5 位</li><li><code>numerical_lim(f, 1, h):.5f</code>：计算 <code>f(x)</code> 在 <code>x=1</code> 处的导数，并格式化输出</li></ul><h3 id="等价符号"><a href="#等价符号" class="headerlink" title="等价符号"></a>等价符号</h3><p>给定$y&#x3D;f(x)$，其中$x$和$y$分别是函数$f$的自变量和因变量。以下表达式是等价的：<br>$$<br>f’(x) &#x3D; y’ &#x3D; \frac{dy}{dx} &#x3D; \frac{df}{dx} &#x3D; \frac{d}{dx} f(x) &#x3D; Df(x) &#x3D; D_x f(x)<br>$$</p><h2 id="可视化"><a href="#可视化" class="headerlink" title="可视化"></a>可视化</h2><p><strong>为了对导数的这种解释进行可视化，我们将使用<code>matplotlib</code></strong></p><h3 id="use-svg-dieplay"><a href="#use-svg-dieplay" class="headerlink" title="use_svg_dieplay()"></a>use_svg_dieplay()</h3><p><code>use_svg_display</code>函数指定<code>matplotlib</code>软件包输出<strong>svg图表以获得更清晰的图像</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">use_svg_display</span>():  <span class="comment">#@save</span></span><br><span class="line">    <span class="string">&quot;&quot;&quot;使用svg格式在Jupyter中显示绘图&quot;&quot;&quot;</span></span><br><span class="line">    backend_inline.set_matplotlib_formats(<span class="string">&#x27;svg&#x27;</span>)</span><br></pre></td></tr></table></figure><ul><li><code>backend_inline</code> ： <code>matplotlib_inline</code> 库中的模块，用于控制 <strong>Jupyter Notebook 内嵌 Matplotlib 图像的显示格式</strong></li><li><code>set_matplotlib_formats(&#39;svg&#39;)</code> ：设置 Matplotlib 生成的图像格式为 <strong>SVG（可缩放矢量图）</strong>：<ul><li><strong>SVG（Scalable Vector Graphics）</strong> 是一种矢量图格式，放大后不会模糊，适合高分辨率显示（比如 Retina 屏幕）</li><li><strong>默认 Matplotlib 使用 PNG 格式</strong>，但 PNG 是像素图，放大会变模糊，而 SVG 保持清晰</li></ul></li><li><code>#@save</code>：<strong><code>d2l</code> 库</strong>（《动手学深度学习》）的特殊标记：<strong>在 <code>d2l</code> 代码工具中自动保存这个函数</strong>，以便在后续 Notebook 运行时可以直接调用，而不需要重新定义</li></ul><h3 id="set-figsize"><a href="#set-figsize" class="headerlink" title="set_figsize()"></a>set_figsize()</h3><p>定义<code>set_figsize</code>函数<strong>设置图表大小</strong>。 </p><p><strong>注意，这里可以直接使用<code>d2l.plt</code>，因为导入语句 <code>from matplotlib import pyplot as plt</code>已标记为保存到<code>d2l</code>包中</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">set_figsize</span>(<span class="params">figsize=(<span class="params"><span class="number">3.5</span>, <span class="number">2.5</span></span>)</span>):  <span class="comment">#@save</span></span><br><span class="line">    <span class="string">&quot;&quot;&quot;设置matplotlib的图表大小&quot;&quot;&quot;</span></span><br><span class="line">    use_svg_display()</span><br><span class="line">    d2l.plt.rcParams[<span class="string">&#x27;figure.figsize&#x27;</span>] = figsize</span><br></pre></td></tr></table></figure><ul><li><code>def set_figsize(figsize=(3.5, 2.5))</code>：定义一个函数 <code>set_figsize()</code>，<strong>默认图像大小为 (3.5, 2.5) 英寸</strong>（宽 3.5 英寸，高 2.5 英寸）<ul><li><code>figsize</code> 是一个 <strong>可选参数</strong>，允许用户自定义图像大小</li></ul></li><li><code>use_svg_display()</code>：确保 <strong>所有 Matplotlib 图像都以 SVG 格式显示</strong></li><li><code>figure.figsize</code>：控制 <strong>默认的 Matplotlib 图像尺寸</strong>，单位是 <strong>英寸（inch）</strong></li><li><code>d2l.plt.rcParams[&#39;figure.figsize&#39;] = figsize</code>：修改 Matplotlib <strong>所有后续图像的默认大小</strong>（用户 <strong>不需要每次手动设置 <code>figsize</code></strong>，直接 <code>plt.plot()</code> 画图时就会应用这个默认尺寸）</li></ul><h3 id="set-axes"><a href="#set-axes" class="headerlink" title="set_axes()"></a>set_axes()</h3><p><code>set_axes</code>函数用于设置<strong>自定义 Matplotlib 图表的坐标轴</strong>，包括：</p><ul><li><p>轴标签 (<code>xlabel</code>, <code>ylabel</code>)</p></li><li><p>坐标轴范围 (<code>xlim</code>, <code>ylim</code>)</p></li><li><p>坐标轴比例 (<code>xscale</code>, <code>yscale</code>)</p></li><li><p>图例 (<code>legend</code>)</p></li><li><p>网格 (<code>grid()</code>)</p></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#@save</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">set_axes</span>(<span class="params">axes, xlabel, ylabel, xlim, ylim, xscale, yscale, legend</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;设置matplotlib的轴&quot;&quot;&quot;</span></span><br><span class="line">    axes.set_xlabel(xlabel)</span><br><span class="line">    axes.set_ylabel(ylabel)</span><br><span class="line">    axes.set_xscale(xscale)</span><br><span class="line">    axes.set_yscale(yscale)</span><br><span class="line">    axes.set_xlim(xlim)</span><br><span class="line">    axes.set_ylim(ylim)</span><br><span class="line">    <span class="keyword">if</span> legend:</span><br><span class="line">        axes.legend(legend)</span><br><span class="line">    axes.grid()</span><br></pre></td></tr></table></figure><ol><li><p><code>axes.set_xlabel(xlabel)</code>&amp;<code>axes.set_ylabel(ylabel)</code></p><p>分别 <strong>设置 x 轴和 y 轴的标签</strong>，用于描述数据含义</p></li><li><p><code>axes.set_xscale(xscale)</code>&amp;<code>axes.set_yscale(yscale)</code></p><p><strong>设置坐标轴的比例（scale）</strong>：</p><ul><li><code>linear</code>（线性比例，默认）</li><li><code>log</code>（对数比例，适用于数据跨度较大的情况）</li></ul></li><li><p><code>axes.set_xlim(xlim)</code>&amp;<code>axes.set_ylim(ylim)</code></p><p>设置 <strong>x 轴和 y 轴的显示范围</strong>（xlim&#x3D;(0, 10)<code>表示 x 轴范围为</code>[0, 10]）</p></li><li><p><code>axes.legend(legend)</code>：</p><p>如果 <code>legend</code> <strong>不为空</strong>，则添加图例（<code>legend=[&quot;fro曲线1&quot;, &quot;曲线2&quot;]</code>，就会在图中显示这些曲线名称）</p></li><li><p><code>axes.grid()</code>：<strong>显示网格</strong></p></li></ol><h3 id="plot"><a href="#plot" class="headerlink" title="plot()"></a>plot()</h3><p>通过这三个用于图形配置的函数，定义一个<code>plot</code>函数来简洁地绘制多条曲线</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#@save</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">plot</span>(<span class="params">X, Y=<span class="literal">None</span>, xlabel=<span class="literal">None</span>, ylabel=<span class="literal">None</span>, legend=<span class="literal">None</span>, xlim=<span class="literal">None</span>,</span></span><br><span class="line"><span class="params">         ylim=<span class="literal">None</span>, xscale=<span class="string">&#x27;linear&#x27;</span>, yscale=<span class="string">&#x27;linear&#x27;</span>,</span></span><br><span class="line"><span class="params">         fmts=(<span class="params"><span class="string">&#x27;-&#x27;</span>, <span class="string">&#x27;m--&#x27;</span>, <span class="string">&#x27;g-.&#x27;</span>, <span class="string">&#x27;r:&#x27;</span></span>), figsize=(<span class="params"><span class="number">3.5</span>, <span class="number">2.5</span></span>), axes=<span class="literal">None</span></span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;绘制数据点&quot;&quot;&quot;</span></span><br><span class="line">    <span class="keyword">if</span> legend <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">        legend = []</span><br><span class="line"></span><br><span class="line">    set_figsize(figsize)</span><br><span class="line">    axes = axes <span class="keyword">if</span> axes <span class="keyword">else</span> d2l.plt.gca()</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 如果X有一个轴，输出True</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">has_one_axis</span>(<span class="params">X</span>):</span><br><span class="line">        <span class="keyword">return</span> (<span class="built_in">hasattr</span>(X, <span class="string">&quot;ndim&quot;</span>) <span class="keyword">and</span> X.ndim == <span class="number">1</span> <span class="keyword">or</span> <span class="built_in">isinstance</span>(X, <span class="built_in">list</span>)                   <span class="keyword">and</span> <span class="keyword">not</span> <span class="built_in">hasattr</span>(X[<span class="number">0</span>], <span class="string">&quot;__len__&quot;</span>))</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> has_one_axis(X):</span><br><span class="line">        X = [X]</span><br><span class="line">    <span class="keyword">if</span> Y <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">        X, Y = [[]] * <span class="built_in">len</span>(X), X</span><br><span class="line">    <span class="keyword">elif</span> has_one_axis(Y):</span><br><span class="line">        Y = [Y]</span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">len</span>(X) != <span class="built_in">len</span>(Y):</span><br><span class="line">        X = X * <span class="built_in">len</span>(Y)</span><br><span class="line">    axes.cla()</span><br><span class="line">    <span class="keyword">for</span> x, y, fmt <span class="keyword">in</span> <span class="built_in">zip</span>(X, Y, fmts):</span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">len</span>(x):</span><br><span class="line">            axes.plot(x, y, fmt)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            axes.plot(y, fmt)</span><br><span class="line">    set_axes(axes, xlabel, ylabel, xlim, ylim, xscale, yscale, legend)</span><br></pre></td></tr></table></figure><h4 id="代码参数"><a href="#代码参数" class="headerlink" title="代码参数"></a>代码参数</h4><table><thead><tr><th>参数</th><th>作用</th></tr></thead><tbody><tr><td><code>X</code></td><td><strong>横坐标数据</strong>，可以是一维数组或多条曲线的 x 轴数据</td></tr><tr><td><code>Y</code></td><td><strong>纵坐标数据</strong>，可以是一维数组或多条曲线的 y 轴数据</td></tr><tr><td><code>xlabel</code> &#x2F; <code>ylabel</code></td><td><strong>x 轴 &#x2F; y 轴的标签</strong></td></tr><tr><td><code>legend</code></td><td><strong>图例（legend）</strong>，用于标注不同曲线</td></tr><tr><td><code>xlim</code> &#x2F; <code>ylim</code></td><td><strong>x 轴 &#x2F; y 轴的范围</strong>（比如 <code>(0,10)</code>）</td></tr><tr><td><code>xscale</code> &#x2F; <code>yscale</code></td><td><strong>坐标轴的比例</strong>（默认为 <code>linear</code>，可以改为 <code>log</code>）</td></tr><tr><td><code>fmts</code></td><td><strong>曲线样式</strong>，默认支持 <code>-</code> (实线)，<code>m--</code> (紫色虚线)，<code>g-.</code> (绿色点划线)，<code>r:</code> (红色点线)</td></tr><tr><td><code>figsize</code></td><td><strong>绘图尺寸</strong>（默认 <code>(3.5, 2.5)</code>）</td></tr><tr><td><code>axes</code></td><td><strong>指定 Matplotlib 轴对象</strong>，如果为 <code>None</code>，则使用当前轴</td></tr></tbody></table><h4 id="设置图像大小"><a href="#设置图像大小" class="headerlink" title="设置图像大小"></a>设置图像大小</h4><p><code>set_figsize()</code>：</p><h4 id="获取-Matplotlib-轴对象"><a href="#获取-Matplotlib-轴对象" class="headerlink" title="获取 Matplotlib 轴对象"></a>获取 Matplotlib 轴对象</h4><p><code>axes = axes if axes else d2l.plt.gca()</code>：如果 <code>axes</code> 参数 <strong>为空</strong>，则调用 <code>d2l.plt.gca()</code> 获取当前轴对象（Matplotlib 的 <code>gca()</code> 返回当前的 <code>axes</code>）</p><h4 id="检查-X-是否为一维数组"><a href="#检查-X-是否为一维数组" class="headerlink" title="检查 X 是否为一维数组"></a>检查 <code>X</code> 是否为一维数组</h4><p><code>def has_one_axis(X)</code>：<strong>检查 <code>X</code> 是否为一维数组</strong></p><ul><li><code>hasattr(X, &quot;ndim&quot;) and X.ndim == 1</code>：检查 <code>X</code> 是否是 <strong>NumPy 数组</strong>，并且是一维的</li><li><code>isinstance(X, list) and not hasattr(X[0], &quot;__len__&quot;)</code>：检查 <code>X</code> 是否是 <strong>Python 列表</strong>，并且列表中的 <strong>元素不是列表</strong>（即 <code>X</code> 是一维列表）</li></ul><p><strong>代码拆解：</strong></p><ol><li><code>hasattr(X, &quot;ndim&quot;)</code>：<code>hasattr</code> 是一个 Python 内置函数，用于检查对象是否有某个属性。这里检查的是 <code>X</code> 是否有 <code>ndim</code> 属性（通常是 <code>numpy</code> 数组才会有 <code>ndim</code> 属性，它表示数组的维度）。</li><li><code>X.ndim == 1</code>：这检查 <code>X</code> 是否是一维数组。<code>X.ndim</code> 表示数组的维度。</li><li><code>isinstance(X, list)</code>：这检查 <code>X</code> 是否是一个 Python <code>list</code> 类型（即普通列表）</li><li><code>not hasattr(X[0], &quot;__len__&quot;)</code>：这检查 <code>X</code> 中的第一个元素（<code>X[0]</code>）是否没有 <code>__len__</code> 属性。<code>__len__</code> 属性通常用于表示对象的长度（例如列表）。如果 <code>X[0]</code> 不是列表或其他可迭代对象，就说明 <code>X</code> 是一个<strong>一维的普通列表</strong>，而不是嵌套列表</li></ol><h4 id="处理X和Y数据"><a href="#处理X和Y数据" class="headerlink" title="处理X和Y数据"></a>处理<code>X</code>和<code>Y</code>数据</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> has_one_axis(X):</span><br><span class="line">    X = [X]  <span class="comment"># 转换为列表的列表</span></span><br><span class="line"><span class="keyword">if</span> Y <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">    X, Y = [[]] * <span class="built_in">len</span>(X), X  <span class="comment"># 交换 X 和 Y（如果只给了 Y）</span></span><br><span class="line"><span class="keyword">elif</span> has_one_axis(Y):</span><br><span class="line">    Y = [Y]  <span class="comment"># 转换为列表的列表</span></span><br><span class="line"><span class="keyword">if</span> <span class="built_in">len</span>(X) != <span class="built_in">len</span>(Y):</span><br><span class="line">    X = X * <span class="built_in">len</span>(Y)  <span class="comment"># 复制 X，使 X 和 Y 的长度一致</span></span><br></pre></td></tr></table></figure><ul><li><p>如果 <code>X</code> 是 <strong>一维数据</strong>，转换为 <strong>二维列表</strong>（<code>X = [X]</code>），<strong>这样可以绘制多条曲线</strong></p></li><li><p>如果 <strong>没有提供 <code>Y</code></strong>，则 <code>X</code> 变为空列表，<code>Y = X</code>（支持 <code>plot(Y)</code> 的情况）</p><p><strong>实际意义：如果 <code>Y</code> 为空，则假定 <code>X</code> 实际上是 <code>Y</code>，并自动生成 <code>X</code>，Matplotlib 会自动使用索引 <code>[0,1,2,...]</code> 作为 <code>X</code></strong></p></li><li><p>如果 <code>Y</code> 是 <strong>一维数据</strong>，转换为 <strong>二维列表</strong>（<code>Y = [Y]</code>）</p></li><li><p>如果 <code>X</code> 和 <code>Y</code> <strong>长度不匹配</strong>，复制 <code>X</code> 以匹配 <code>Y</code> 的长度（适用于 <code>X</code> 只有一组数据，而 <code>Y</code> 有多组）</p></li></ul><p><strong>example</strong>：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">X = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]</span><br><span class="line">has_one_axis(X)  <span class="comment"># True</span></span><br><span class="line">X = [X]  <span class="comment"># 变为 [[1, 2, 3]]</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">X = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]</span><br><span class="line">Y = <span class="literal">None</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 变为：</span></span><br><span class="line">X, Y = [[]] * <span class="built_in">len</span>(X), X</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(X)  <span class="comment"># [[], [], []]</span></span><br><span class="line"><span class="built_in">print</span>(Y)  <span class="comment"># [1, 2, 3]</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Y = [<span class="number">2</span>, <span class="number">4</span>, <span class="number">6</span>]</span><br><span class="line">has_one_axis(Y)  <span class="comment"># True</span></span><br><span class="line">Y = [Y]  <span class="comment"># 变为 [[2, 4, 6]]</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">X = [[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]]  <span class="comment"># 只有一个 X</span></span><br><span class="line">Y = [[<span class="number">2</span>, <span class="number">4</span>, <span class="number">6</span>], [<span class="number">3</span>, <span class="number">6</span>, <span class="number">9</span>]]  <span class="comment"># 两条曲线</span></span><br><span class="line"></span><br><span class="line">X = X * <span class="built_in">len</span>(Y)  <span class="comment"># 复制 X</span></span><br><span class="line"><span class="built_in">print</span>(X)  </span><br><span class="line"><span class="comment"># [[1, 2, 3], [1, 2, 3]]</span></span><br></pre></td></tr></table></figure><h4 id="绘制曲线"><a href="#绘制曲线" class="headerlink" title="绘制曲线"></a>绘制曲线</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">axes.cla()  <span class="comment"># 清除当前轴的内容</span></span><br><span class="line"><span class="keyword">for</span> x, y, fmt <span class="keyword">in</span> <span class="built_in">zip</span>(X, Y, fmts):</span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">len</span>(x):</span><br><span class="line">        axes.plot(x, y, fmt)  <span class="comment"># 绘制 (x, y)</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        axes.plot(y, fmt)  <span class="comment"># 仅绘制 y（x 省略时，Matplotlib 默认使用索引作为 x 轴）</span></span><br></pre></td></tr></table></figure><ul><li><p><code>axes.cla()</code> <strong>清除当前坐标轴的内容</strong>，避免重复绘制。</p></li><li><p><code>zip(X, Y, fmts)</code></p><p> 逐一取出<code>x, y, fmt</code>：</p><ul><li><code>axes.plot(x, y, fmt)</code> 画曲线（<code>fmt</code> 指定曲线样式）。</li><li>如果 <code>x</code> <strong>为空</strong>，则直接绘制 <code>y</code>，Matplotlib 默认 <code>x = range(len(y))</code>。</li></ul></li></ul><h4 id="设置坐标轴"><a href="#设置坐标轴" class="headerlink" title="设置坐标轴"></a>设置坐标轴</h4><ul><li><code>set_axes(axes, xlabel, ylabel, xlim, ylim, xscale, yscale, legend)</code>：<strong>统一设置坐标轴参数</strong>（坐标范围、刻度、比例、标签等）</li></ul><h3 id="例子"><a href="#例子" class="headerlink" title="例子"></a>例子</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">x = np.arange(<span class="number">0</span>, <span class="number">3</span>, <span class="number">0.1</span>)</span><br><span class="line">plot(x, [f(x), <span class="number">2</span> * x - <span class="number">3</span>], <span class="string">&#x27;x&#x27;</span>, <span class="string">&#x27;f(x)&#x27;</span>, legend=[<span class="string">&#x27;f(x)&#x27;</span>, <span class="string">&#x27;Tangent line (x=1)&#x27;</span>])</span><br></pre></td></tr></table></figure><p><img src="/../img/screenshot/matplotlib_example.png" alt="example"></p><h2 id="偏导数"><a href="#偏导数" class="headerlink" title="偏导数"></a>偏导数</h2><p>将微分的思想推广到<em>多元函数</em>（multivariate function）上</p><p>设$y &#x3D; f(x_1, x_2, \ldots, x_n)$是一个具有$n$个变量的函数，$y$关于第$i$个参数$x_i$的<em>偏导数</em>（partial derivative）为：<br>$$<br>\frac{\partial y}{\partial x_i} &#x3D; \lim_{h \rightarrow 0} \frac{f(x_1, \ldots, x_{i-1}, x_i+h, x_{i+1}, \ldots, x_n) - f(x_1, \ldots, x_i, \ldots, x_n)}{h}.<br>$$</p><h3 id="等价符号-1"><a href="#等价符号-1" class="headerlink" title="等价符号"></a>等价符号</h3><p>对于偏导数的表示，以下是等价的：<br>$$<br>\frac{\partial y}{\partial x_i} &#x3D; \frac{\partial f}{\partial x_i} &#x3D; f_{x_i} &#x3D; f_i &#x3D; D_i f &#x3D; D_{x_i} f.<br>$$</p><h2 id="梯度"><a href="#梯度" class="headerlink" title="梯度"></a>梯度</h2><p>连结一个多元函数对其所有变量的偏导数，以得到该函数的<em>梯度</em>（gradient）向量</p><p>设函数$f:\mathbb{R}^n\rightarrow\mathbb{R}$的输入是一个$n$维向量$\mathbf{x}&#x3D;[x_1,x_2,\ldots,x_n]^\top$，并且输出是一个标量，函数$f(\mathbf{x})$相对于$\mathbf{x}$的梯度是一个包含$n$个偏导数的向量:<br>$$<br>\nabla_{\mathbf{x}} f(\mathbf{x}) &#x3D; \bigg[\frac{\partial f(\mathbf{x})}{\partial x_1}, \frac{\partial f(\mathbf{x})}{\partial x_2}, \ldots, \frac{\partial f(\mathbf{x})}{\partial x_n}\bigg]^\top<br>$$<br>其中$\nabla_{\mathbf{x}} f(\mathbf{x})$通常在没有歧义时被$\nabla f(\mathbf{x})$取代</p><h3 id="常用结论"><a href="#常用结论" class="headerlink" title="常用结论"></a>常用结论</h3><p>假设$\mathbf{x}$为$n$维向量，在微分多元函数时经常使用以下规则:</p><ul><li>对于所有$\mathbf{A} \in \mathbb{R}^{m \times n}$，都有$\nabla_{\mathbf{x}} \mathbf{A} \mathbf{x} &#x3D; \mathbf{A}^\top$</li><li>对于所有$\mathbf{A} \in \mathbb{R}^{n \times m}$，都有$\nabla_{\mathbf{x}} \mathbf{x}^\top \mathbf{A}  &#x3D; \mathbf{A}$</li><li>对于所有$\mathbf{A} \in \mathbb{R}^{n \times n}$，都有$\nabla_{\mathbf{x}} \mathbf{x}^\top \mathbf{A} \mathbf{x}  &#x3D; (\mathbf{A} + \mathbf{A}^\top)\mathbf{x}$</li><li>$\nabla_{\mathbf{x}} |\mathbf{x} |^2 &#x3D; \nabla_{\mathbf{x}} \mathbf{x}^\top \mathbf{x} &#x3D; 2\mathbf{x}$</li></ul><p>同样，对于任何矩阵$\mathbf{X}$，都有$\nabla_{\mathbf{X}} |\mathbf{X} |_F^2 &#x3D; 2\mathbf{X}$</p><p><a href="https://zhuanlan.zhihu.com/p/273729929">矩阵求导</a></p><h2 id="链式法则"><a href="#链式法则" class="headerlink" title="链式法则"></a>链式法则</h2><p>在深度学习中，多元函数通常是<em>复合</em>（composite）的， 所以难以应用上述任何规则来微分这些函数。幸运的是，链式法则可以被用来微分复合函数。</p><h3 id="单变量函数"><a href="#单变量函数" class="headerlink" title="单变量函数"></a>单变量函数</h3><p>让我们先考虑单变量函数。假设函数$y&#x3D;f(u)$和$u&#x3D;g(x)$都是可微的，根据链式法则：<br>$$<br>\frac{dy}{dx} &#x3D; \frac{dy}{du} \frac{du}{dx}.<br>$$</p><h3 id="任意数量的变量"><a href="#任意数量的变量" class="headerlink" title="任意数量的变量"></a>任意数量的变量</h3><p>假设可微分函数$y$有变量$u_1, u_2, \ldots, u_m$，其中每个可微分函数$u_i$都有变量$x_1, x_2, \ldots, x_n$。注意，$y$是$x_1, x_2， \ldots, x_n$的函数。对于任意$i &#x3D; 1, 2, \ldots, n$，链式法则给出：<br>$$<br>\frac{\partial y}{\partial x_i} &#x3D; \frac{\partial y}{\partial u_1} \frac{\partial u_1}{\partial x_i} + \frac{\partial y}{\partial u_2} \frac{\partial u_2}{\partial x_i} + \cdots + \frac{\partial y}{\partial u_m} \frac{\partial u_m}{\partial x_i}<br>$$</p><h2 id="自动微分"><a href="#自动微分" class="headerlink" title="自动微分"></a>自动微分</h2><h3 id="例子-1"><a href="#例子-1" class="headerlink" title="例子"></a>例子</h3><p><strong>对函数$y&#x3D;2\mathbf{x}^{\top}\mathbf{x}$关于列向量$\mathbf{x}$求导</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> torch</span><br><span class="line"></span><br><span class="line">x = torch.arange(<span class="number">4.0</span>) <span class="comment"># tensor([0., 1., 2., 3.])</span></span><br><span class="line"></span><br><span class="line">x.requires_grad_(<span class="literal">True</span>)  <span class="comment"># 等价于x=torch.arange(4.0,requires_grad=True)</span></span><br><span class="line">x.grad  <span class="comment"># 默认值是None</span></span><br><span class="line"></span><br><span class="line">y = <span class="number">2</span> * torch.dot(x, x) <span class="comment"># tensor(28., grad_fn=&lt;MulBackward0&gt;)</span></span><br><span class="line"></span><br><span class="line">y.backward()</span><br><span class="line">x.grad <span class="comment"># tensor([ 0.,  4.,  8., 12.])</span></span><br><span class="line"></span><br><span class="line">x.grad == <span class="number">4</span> * x <span class="comment"># 验证：tensor([True, True, True, True])</span></span><br></pre></td></tr></table></figure><ul><li><p><code>requires_grad_(True)</code>： 使 <code>x</code> 具有 <strong>自动求导</strong> 功能（梯度计算）</p></li><li><p><code>x.grad</code> ：默认是 <code>None</code>，因为梯度只有在 <code>backward()</code> 调用后才会被计算</p></li><li><p><code>y.backward()</code>：<code>y</code> 对 <code>x</code> 进行反向传播，计算梯度 <code>dy/dx</code></p></li><li><p><code>grad_fn=&lt;MulBackward0&gt;</code>：</p><ul><li><code>grad_fn</code>（Gradient Function）是 PyTorch <strong>自动求导机制 (<code>autograd</code>)</strong> 记录的 <strong>计算历史</strong>，它指向了 <strong>生成这个张量的运算</strong>，从而支持反向传播</li><li><strong><code>MulBackward0</code> 代表乘法的反向传播</strong>（<code>Backward</code> 代表反向传播）</li></ul></li></ul><p><strong><code>x</code>的另一个函数</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 在默认情况下，PyTorch会累积梯度，我们需要清除之前的值</span></span><br><span class="line">x.grad.zero_()</span><br><span class="line">y = x.<span class="built_in">sum</span>()</span><br><span class="line">y.backward()</span><br><span class="line">x.grad</span><br><span class="line"><span class="comment"># tensor([1., 1., 1., 1.])</span></span><br></pre></td></tr></table></figure><h3 id="非标量变量的反向传播"><a href="#非标量变量的反向传播" class="headerlink" title="非标量变量的反向传播"></a>非标量变量的反向传播</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 对非标量调用backward需要传入一个gradient参数，该参数指定微分函数关于self的梯度。</span></span><br><span class="line"><span class="comment"># 本例只想求偏导数的和，所以传递一个1的梯度是合适的</span></span><br><span class="line">x.grad.zero_()</span><br><span class="line">y = x * x</span><br><span class="line"><span class="comment"># 等价于y.backward(torch.ones(len(x)))</span></span><br><span class="line">y.<span class="built_in">sum</span>().backward()</span><br><span class="line">x.grad <span class="comment"># tensor([0., 2., 4., 6.])</span></span><br></pre></td></tr></table></figure><ul><li><code>x.grad.zero_()</code>：清空 <code>x.grad</code>。在 PyTorch 中，<code>backward()</code> <strong>不会自动清空 <code>x.grad</code></strong>，如果不手动清除，梯度会 <strong>累积</strong></li></ul><p><strong>注意：</strong></p><p>在 PyTorch 中，<code>backward()</code> 的默认行为是 <strong>计算 <code>y</code> 对 <code>x</code> 的梯度</strong>，并存入 <code>x.grad</code>。但 <code>backward()</code> 只能对 <strong>标量（单个数值）调用</strong>，如果 <code>y</code> 是 <strong>张量（向量&#x2F;矩阵）</strong>，就必须手动指定如何计算梯度。</p><table><thead><tr><th><code>y</code>类型</th><th>直接<code>.backward()</code></th><th>需要<code>y.sum()</code>吗</th><th>解决方案</th></tr></thead><tbody><tr><td>标量：<code>shape=()</code></td><td>&#10004;允许</td><td>&#10007;不需要</td><td><code>y.backward()</code></td></tr><tr><td>向量：<code>shape=(n,)</code></td><td>&#10007;报错</td><td>&#10004;需要</td><td><code>y.sum()</code>或<code>y.backward(torch.ones_like(y))</code></td></tr><tr><td>矩阵：<code>shape=(m,n)</code></td><td>&#10007;报错</td><td>&#10004;需要</td><td><code>y.sum()</code>或<code>y.backward(torch.ones_like(y))</code></td></tr></tbody></table><h3 id="分离计算"><a href="#分离计算" class="headerlink" title="分离计算"></a>分离计算</h3><p>有时，我们希望<strong>将某些计算移动到记录的计算图之外</strong>。</p><p>例如，假设<code>y</code>是作为<code>x</code>的函数计算的，而<code>z</code>则是作为<code>y</code>和<code>x</code>的函数计算的。我们想计算<code>z</code>关于<code>x</code>的梯度，但由于某种原因，希望将<code>y</code>视为一个常数，并且只考虑到<code>x</code>在<code>y</code>被计算后发挥的作用。</p><p>这里可以分离<code>y</code>来返回一个新变量<code>u</code>，该变量与<code>y</code>具有相同的值，但丢弃计算图中如何计算<code>y</code>的任何信息。换句话说，梯度不会向后流经<code>u</code>到<code>x</code>。因此，下面的反向传播函数计算<code>z=u*x</code>关于<code>x</code>的偏导数，同时将<code>u</code>作为常数处理，而不是<code>z=x*x*x</code>关于<code>x</code>的偏导数。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">x.grad.zero_()</span><br><span class="line">y = x * x</span><br><span class="line">u = y.detach()</span><br><span class="line">z = u * x</span><br><span class="line"></span><br><span class="line">z.<span class="built_in">sum</span>().backward()</span><br><span class="line">x.grad == u <span class="comment"># tensor([True, True, True, True])</span></span><br></pre></td></tr></table></figure><ul><li><code>detach()</code>：返回一个与 <code>y</code> 具有相同值的新张量 <code>u</code>，但不参与梯度计算。<code>u</code> 不会计算梯度，也不会影响 <code>x.grad</code></li></ul><p>随后在<code>y</code>上调用反向传播</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">x.grad.zero_()</span><br><span class="line">y.<span class="built_in">sum</span>().backward()</span><br><span class="line">x.grad == <span class="number">2</span> * x <span class="comment"># tensor([True, True, True, True])</span></span><br></pre></td></tr></table></figure><h3 id="Python控制流的梯度计算"><a href="#Python控制流的梯度计算" class="headerlink" title="Python控制流的梯度计算"></a>Python控制流的梯度计算</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">f</span>(<span class="params">a</span>):</span><br><span class="line">    b = a * <span class="number">2</span></span><br><span class="line">    <span class="keyword">while</span> b.norm() &lt; <span class="number">1000</span>:</span><br><span class="line">        b = b * <span class="number">2</span></span><br><span class="line">    <span class="keyword">if</span> b.<span class="built_in">sum</span>() &gt; <span class="number">0</span>:</span><br><span class="line">        c = b</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        c = <span class="number">100</span> * b</span><br><span class="line">    <span class="keyword">return</span> c</span><br><span class="line"></span><br><span class="line">a = torch.randn(size=(), requires_grad=<span class="literal">True</span>)</span><br><span class="line">d = f(a)</span><br><span class="line">d.backward()</span><br><span class="line"></span><br><span class="line">a.grad == d / a <span class="comment"># tensor(True)</span></span><br></pre></td></tr></table></figure><ul><li><code>torch.randn(size=())</code> 生成一个 <strong>零维（标量）</strong> 的随机数 <code>a</code>，其值服从 <strong>标准正态分布</strong></li><li><code>requires_grad=True</code> 使 <code>a</code> 参与自动求导</li></ul><h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><h3 id="为什么计算二阶导数比一阶导数的开销要更大？"><a href="#为什么计算二阶导数比一阶导数的开销要更大？" class="headerlink" title="为什么计算二阶导数比一阶导数的开销要更大？"></a>为什么计算二阶导数比一阶导数的开销要更大？</h3><ol><li>计算图更复杂</li><li>需要存储更多的中间变量</li><li>计算二阶导数需要两次反向传播</li></ol><h3 id="在运行反向传播函数之后，立即再次运行它，看看会发生什么？"><a href="#在运行反向传播函数之后，立即再次运行它，看看会发生什么？" class="headerlink" title="在运行反向传播函数之后，立即再次运行它，看看会发生什么？"></a>在运行反向传播函数之后，立即再次运行它，看看会发生什么？</h3><p>如果在<strong>没有设置 <code>retain_graph=True</code></strong> 的情况下，<strong>立即再次运行 <code>backward()</code></strong>，PyTorch 会报错：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">x = torch.tensor(<span class="number">2.0</span>, requires_grad=<span class="literal">True</span>)</span><br><span class="line">y = x ** <span class="number">3</span></span><br><span class="line"></span><br><span class="line">y.backward()</span><br><span class="line">x.grad <span class="comment"># tensor(12.)</span></span><br><span class="line"></span><br><span class="line">y.backward()</span><br><span class="line">x.grad </span><br><span class="line"><span class="comment"># RuntimeError: Trying to backward through the graph a second time, but the buffers have already been freed. Specify retain_graph=True when calling backward the first time.</span></span><br></pre></td></tr></table></figure><h4 id="为什么会报错"><a href="#为什么会报错" class="headerlink" title="为什么会报错"></a><strong>为什么会报错</strong></h4><p>当 <code>backward()</code> 运行时，PyTorch <strong>默认会释放计算图</strong>，以节省内存。因此：</p><ol><li><strong>第一次调用 <code>y.backward()</code></strong>：<ul><li>PyTorch 计算 <code>dy/dx</code> 并存储在 <code>x.grad</code> 里。</li><li>计算完成后，PyTorch 释放计算图，清除所有用于计算梯度的中间变量。</li></ul></li><li><strong>第二次调用 <code>y.backward()</code></strong>：<ul><li>由于计算图已经释放，PyTorch 无法再次计算梯度，因此报错。</li></ul></li></ol><h4 id="如何避免这个问题"><a href="#如何避免这个问题" class="headerlink" title="如何避免这个问题"></a>如何避免这个问题</h4><p>如果你想在 <strong>同一个计算图上多次调用 <code>backward()</code></strong>，需要在第一次 <code>backward()</code> 时 <strong>保留计算图</strong>：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">y.backward(retain_graph=<span class="literal">True</span>)  <span class="comment"># 允许计算图保留</span></span><br><span class="line">y.backward()  <span class="comment"># 第二次运行，不会报错</span></span><br></pre></td></tr></table></figure><h4 id="什么时候需要多次-backward-？"><a href="#什么时候需要多次-backward-？" class="headerlink" title="什么时候需要多次 backward()？"></a>什么时候需要多次 <code>backward()</code>？</h4><ul><li><strong>计算二阶导数</strong>（如 Hessian 矩阵）</li><li><strong>多次计算梯度</strong>（如在强化学习中的策略梯度方法）</li></ul><p>但一般情况下，只需要一次 <code>backward()</code> 即可，无需 <code>retain_graph=True</code></p><h3 id="使-f-x-sin-x-，绘制-f-x-和-frac-df-x-dx-的图像，其中后者不使用-f’-x-cos-x"><a href="#使-f-x-sin-x-，绘制-f-x-和-frac-df-x-dx-的图像，其中后者不使用-f’-x-cos-x" class="headerlink" title="使$f(x)&#x3D;\sin(x)$，绘制$f(x)$和$\frac{df(x)}{dx}$的图像，其中后者不使用$f’(x)&#x3D;\cos(x)$"></a>使$f(x)&#x3D;\sin(x)$，绘制$f(x)$和$\frac{df(x)}{dx}$的图像，其中后者不使用$f’(x)&#x3D;\cos(x)$</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">%matplotlib inline</span><br><span class="line"><span class="keyword">from</span> d2l <span class="keyword">import</span> torch <span class="keyword">as</span> d2l</span><br><span class="line"></span><br><span class="line">x.grad.zero_()</span><br><span class="line"></span><br><span class="line">x = torch.linspace(-<span class="number">1</span> * torch.pi, <span class="number">1</span> * torch.pi, <span class="number">1000</span>, requires_grad=<span class="literal">True</span>)</span><br><span class="line">y = torch.sin(x)</span><br><span class="line"></span><br><span class="line">y.<span class="built_in">sum</span>().backward()</span><br><span class="line">dy_dx = x.grad</span><br><span class="line"></span><br><span class="line"><span class="comment"># 注意-绘图</span></span><br><span class="line">d2l.plot(x.detach().numpy(), [y.detach().numpy(), dy_dx.detach().numpy()], <span class="string">&#x27;x&#x27;</span>, <span class="string">&#x27;value&#x27;</span>, legend=[<span class="string">r&#x27;$f(x) = \sin(x)$&#x27;</span>, <span class="string">r&quot;$\frac&#123;df&#125;&#123;dx&#125;$ (computed numerically)&quot;</span>])</span><br></pre></td></tr></table></figure><p><img src="/../img/screenshot/autograd_question.png" alt="autograd_question"></p><h4 id="注意点"><a href="#注意点" class="headerlink" title="注意点"></a>注意点</h4><p>将 <code>x</code>、<code>y</code> 和 <code>dy_dx</code> <strong>转换为 NumPy 数组</strong> 时，<strong>使用 <code>.detach().numpy()</code>：</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">d2l.plot(x.detach().numpy(), [y.detach().numpy(), dy_dx.detach().numpy()], <span class="string">&#x27;x&#x27;</span>, <span class="string">&#x27;value&#x27;</span>, legend=[<span class="string">r&#x27;$f(x) = \sin(x)$&#x27;</span>, <span class="string">r&quot;$\frac&#123;df&#125;&#123;dx&#125;$ (computed numerically)&quot;</span>])</span><br></pre></td></tr></table></figure><h4 id="原因"><a href="#原因" class="headerlink" title="原因"></a>原因</h4><p>在 PyTorch 中：</p><ul><li><code>tensor.numpy()</code> <strong>不能</strong>用于 <code>requires_grad=True</code> 的张量</li><li>需要先调用 <code>tensor.detach()</code>，这样 PyTorch 就不会追踪计算图，可以安全地转换为 NumPy</li></ul><h4 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h4><p>**Pytorch 计算图与自动求导：**在 PyTorch 中，每当你对一个 <code>requires_grad=True</code> 的张量执行操作，PyTorch <strong>会构建一张计算图</strong>，用于追踪所有计算，以便稍后进行 <strong>反向传播</strong>（backpropagation）。</p><p>**为什么 <code>numpy()</code> 不允许直接调用？：**当 <code>requires_grad=True</code> 时，<strong>直接调用 <code>.numpy()</code> 会破坏计算图</strong>，这会导致 PyTorch <strong>无法继续反向传播</strong>。</p><p><strong>如何解决？：</strong><code>detach()</code> 方法的作用是 <strong>从计算图中分离张量</strong>，使其成为普通张量，不再追踪梯度。因此，我们可以先 <code>detach()</code> 再 <code>numpy()</code></p>]]></content>
      
      
      <categories>
          
          <category> AI </category>
          
          <category> 机器学习 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>函数（JavaScript）</title>
      <link href="/2025/03/04/2025-3-4-%E5%87%BD%E6%95%B0%EF%BC%88JavaScript%EF%BC%89/"/>
      <url>/2025/03/04/2025-3-4-%E5%87%BD%E6%95%B0%EF%BC%88JavaScript%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h1 id="函数、变量（JavaScript）"><a href="#函数、变量（JavaScript）" class="headerlink" title="函数、变量（JavaScript）"></a>函数、变量（JavaScript）</h1><h2 id="定义函数"><a href="#定义函数" class="headerlink" title="定义函数"></a>定义函数</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">abs</span>(<span class="params">num</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (num &gt;= <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> num;</span><br><span class="line">    &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> -num;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>参数：按值传递，改变不反映到全局</li><li>对象、数组：改变对函数外部可见</li></ul><h3 id="匿名函数"><a href="#匿名函数" class="headerlink" title="匿名函数"></a>匿名函数</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> abs = <span class="keyword">function</span>(<span class="params">x</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (x &gt;= <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> x;</span><br><span class="line">    &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> -x;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><code>function(x) &#123;...&#125;</code>是一个匿名函数，可以把结果赋值给abs，通过abs就可以调用函数</li><li>上下两个方式等价</li></ul><h2 id="调用函数"><a href="#调用函数" class="headerlink" title="调用函数"></a>调用函数</h2><p>参数问题：JavaScript可以传递任意一个参数，也可以不传递参数</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> abs = <span class="keyword">function</span>(<span class="params">x</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">typeof</span> x !== <span class="string">&#x27;number&#x27;</span>) &#123;</span><br><span class="line">        <span class="keyword">throw</span> <span class="string">&#x27;Not a number&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (x &gt;= <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> x;</span><br><span class="line">    &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> -x;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="arguments"><a href="#arguments" class="headerlink" title="arguments"></a>arguments</h2><ul><li>保存实际所有参数的数组</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">myConcat</span>(<span class="params">separator</span>) &#123;</span><br><span class="line">    <span class="keyword">let</span> result = <span class="string">&quot;&quot;</span>; </span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; <span class="variable language_">arguments</span>.<span class="property">length</span>; i++) &#123;</span><br><span class="line">    result += <span class="variable language_">arguments</span>[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>使用额外参数（非自己定义的）</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">Print</span>(<span class="params">a, b, ...rest</span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;a&#x27;</span>);</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;b&#x27;</span>);</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(rest);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="变量的作用域"><a href="#变量的作用域" class="headerlink" title="变量的作用域"></a>变量的作用域</h2><p>var 定义变量有作用域：</p><ul><li>如果在函数体内声明，则在函数体外不能用（除非闭包）</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">xiao</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> x = <span class="number">1</span>;</span><br><span class="line">    x += <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(x); <span class="comment">// Uncaught ReferenceError: x is not defined</span></span><br></pre></td></tr></table></figure><ul><li>两个函数使用相同变量名，只要在函数内部，就不冲突</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">xiao1</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> x = <span class="number">1</span>;</span><br><span class="line">    x = x + <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">xiao2</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> x = <span class="string">&#x27;A&#x27;</span>;</span><br><span class="line">    x = x + <span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>内部函数可以访问外部函数成员，反之不行</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">xiao1</span>(<span class="params"></span>) &#123;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">var</span> x = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">function</span> <span class="title function_">xiao2</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">var</span> y = x + <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">var</span> z = y + <span class="number">1</span>; <span class="comment">// Uncaught ReferenceError: y is not defined</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>变量<strong>由内向外</strong>查找，同名变量，内部屏蔽外部</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">xiao1</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> x = <span class="number">1</span>;</span><br><span class="line">    functio <span class="title function_">xiao2</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">var</span> x = <span class="string">&#x27;A&#x27;</span>;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(x); <span class="comment">// A</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(x); <span class="comment">// 1</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>养成规范：<strong>所有变量都在头部一起定义</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">xiao1</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> x = <span class="number">1</span>,</span><br><span class="line">        y = x + <span class="number">1</span>,</span><br><span class="line">        z, i, a;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">xiao2</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> x = y + <span class="number">1</span>;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(x); <span class="comment">// x undefined</span></span><br><span class="line">    <span class="keyword">var</span> y = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="全局对象-window"><a href="#全局对象-window" class="headerlink" title="全局对象 window"></a>全局对象 window</h2><p>所有 JavaScript 全局对象、函数以及变量均自动成为 window 对象的成员</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> x = <span class="string">&quot;xiao jinghuai&quot;</span>;</span><br><span class="line"><span class="title function_">alert</span>(x);</span><br><span class="line"><span class="title function_">alert</span>(<span class="variable language_">window</span>.<span class="property">x</span>); </span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> x = <span class="string">&quot;xiao&quot;</span>;</span><br><span class="line"><span class="variable language_">window</span>.<span class="title function_">alert</span>(x);</span><br><span class="line"><span class="keyword">var</span> old_alert = <span class="variable language_">window</span>.<span class="property">alert</span>;</span><br><span class="line"></span><br><span class="line"><span class="title function_">old_alert</span>(x); <span class="comment">// xiao</span></span><br><span class="line"></span><br><span class="line"><span class="variable language_">window</span>.<span class="property">alert</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    </span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="variable language_">window</span>.<span class="title function_">alert</span>(x); <span class="comment">//失效</span></span><br><span class="line"></span><br><span class="line"><span class="variable language_">window</span>.<span class="property">alert</span> = old_alert; <span class="comment">// 恢复</span></span><br><span class="line"><span class="variable language_">window</span>.<span class="title function_">alert</span>(x); <span class="comment">// xiao </span></span><br></pre></td></tr></table></figure><p>JavaScript只有一个全局作用域，任何变量自内向外查找，如果在全局作用域都没有找到，报错<code>RefrenceError</code></p><h2 id="规范"><a href="#规范" class="headerlink" title="规范"></a>规范</h2><h3 id="命名"><a href="#命名" class="headerlink" title="命名"></a>命名</h3><p>不同地js文件如果使用了相同的变量名，会发生冲突，所以我们把变量全部放入定义的唯一命名空间中，避免冲突问题</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 定义唯一全局变量</span></span><br><span class="line"><span class="keyword">var</span> xiao = &#123;&#125;;</span><br><span class="line">xiao.<span class="property">name</span> = <span class="string">&quot;Xiao Jinghuai&quot;</span>;</span><br><span class="line">xiao.<span class="property">age</span> = <span class="number">18</span>;</span><br><span class="line">xiao.<span class="property">add</span> = <span class="keyword">function</span>(<span class="params">a, b</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> a + b;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="let"><a href="#let" class="headerlink" title="let"></a>let</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">xiao</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(i);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(i); <span class="comment">// 10 产生作用域冲突问题</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>ES6：<code>let</code>关键字</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">xiao</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(i);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(i); <span class="comment">// Uncaught ReferenceError: i is not</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>建议都用<code>let</code>定义局部变量</strong></p><h3 id="const"><a href="#const" class="headerlink" title="const"></a>const</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> <span class="variable constant_">PI</span> = <span class="number">3.14</span>;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable constant_">PI</span>); <span class="comment">// 3.14</span></span><br><span class="line"><span class="variable constant_">PI</span> = <span class="number">4.13</span>;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable constant_">PI</span>); <span class="comment">//4.13</span></span><br></pre></td></tr></table></figure><p>ES6：<code>const</code></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="variable constant_">PI</span> = <span class="number">3.14</span>;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable constant_">PI</span>); <span class="comment">// 3.14</span></span><br><span class="line"><span class="variable constant_">PI</span> = <span class="number">4.13</span>;  <span class="comment">// Uncaught TypeError: Assignment to constant variable </span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable constant_">PI</span>); </span><br></pre></td></tr></table></figure><h2 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> person = &#123;</span><br><span class="line">    <span class="attr">name</span>: <span class="string">&quot;Xiao Jinghuai&quot;</span>,</span><br><span class="line">    <span class="attr">birth</span>: <span class="number">2006</span>,</span><br><span class="line">    <span class="attr">age</span>: <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">var</span> nowYear = <span class="keyword">new</span> <span class="title class_">Date</span>().<span class="title function_">getFullYear</span>();</span><br><span class="line">        <span class="keyword">return</span> nowYear - <span class="variable language_">this</span>.<span class="property">birth</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 属性</span></span><br><span class="line">person.<span class="property">name</span>;</span><br><span class="line"><span class="comment">// 方法，带()</span></span><br><span class="line">person.<span class="title function_">age</span>();</span><br></pre></td></tr></table></figure><h3 id="this-关键词"><a href="#this-关键词" class="headerlink" title="this 关键词"></a>this 关键词</h3><p><code>this</code> 表示当前对象的一个引用</p><p>但在 JavaScript 中 this 不是固定不变的，它会随着执行环境的改变而改变：</p><ul><li><strong>方法</strong>：this 表示该方法所属的对象。</li><li><strong>单独使用</strong>：this 表示全局对象。</li><li><strong>函数</strong>：this 表示全局对象。</li><li><strong>函数</strong>：在严格模式下，this 是未定义的(undefined)。</li><li><strong>事件</strong>：this 表示接收事件的元素。</li><li>类似 <code>call()</code> 和 <code>apply()</code> 方法可以将 this 引用到任何对象。</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">getAge</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> nowYear = <span class="keyword">new</span> <span class="title class_">Date</span>().<span class="title function_">getFullYear</span>();</span><br><span class="line">    <span class="keyword">return</span> nowYear - <span class="variable language_">this</span>.<span class="property">birth</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> person = &#123;</span><br><span class="line">    <span class="attr">name</span>: <span class="string">&quot;Xiao Jinghuai&quot;</span>,</span><br><span class="line">    <span class="attr">birth</span>: <span class="number">2006</span>,</span><br><span class="line">    <span class="attr">age</span>: getAge</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">person.<span class="title function_">getAge</span>();</span><br><span class="line"><span class="comment">// 19</span></span><br></pre></td></tr></table></figure><h3 id="apply-关键词"><a href="#apply-关键词" class="headerlink" title="apply 关键词"></a>apply 关键词</h3><p>JavaScript中<code>apply</code>可以控制this指向：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">apply</span>(thisArg)</span><br><span class="line"><span class="title function_">apply</span>(thisArg, argsArray)</span><br></pre></td></tr></table></figure><ul><li><code>thisArg</code>：调用 <code>func</code> 时提供的 <code>this</code> 值。如果函数不处于严格模式，则 <code>null</code>和 <code>undefined</code>会被替换为全局对象，原始值会被转换为对象。</li><li>一个类数组对象，用于指定调用 <code>func</code> 时的参数，或者如果不需要向函数提供参数，则为 <code>null</code>或 <code>undefined</code></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">getAge</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> nowYear = <span class="keyword">new</span> <span class="title class_">Date</span>().<span class="title function_">getFullYear</span>();</span><br><span class="line">    <span class="keyword">return</span> nowYear - <span class="variable language_">this</span>.<span class="property">birth</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> person = &#123;</span><br><span class="line">    <span class="attr">name</span>: <span class="string">&quot;Xiao Jinghuai&quot;</span>,</span><br><span class="line">    <span class="attr">birth</span>: <span class="number">2006</span>,</span><br><span class="line">    <span class="attr">age</span>: getAge</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_">alert</span>(getAge.<span class="title function_">apply</span>(person, [])); <span class="comment">// 19</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 开发 </category>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>流程控制（JavaScript）</title>
      <link href="/2025/03/04/2025-3-4-%E6%B5%81%E7%A8%8B%E6%8E%A7%E5%88%B6%EF%BC%88JavaScript%EF%BC%89/"/>
      <url>/2025/03/04/2025-3-4-%E6%B5%81%E7%A8%8B%E6%8E%A7%E5%88%B6%EF%BC%88JavaScript%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h1 id="流程控制（JavaScript）"><a href="#流程控制（JavaScript）" class="headerlink" title="流程控制（JavaScript）"></a>流程控制（JavaScript）</h1><h2 id="if-语句"><a href="#if-语句" class="headerlink" title="if 语句"></a>if 语句</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> score = <span class="number">88</span>;</span><br><span class="line"><span class="keyword">if</span> (score &gt; <span class="number">90</span>) &#123;</span><br><span class="line">    <span class="title function_">alert</span>(<span class="string">&quot;excellent&quot;</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (score &gt; <span class="number">80</span>) &#123;</span><br><span class="line">    <span class="title function_">alert</span>(<span class="string">&quot;good&quot;</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="title function_">alert</span>(<span class="string">&quot;not good&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="switch-语句"><a href="#switch-语句" class="headerlink" title="switch 语句"></a>switch 语句</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> date = <span class="number">2</span>;</span><br><span class="line"><span class="keyword">switch</span>(score) &#123;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">        <span class="title function_">alert</span>(<span class="string">&quot;Monday&quot;</span>);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">        <span class="title function_">alert</span>(<span class="string">&quot;Tuesday&quot;</span>);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">        <span class="title function_">alert</span>(<span class="string">&quot;Wednesday&quot;</span>);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line">        <span class="title function_">alert</span>(<span class="string">&quot;Thursday&quot;</span>);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">5</span>:</span><br><span class="line">        <span class="title function_">alert</span>(<span class="string">&quot;Friday&quot;</span>);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="attr">default</span>:</span><br><span class="line">        <span class="title function_">alert</span>(<span class="string">&quot;Weekend&quot;</span>);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="while-循环"><a href="#while-循环" class="headerlink" title="while 循环"></a>while 循环</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span> (age &lt; <span class="number">100</span>) &#123;</span><br><span class="line">    age = age - <span class="number">1</span>;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(age);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="do-while-循环"><a href="#do-while-循环" class="headerlink" title="do while 循环"></a>do while 循环</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">do</span> &#123;</span><br><span class="line">    age = age + <span class="number">1</span>;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(age);</span><br><span class="line">&#125;<span class="keyword">while</span> (age &lt; <span class="number">100</span>)</span><br></pre></td></tr></table></figure><h2 id="for-循环"><a href="#for-循环" class="headerlink" title="for 循环"></a>for 循环</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; <span class="number">100</span>; i++) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(i)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="for-in-循环"><a href="#for-in-循环" class="headerlink" title="for in 循环"></a>for in 循环</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> arr = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>];</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">let</span> i <span class="keyword">in</span> arr) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(arr[i]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="forEach-循环"><a href="#forEach-循环" class="headerlink" title="forEach 循环"></a>forEach 循环</h3><h4 id="回调函数"><a href="#回调函数" class="headerlink" title="回调函数"></a>回调函数</h4><p>把一段可执行的<strong>代码</strong>像参数传递那样传给其他<em>代码</em>，而这段<strong>代码</strong>会在某个时刻被调用执行，就叫做回调。这段<strong>代码</strong>叫回调函数。</p><p><code>forEach() </code>方法用于调用数组的每个元素，并将元素传递给回调函数</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">array.<span class="title function_">forEach</span>(<span class="title function_">callbackFn</span>(currentValue, index, arr), thisValue)</span><br></pre></td></tr></table></figure><ul><li><code>currentValue</code>：数组中正在处理的当前元素</li><li><code>index</code>：当前元素的索引（可选）</li><li><code>array</code>：当前正在遍历的数组（可选）</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> numbers = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>];</span><br><span class="line"></span><br><span class="line">numbers.<span class="title function_">forEach</span>(<span class="keyword">function</span>(<span class="params">number</span>) &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(number);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 开发 </category>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数据类型（JavaScript）</title>
      <link href="/2025/03/03/2025-3-3-%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%EF%BC%88JavaScript%EF%BC%89/"/>
      <url>/2025/03/03/2025-3-3-%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%EF%BC%88JavaScript%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h1 id="数据类型（JavaScript）"><a href="#数据类型（JavaScript）" class="headerlink" title="数据类型（JavaScript）"></a>数据类型（JavaScript）</h1><h2 id="字符串"><a href="#字符串" class="headerlink" title="字符串"></a>字符串</h2><ul><li><p>可用<code>&#39;&#39;</code> 或者 <code>&quot;&quot;</code></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> name = <span class="string">&quot;Xiao Jinghuai&quot;</span>;</span><br><span class="line"><span class="keyword">var</span> name = <span class="string">&#x27;zerd1y&#x27;</span>;</span><br></pre></td></tr></table></figure></li></ul><h3 id="访问"><a href="#访问" class="headerlink" title="访问"></a>访问</h3><ul><li><p>用索引访问：</p><p><code>str[index]</code></p></li></ul><h3 id="转义字符"><a href="#转义字符" class="headerlink" title="转义字符"></a>转义字符</h3><ul><li>转义字符：<code>\</code></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">\<span class="string">&#x27;         &#x27;</span></span><br><span class="line">\<span class="string">&quot;         &quot;</span></span><br><span class="line">\\         \</span><br><span class="line">\n         换行</span><br><span class="line">\t         回车</span><br></pre></td></tr></table></figure><h3 id="多行字符串编写"><a href="#多行字符串编写" class="headerlink" title="多行字符串编写"></a>多行字符串编写</h3><ul><li><p>符号：<code>ESC</code>和<code>TAB</code>键中间</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">`</span></span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> msg = <span class="string">`</span></span><br><span class="line"><span class="string">        hello</span></span><br><span class="line"><span class="string">        Xiao </span></span><br><span class="line"><span class="string">        Jinghuai`</span></span><br></pre></td></tr></table></figure></li></ul><h3 id="模板字符串"><a href="#模板字符串" class="headerlink" title="模板字符串"></a>模板字符串</h3><ul><li><code>$&#123;content&#125;</code></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> name = <span class="string">&quot;Xiao Jinghuai&quot;</span>;</span><br><span class="line"><span class="keyword">let</span> sayHello = <span class="string">`hello, <span class="subst">$&#123;name&#125;</span>`</span>;</span><br></pre></td></tr></table></figure><h3 id="属性"><a href="#属性" class="headerlink" title="属性"></a>属性</h3><ul><li><p>字符串长度：<code>str.length</code></p></li><li><p><strong>字符串定义后无法改变</strong></p><p><img src="/../img/screenshot/js_name.png" alt="js_name"></p></li></ul><h3 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h3><ul><li><p>大小写转换</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">name.<span class="title function_">toUpperCase</span>()</span><br><span class="line">name.<span class="title function_">toLowerCase</span>()</span><br></pre></td></tr></table></figure></li><li><p>检索指定字符第一次出现的位置</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">name.<span class="title function_">indexOf</span>()</span><br></pre></td></tr></table></figure></li><li><p>提取字符串中两个指定的索引号之间的字符</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">substring</span>() <span class="comment">//左闭右开</span></span><br></pre></td></tr></table></figure></li></ul><h2 id="数组"><a href="#数组" class="headerlink" title="数组"></a>数组</h2><p>**数组可以包含任意的数据类型：**包括字符串，数字，对象，函数，甚至其他数组</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> arr = [<span class="number">1</span>, <span class="number">2</span>, <span class="string">&quot;csdiy&quot;</span>]</span><br></pre></td></tr></table></figure><h3 id="访问-1"><a href="#访问-1" class="headerlink" title="访问"></a>访问</h3><ul><li><p>用索引访问：</p><p><code>arr[index]</code></p></li></ul><h3 id="属性-1"><a href="#属性-1" class="headerlink" title="属性"></a>属性</h3><ul><li><p>长度：<code>arr.length</code></p><p>注意：给arr.length赋值，数组大小会发生变化。多的为undefined，少的会直接删除元素。方法</p></li></ul><h3 id="方法-1"><a href="#方法-1" class="headerlink" title="方法"></a>方法</h3><ul><li><p>查询某个元素在数组中第一次出现的位置</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">arr.<span class="title function_">indexOf</span>()</span><br><span class="line"><span class="comment">// 字符串&quot;1&quot;和数字1不一样</span></span><br></pre></td></tr></table></figure></li><li><p>切片</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">slice</span>()</span><br><span class="line"><span class="comment">//左闭右开</span></span><br></pre></td></tr></table></figure></li><li><p><code>push()</code>、<code>pop()</code></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">push</span>() <span class="comment">//添加到尾部</span></span><br><span class="line"><span class="title function_">pop</span>()  <span class="comment">//删除尾部最后一个元素</span></span><br></pre></td></tr></table></figure></li><li><p><code>unshift()</code>：在头部添加元素</p></li><li><p><code>shift</code>：删除数组头部第一个元素</p></li><li><p><code>sort()</code>：排序（字符串Unicode顺序）</p></li><li><p><code>reverse()</code>：反转数组元素</p></li><li><p><code>concat()</code>：合并现有数组，返回一个新数组（不修改原数组）</p></li><li><p><code>join()</code>：用特定字符，将数组拼接形成字符串（默认<code>,</code>）</p></li></ul><h2 id="对象"><a href="#对象" class="headerlink" title="对象"></a>对象</h2><ul><li><p>JavaScript 中的所有事物都是对象：字符串、数值、数组、函数…</p></li><li><p>此外，JavaScript 允许自定义对象</p></li><li><p>JavaScript中<strong>所有的键都是字符串，值是任意对象</strong></p></li></ul><h3 id="创建对象"><a href="#创建对象" class="headerlink" title="创建对象"></a>创建对象</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> 对象名 = &#123;</span><br><span class="line">    属性名: 对象值,</span><br><span class="line">    属性名: 对象值,</span><br><span class="line">    属性名: 对象值</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><p>创建一个person对象：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> person = &#123;</span><br><span class="line">            <span class="attr">name</span>: <span class="string">&quot;Xiao Jinghuai&quot;</span>,</span><br><span class="line">            <span class="attr">age</span>: <span class="number">18</span>,</span><br><span class="line">            <span class="attr">email</span>: <span class="string">&quot;xiaojinghuai33@gmail&quot;</span></span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure></li><li><p><code>&#123;...&#125;</code>表示一个对象：键值对描述属性<code>xxx: xxx</code>，多个属性间用<code>,</code>隔开，最后一个属性不加<code>,</code></p></li></ul><h3 id="操作"><a href="#操作" class="headerlink" title="操作"></a>操作</h3><ul><li><p>访问：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">对象.属性</span><br></pre></td></tr></table></figure></li><li><p>对象赋值：</p><p>在浏览器控制台可以直接改变对象属性的值</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">person.<span class="property">name</span> = <span class="string">&quot;zerd1y&quot;</span></span><br><span class="line">&gt; <span class="string">&#x27;zerd1y&#x27;</span></span><br><span class="line">person.<span class="property">name</span></span><br><span class="line">&gt; <span class="string">&#x27;zerd1y&#x27;</span></span><br></pre></td></tr></table></figure></li><li><p>使用一个不存在的对象属性，不会报错</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">person.<span class="property">score</span></span><br><span class="line">&gt; <span class="literal">undefined</span></span><br></pre></td></tr></table></figure></li><li><p>动态的删减属性</p><p>通过<code>delete</code>删除对象属性</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">delete</span> person.<span class="property">age</span></span><br><span class="line"><span class="literal">true</span></span><br><span class="line">person</span><br><span class="line">&gt; &#123;<span class="attr">name</span>: <span class="string">&#x27;zerd1y&#x27;</span>, <span class="attr">email</span>: <span class="string">&#x27;xiaojinghuai33@gmail&#x27;</span>&#125;</span><br></pre></td></tr></table></figure></li><li><p>动态的添加</p><p>直接给新的属性添加值即可</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">person.<span class="property">score</span> = <span class="number">100</span></span><br><span class="line">&gt; <span class="number">100</span></span><br><span class="line">person</span><br><span class="line">&gt; &#123;<span class="attr">name</span>: <span class="string">&#x27;zerd1y&#x27;</span>, <span class="attr">email</span>: <span class="string">&#x27;xiaojinghuai33@gmail&#x27;</span>, <span class="attr">score</span>: <span class="number">100</span>&#125;</span><br></pre></td></tr></table></figure></li><li><p>判断属性是否在这个对象中</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&#x27;name&#x27;</span> <span class="keyword">in</span> person</span><br><span class="line">&gt; <span class="literal">true</span></span><br><span class="line"></span><br><span class="line">name <span class="keyword">in</span> person</span><br><span class="line">&gt; <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//继承</span></span><br><span class="line"><span class="string">&#x27;toString&#x27;</span> <span class="keyword">in</span> person</span><br><span class="line">&gt; <span class="literal">true</span></span><br></pre></td></tr></table></figure></li><li><p>判断一个属性是否是这个对象<strong>自身</strong>拥有的（不是继承的）</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">person.<span class="title function_">hasOwnProperty</span>(<span class="string">&#x27;toString&#x27;</span>)</span><br><span class="line">&gt; <span class="literal">false</span></span><br><span class="line">person.<span class="title function_">hasOwnProperty</span>(<span class="string">&#x27;name&#x27;</span>)</span><br><span class="line">&gt; <span class="literal">true</span></span><br></pre></td></tr></table></figure></li></ul><h2 id="Map"><a href="#Map" class="headerlink" title="Map"></a>Map</h2><ul><li>类似于python中的字典（键值对）</li></ul><h3 id="创建"><a href="#创建" class="headerlink" title="创建"></a>创建</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> fruits = <span class="keyword">new</span> <span class="title class_">Map</span>([</span><br><span class="line">    [<span class="string">&quot;apples&quot;</span>, <span class="number">500</span>],</span><br><span class="line">    [<span class="string">&quot;bananas&quot;</span>, <span class="number">300</span>],</span><br><span class="line">    [<span class="string">&quot;oranges&quot;</span>, <span class="number">200</span>]</span><br><span class="line">]);</span><br></pre></td></tr></table></figure><h3 id="访问-2"><a href="#访问-2" class="headerlink" title="访问"></a>访问</h3><ul><li><code>get()</code></li><li><code>set()</code></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">fruits.<span class="title function_">get</span>(<span class="string">&#x27;apples&#x27;</span>);</span><br><span class="line">&gt; <span class="number">500</span></span><br><span class="line">fruits.<span class="title function_">set</span>(<span class="string">&#x27;potato&#x27;</span>, <span class="number">700</span>);</span><br><span class="line"><span class="title class_">Map</span>(<span class="number">4</span>) &#123;<span class="string">&#x27;apples&#x27;</span> =&gt; <span class="number">500</span>, <span class="string">&#x27;bananas&#x27;</span> =&gt; <span class="number">300</span>, <span class="string">&#x27;oranges&#x27;</span> =&gt; <span class="number">200</span>, <span class="string">&#x27;potato&#x27;</span> =&gt; <span class="number">700</span>&#125;</span><br></pre></td></tr></table></figure><h2 id="Set"><a href="#Set" class="headerlink" title="Set"></a>Set</h2><ul><li>无序不重复的集合</li></ul><h3 id="创建-1"><a href="#创建-1" class="headerlink" title="创建"></a>创建</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> letters = <span class="keyword">new</span> <span class="title class_">Set</span>([<span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;c&#x27;</span>]);</span><br></pre></td></tr></table></figure><h3 id="访问-3"><a href="#访问-3" class="headerlink" title="访问"></a>访问</h3><ul><li><code>add()</code></li><li><code>delete()</code></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">letters.<span class="title function_">add</span>(<span class="string">&#x27;d&#x27;</span>);</span><br><span class="line">&gt; <span class="title class_">Set</span>(<span class="number">4</span>) &#123;<span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;c&#x27;</span>, <span class="string">&#x27;d&#x27;</span>&#125;</span><br><span class="line">letters.<span class="title function_">delete</span>(<span class="string">&#x27;a&#x27;</span>);</span><br><span class="line">&gt; <span class="literal">true</span></span><br><span class="line">letters</span><br><span class="line">&gt; <span class="title class_">Set</span>(<span class="number">3</span>) &#123;<span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;c&#x27;</span>, <span class="string">&#x27;d&#x27;</span>&#125;</span><br></pre></td></tr></table></figure><ul><li><code>forEach()</code></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> letters = <span class="keyword">new</span> <span class="title class_">Set</span>([<span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;c&#x27;</span>]);</span><br><span class="line">letters.<span class="title function_">forEach</span>(<span class="keyword">function</span>(<span class="params">value</span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(value);</span><br><span class="line">&#125;)</span><br><span class="line">&gt; a</span><br><span class="line">&gt; b</span><br><span class="line">&gt; c</span><br></pre></td></tr></table></figure><h2 id="iterator"><a href="#iterator" class="headerlink" title="iterator"></a>iterator</h2><h3 id="for-of"><a href="#for-of" class="headerlink" title="for of"></a>for of</h3><ul><li>遍历数组</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arr = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>];</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">let</span> i <span class="keyword">of</span> arr) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(i);</span><br><span class="line">&#125;</span><br><span class="line">&gt; <span class="number">1</span> <span class="number">2</span> <span class="number">3</span> <span class="number">4</span> <span class="number">5</span></span><br></pre></td></tr></table></figure><ul><li>遍历Map</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> m=<span class="keyword">new</span> <span class="title class_">Map</span>([[<span class="number">1</span>, <span class="string">&#x27;x&#x27;</span>], [<span class="number">2</span>, <span class="string">&#x27;y&#x27;</span>], [<span class="number">3</span>, <span class="string">&#x27;z&#x27;</span>]]);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">let</span> j <span class="keyword">of</span> m)&#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(j);</span><br><span class="line">&#125;</span><br><span class="line">&gt; [<span class="number">1</span>, <span class="string">&#x27;x&#x27;</span>], [<span class="number">2</span>, <span class="string">&#x27;y&#x27;</span>], [<span class="number">3</span>, <span class="string">&#x27;z&#x27;</span>]</span><br></pre></td></tr></table></figure><ul><li>便利Set</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> set = <span class="keyword">new</span> <span class="title class_">Set</span>([[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>]]);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">let</span> i <span class="keyword">of</span> set) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(i);</span><br><span class="line">&#125;</span><br><span class="line">&gt; <span class="number">1</span> <span class="number">2</span> <span class="number">3</span> <span class="number">4</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 开发 </category>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>线性代数（深度学习）</title>
      <link href="/2025/03/03/2025-3-3-%E7%BA%BF%E6%80%A7%E4%BB%A3%E6%95%B0%EF%BC%88%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%EF%BC%89/"/>
      <url>/2025/03/03/2025-3-3-%E7%BA%BF%E6%80%A7%E4%BB%A3%E6%95%B0%EF%BC%88%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h1 id="线性代数（深度学习）"><a href="#线性代数（深度学习）" class="headerlink" title="线性代数（深度学习）"></a>线性代数（深度学习）</h1><h2 id="标量"><a href="#标量" class="headerlink" title="标量"></a>标量</h2><p><strong>标量由只有一个元素的张量表示</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> torch</span><br><span class="line"></span><br><span class="line">x = torch.tensor(<span class="number">3.0</span>)</span><br><span class="line">y = torch.tensor(<span class="number">2.0</span>)</span><br><span class="line"></span><br><span class="line">x + y, x * y, x / y, x**y</span><br><span class="line"></span><br><span class="line">// (tensor(<span class="number">5.</span>), tensor(<span class="number">6.</span>), tensor(<span class="number">1.5000</span>), tensor(<span class="number">9.</span>))</span><br></pre></td></tr></table></figure><h2 id="向量"><a href="#向量" class="headerlink" title="向量"></a>向量</h2><p><strong>向量可以被视为标量值组成的列表</strong>，这些标量值被称为向量的<em>元素</em>（element）或<em>分量</em>（component）</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">x = torch.arange(<span class="number">4</span>)</span><br><span class="line">x</span><br><span class="line"></span><br><span class="line">// tensor([<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>])</span><br></pre></td></tr></table></figure><h3 id="访问"><a href="#访问" class="headerlink" title="访问"></a>访问</h3><p><strong>通过张量的索引来访问任一元素</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">x[<span class="number">3</span>]</span><br><span class="line">// tensot(<span class="number">3</span>)</span><br></pre></td></tr></table></figure><h3 id="长度、维度和形状"><a href="#长度、维度和形状" class="headerlink" title="长度、维度和形状"></a>长度、维度和形状</h3><p><strong>向量</strong>的长度通常称为向量的<strong>维度（dimension）</strong></p><ul><li><p>访问张量长度：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">len</span>(x)</span><br><span class="line">// <span class="number">4</span></span><br></pre></td></tr></table></figure></li></ul><p>**形状（shape）**是一个元素组，列出了张量沿每个轴的长度（维数）</p><p>用张量表示一个向量（只有一个轴）时，<strong>形状只有一个元素</strong></p><ul><li><p>访问：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">x.shape</span><br><span class="line">// torch.Size([<span class="number">4</span>])</span><br></pre></td></tr></table></figure></li></ul><h2 id="矩阵"><a href="#矩阵" class="headerlink" title="矩阵"></a>矩阵</h2><ul><li><p>创建矩阵</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">A = torch.arange(<span class="number">20</span>).reshape(<span class="number">5</span>, <span class="number">4</span>)</span><br><span class="line">A</span><br><span class="line"></span><br><span class="line">// tensor([[ <span class="number">0</span>,  <span class="number">1</span>,  <span class="number">2</span>,  <span class="number">3</span>],</span><br><span class="line">        [ <span class="number">4</span>,  <span class="number">5</span>,  <span class="number">6</span>,  <span class="number">7</span>],</span><br><span class="line">        [ <span class="number">8</span>,  <span class="number">9</span>, <span class="number">10</span>, <span class="number">11</span>],</span><br><span class="line">        [<span class="number">12</span>, <span class="number">13</span>, <span class="number">14</span>, <span class="number">15</span>],</span><br><span class="line">        [<span class="number">16</span>, <span class="number">17</span>, <span class="number">18</span>, <span class="number">19</span>]])</span><br></pre></td></tr></table></figure></li><li><p>矩阵的转置：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">A.T</span><br><span class="line"></span><br><span class="line">// tensor([[ <span class="number">0</span>,  <span class="number">4</span>,  <span class="number">8</span>, <span class="number">12</span>, <span class="number">16</span>],</span><br><span class="line">        [ <span class="number">1</span>,  <span class="number">5</span>,  <span class="number">9</span>, <span class="number">13</span>, <span class="number">17</span>],</span><br><span class="line">        [ <span class="number">2</span>,  <span class="number">6</span>, <span class="number">10</span>, <span class="number">14</span>, <span class="number">18</span>],</span><br><span class="line">        [ <span class="number">3</span>,  <span class="number">7</span>, <span class="number">11</span>, <span class="number">15</span>, <span class="number">19</span>]])</span><br><span class="line"></span><br><span class="line">B = torch.tensor([<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>], [<span class="number">2</span>, <span class="number">0</span>, <span class="number">4</span>], [<span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>])</span><br><span class="line">B</span><br><span class="line"></span><br><span class="line">// tensor([[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>],</span><br><span class="line">        [<span class="number">2</span>, <span class="number">0</span>, <span class="number">4</span>],</span><br><span class="line">        [<span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>]])</span><br><span class="line"></span><br><span class="line">B == B.T</span><br><span class="line"></span><br><span class="line">// tensor([[<span class="literal">True</span>, <span class="literal">True</span>, <span class="literal">True</span>],</span><br><span class="line">        [<span class="literal">True</span>, <span class="literal">True</span>, <span class="literal">True</span>],</span><br><span class="line">        [<span class="literal">True</span>, <span class="literal">True</span>, <span class="literal">True</span>]])</span><br></pre></td></tr></table></figure></li></ul><h2 id="张量"><a href="#张量" class="headerlink" title="张量"></a>张量</h2><p><strong>张量是描述具有任意数量轴的n维数组的通用方法</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">X = torch.arange(<span class="number">24</span>).reshape(<span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>)</span><br><span class="line">X </span><br><span class="line"></span><br><span class="line">// tensor([[[ <span class="number">0</span>,  <span class="number">1</span>,  <span class="number">2</span>,  <span class="number">3</span>],</span><br><span class="line">            [ <span class="number">4</span>,  <span class="number">5</span>,  <span class="number">6</span>,  <span class="number">7</span>],</span><br><span class="line">            [ <span class="number">8</span>,  <span class="number">9</span>, <span class="number">10</span>, <span class="number">11</span>]],</span><br><span class="line">           [[<span class="number">12</span>, <span class="number">13</span>, <span class="number">14</span>, <span class="number">15</span>],</span><br><span class="line">            [<span class="number">16</span>, <span class="number">17</span>, <span class="number">18</span>, <span class="number">19</span>],</span><br><span class="line">            [<span class="number">20</span>, <span class="number">21</span>, <span class="number">22</span>, <span class="number">23</span>]]])</span><br></pre></td></tr></table></figure><h3 id="张量算法的基本性质"><a href="#张量算法的基本性质" class="headerlink" title="张量算法的基本性质"></a>张量算法的基本性质</h3><h4 id="元素加法"><a href="#元素加法" class="headerlink" title="元素加法"></a>元素加法</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">A = torch.arange(<span class="number">20</span>, dtype=torch.float32).reshape(<span class="number">5</span>, <span class="number">4</span>)</span><br><span class="line">B = A.clone()    <span class="comment"># 通过分配新内存，将A的一个副本分配给B</span></span><br><span class="line">A, A + B</span><br><span class="line"></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">(tensor([[ 0.,  1.,  2.,  3.],</span></span><br><span class="line"><span class="string">         [ 4.,  5.,  6.,  7.],</span></span><br><span class="line"><span class="string">         [ 8.,  9., 10., 11.],</span></span><br><span class="line"><span class="string">         [12., 13., 14., 15.],</span></span><br><span class="line"><span class="string">         [16., 17., 18., 19.]]),</span></span><br><span class="line"><span class="string"> tensor([[ 0.,  2.,  4.,  6.],</span></span><br><span class="line"><span class="string">         [ 8., 10., 12., 14.],</span></span><br><span class="line"><span class="string">         [16., 18., 20., 22.],</span></span><br><span class="line"><span class="string">         [24., 26., 28., 30.],</span></span><br><span class="line"><span class="string">         [32., 34., 36., 38.]]))</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br></pre></td></tr></table></figure><h4 id="Hadamard积"><a href="#Hadamard积" class="headerlink" title="Hadamard积"></a>Hadamard积</h4><p>$$<br>\mathbf{A} \odot \mathbf{B} &#x3D;<br>\begin{bmatrix}<br>    a_{11}  b_{11} &amp; a_{12}  b_{12} &amp; \dots  &amp; a_{1n}  b_{1n} \<br>    a_{21}  b_{21} &amp; a_{22}  b_{22} &amp; \dots  &amp; a_{2n}  b_{2n} \<br>    \vdots &amp; \vdots &amp; \ddots &amp; \vdots \<br>    a_{m1}  b_{m1} &amp; a_{m2}  b_{m2} &amp; \dots  &amp; a_{mn}  b_{mn}<br>\end{bmatrix}.<br>$$</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">A * B</span><br><span class="line"></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">tensor([[  0.,   1.,   4.,   9.],</span></span><br><span class="line"><span class="string">        [ 16.,  25.,  36.,  49.],</span></span><br><span class="line"><span class="string">        [ 64.,  81., 100., 121.],</span></span><br><span class="line"><span class="string">        [144., 169., 196., 225.],</span></span><br><span class="line"><span class="string">        [256., 289., 324., 361.]])</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br></pre></td></tr></table></figure><ul><li>将张量乘以或加上一个标量不会改变张量的形状，其中张量的每个元素都将与标量相加或相乘</li></ul><h2 id="降维"><a href="#降维" class="headerlink" title="降维"></a>降维</h2><h3 id="A："><a href="#A：" class="headerlink" title="A："></a>A：</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">(tensor([[ <span class="number">0.</span>,  <span class="number">1.</span>,  <span class="number">2.</span>,  <span class="number">3.</span>],</span><br><span class="line">         [ <span class="number">4.</span>,  <span class="number">5.</span>,  <span class="number">6.</span>,  <span class="number">7.</span>],</span><br><span class="line">         [ <span class="number">8.</span>,  <span class="number">9.</span>, <span class="number">10.</span>, <span class="number">11.</span>],</span><br><span class="line">         [<span class="number">12.</span>, <span class="number">13.</span>, <span class="number">14.</span>, <span class="number">15.</span>],</span><br><span class="line">         [<span class="number">16.</span>, <span class="number">17.</span>, <span class="number">18.</span>, <span class="number">19.</span>]])</span><br></pre></td></tr></table></figure><h3 id="求和"><a href="#求和" class="headerlink" title="求和"></a>求和</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">A.shape(), A.<span class="built_in">sum</span>()</span><br><span class="line"></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">(torch.Size([5, 4]), tensor(190.))</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br></pre></td></tr></table></figure><h3 id="沿轴求和"><a href="#沿轴求和" class="headerlink" title="沿轴求和"></a>沿轴求和</h3><h4 id="沿行求和"><a href="#沿行求和" class="headerlink" title="沿行求和"></a>沿行求和</h4><ul><li>轴0</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">A_sum_axis0 = A.<span class="built_in">sum</span>(axis=<span class="number">0</span>)</span><br><span class="line">A_sum_axis0, A_sum_axis0.shape</span><br><span class="line"></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">(tensor([40., 45., 50., 55.]), torch.Size([4]))</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br></pre></td></tr></table></figure><h4 id="沿列求和"><a href="#沿列求和" class="headerlink" title="沿列求和"></a>沿列求和</h4><ul><li>轴1</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">A_sum_axis1 = A.<span class="built_in">sum</span>(axis=<span class="number">1</span>)</span><br><span class="line">A_sum_axis1, A_sum_axis1.shape</span><br><span class="line"></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">(tensor([ 6., 22., 38., 54., 70.]), torch.Size([5]))</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br></pre></td></tr></table></figure><h4 id="沿着行和列对矩阵求和"><a href="#沿着行和列对矩阵求和" class="headerlink" title="沿着行和列对矩阵求和"></a>沿着行和列对矩阵求和</h4><p>价于对矩阵的所有元素进行求和</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">A.<span class="built_in">sum</span>(axis=[<span class="number">0</span>, <span class="number">1</span>])  <span class="comment"># 结果和A.sum()相同</span></span><br></pre></td></tr></table></figure><h3 id="平均值"><a href="#平均值" class="headerlink" title="平均值"></a>平均值</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">A.mean(), A.<span class="built_in">sum</span>() / A.numel()</span><br><span class="line"></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">(tensor(9.5000), tensor(9.5000))</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br></pre></td></tr></table></figure><ul><li><p>沿指定轴求平均值</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">A.mean(axis=<span class="number">0</span>), A.<span class="built_in">sum</span>(axis=<span class="number">0</span>) / A.shape[<span class="number">0</span>]</span><br><span class="line"></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">(tensor([ 8.,  9., 10., 11.]), tensor([ 8.,  9., 10., 11.]))</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br></pre></td></tr></table></figure></li></ul><h3 id="非降维求和"><a href="#非降维求和" class="headerlink" title="非降维求和"></a>非降维求和</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sum_A = A.<span class="built_in">sum</span>(axis=<span class="number">1</span>, keepdims=<span class="literal">True</span>)</span><br><span class="line">sum_A</span><br></pre></td></tr></table></figure><p>求和后仍保持两个轴，可以<strong>通过广播将<code>A</code>除以<code>sum_A</code></strong>，得知每个元素在各行的占比</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">A / sum_A</span><br><span class="line"></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">tensor([[0.0000, 0.1667, 0.3333, 0.5000],</span></span><br><span class="line"><span class="string">        [0.1818, 0.2273, 0.2727, 0.3182],</span></span><br><span class="line"><span class="string">        [0.2105, 0.2368, 0.2632, 0.2895],</span></span><br><span class="line"><span class="string">        [0.2222, 0.2407, 0.2593, 0.2778],</span></span><br><span class="line"><span class="string">        [0.2286, 0.2429, 0.2571, 0.2714]])</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br></pre></td></tr></table></figure><h4 id="沿轴求累积和"><a href="#沿轴求累积和" class="headerlink" title="沿轴求累积和"></a>沿轴求累积和</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">A.cumsum(axis=<span class="number">0</span>)</span><br><span class="line"></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">tensor([[ 0.,  1.,  2.,  3.],</span></span><br><span class="line"><span class="string">        [ 4.,  6.,  8., 10.],</span></span><br><span class="line"><span class="string">        [12., 15., 18., 21.],</span></span><br><span class="line"><span class="string">        [24., 28., 32., 36.],</span></span><br><span class="line"><span class="string">        [40., 45., 50., 55.]])</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br></pre></td></tr></table></figure><h2 id="点积"><a href="#点积" class="headerlink" title="点积"></a>点积</h2><ul><li><p><code>torch.dot(x, y)</code></p></li><li><p>向量乘向量</p></li></ul><p>$$<br>\mathbf{x}^\top \mathbf{y} &#x3D; \sum_{i&#x3D;1}^{d} x_i y_i<br>$$</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">y = torch.ones(<span class="number">4</span>, dtype = torch.float32)</span><br><span class="line">x, y, torch.dot(x, y)</span><br><span class="line"></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">(tensor([0., 1., 2., 3.]), tensor([1., 1., 1., 1.]), tensor(6.))</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br></pre></td></tr></table></figure><ul><li>或者：按元素乘法，然后进行求和来表示两个向量的点积</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">torch.<span class="built_in">sum</span>(x * y)</span><br><span class="line">tensor(<span class="number">6.</span>)</span><br></pre></td></tr></table></figure><h2 id="矩阵-向量积"><a href="#矩阵-向量积" class="headerlink" title="矩阵-向量积"></a>矩阵-向量积</h2><ul><li><code>torch.mv(A, x)</code></li></ul><p>$$<br>\mathbf{A}\mathbf{x}<br>&#x3D; \begin{bmatrix}<br>\mathbf{a}^\top_{1} \<br>\mathbf{a}^\top_{2} \<br>\vdots \<br>\mathbf{a}^\top_m \<br>\end{bmatrix}\mathbf{x}<br>&#x3D; \begin{bmatrix}<br> \mathbf{a}^\top_{1} \mathbf{x}  \<br> \mathbf{a}^\top_{2} \mathbf{x} \<br>\vdots\<br> \mathbf{a}^\top_{m} \mathbf{x}\<br>\end{bmatrix}.<br>$$</p><p>$$<br>其中每个\mathbf{a}^\top_{i} \in \mathbb{R}^n都是向量，表示矩阵的第i行<br>$$</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">A.shape, x.shape, torch.mv(A, x)</span><br><span class="line"></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">(torch.Size([5, 4]), torch.Size([4]), tensor([ 14.,  38.,  62.,  86., 110.]))</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br></pre></td></tr></table></figure><ul><li><code>A</code>的列维数（沿轴1的长度）必须与<code>x</code>的维数（其长度）相同</li></ul><h2 id="矩阵-矩阵乘法"><a href="#矩阵-矩阵乘法" class="headerlink" title="矩阵-矩阵乘法"></a>矩阵-矩阵乘法</h2><ul><li><code>torch.mm(A, B)</code></li></ul><p>$$<br>\mathbf{A}&#x3D;\begin{bmatrix}<br> a_{11} &amp; a_{12} &amp; \cdots &amp; a_{1k} \<br> a_{21} &amp; a_{22} &amp; \cdots &amp; a_{2k} \<br>\vdots &amp; \vdots &amp; \ddots &amp; \vdots \<br> a_{n1} &amp; a_{n2} &amp; \cdots &amp; a_{nk} \<br>\end{bmatrix},\quad<br>\mathbf{B}&#x3D;\begin{bmatrix}<br> b_{11} &amp; b_{12} &amp; \cdots &amp; b_{1m} \<br> b_{21} &amp; b_{22} &amp; \cdots &amp; b_{2m} \<br>\vdots &amp; \vdots &amp; \ddots &amp; \vdots \<br> b_{k1} &amp; b_{k2} &amp; \cdots &amp; b_{km} \<br>\end{bmatrix}.<br>$$</p><p>$$<br>\mathbf{A}&#x3D;<br>\begin{bmatrix}<br>\mathbf{a}^\top_{1} \<br>\mathbf{a}^\top_{2} \<br>\vdots \<br>\mathbf{a}^\top_n \<br>\end{bmatrix},<br>\quad \mathbf{B}&#x3D;\begin{bmatrix}<br> \mathbf{b}<em>{1} &amp; \mathbf{b}</em>{2} &amp; \cdots &amp; \mathbf{b}_{m} \<br>\end{bmatrix}.<br>$$</p><p>$$<br>\mathbf{C} &#x3D; \mathbf{AB} &#x3D; \begin{bmatrix}<br>\mathbf{a}^\top_{1} \<br>\mathbf{a}^\top_{2} \<br>\vdots \<br>\mathbf{a}^\top_n \<br>\end{bmatrix}<br>\begin{bmatrix}<br> \mathbf{b}<em>{1} &amp; \mathbf{b}</em>{2} &amp; \cdots &amp; \mathbf{b}<em>{m} \<br>\end{bmatrix}<br>&#x3D; \begin{bmatrix}<br>\mathbf{a}^\top</em>{1} \mathbf{b}<em>1 &amp; \mathbf{a}^\top</em>{1}\mathbf{b}<em>2&amp; \cdots &amp; \mathbf{a}^\top</em>{1} \mathbf{b}<em>m \<br> \mathbf{a}^\top</em>{2}\mathbf{b}<em>1 &amp; \mathbf{a}^\top</em>{2} \mathbf{b}<em>2 &amp; \cdots &amp; \mathbf{a}^\top</em>{2} \mathbf{b}<em>m \<br> \vdots &amp; \vdots &amp; \ddots &amp;\vdots\<br>\mathbf{a}^\top</em>{n} \mathbf{b}<em>1 &amp; \mathbf{a}^\top</em>{n}\mathbf{b}<em>2&amp; \cdots&amp; \mathbf{a}^\top</em>{n} \mathbf{b}_m<br>\end{bmatrix}.<br>$$</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">B = torch.ones(<span class="number">4</span>, <span class="number">3</span>)</span><br><span class="line">torch.mm(A, B)</span><br><span class="line"></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">tensor([[ 6.,  6.,  6.],</span></span><br><span class="line"><span class="string">        [22., 22., 22.],</span></span><br><span class="line"><span class="string">        [38., 38., 38.],</span></span><br><span class="line"><span class="string">        [54., 54., 54.],</span></span><br><span class="line"><span class="string">        [70., 70., 70.]])</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br></pre></td></tr></table></figure><h2 id="范数"><a href="#范数" class="headerlink" title="范数"></a>范数</h2><ul><li>范数（norm）表示一个向量有多大，这里考虑的<em>大小</em>（size）概念不涉及维度，而是分量的大小</li><li>在线性代数中，向量范数是将向量映射到标量的函数</li></ul><h3 id="性质"><a href="#性质" class="headerlink" title="性质"></a>性质</h3><ul><li><p>性质1：如果我们按常数因子缩放向量的所有元素， 其范数也会按相同常数因子的<em>绝对值</em>缩放<br>$$<br>f(\alpha \mathbf{x}) &#x3D; |\alpha| f(\mathbf{x}).<br>$$</p></li><li><p>性质2：三角不等式<br>$$<br>f(\mathbf{x} + \mathbf{y}) \leq f(\mathbf{x}) + f(\mathbf{y}).<br>$$</p></li><li><p>性质3：范数必须是非负的<br>$$<br>f(\mathbf{x}) \geq 0.<br>$$</p></li><li><p>性质4：范数最小为0，当且仅当向量全由0组成<br>$$<br>\forall i, [\mathbf{x}]_i &#x3D; 0 \Leftrightarrow f(\mathbf{x})&#x3D;0.<br>$$</p></li></ul><h3 id="L-2-范数"><a href="#L-2-范数" class="headerlink" title="$L_2$ 范数"></a>$L_2$ 范数</h3><p><code>torch.norm(u)</code></p><p>假设$n$维向量$\mathbf{x}$中的元素是$x_1,\ldots,x_n$，其**$L_2$<em>范数</em>是向量元素平方和的平方根：**<br>$$<br>|\mathbf{x}|<em>2 &#x3D; \sqrt{\sum</em>{i&#x3D;1}^n x_i^2}<br>$$</p><ul><li>在$L_2$范数中常常省略下标$2$，也就是说$|\mathbf{x}|$等同于$|\mathbf{x}|_2$</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">u = torch.tensor([<span class="number">3.0</span>, -<span class="number">4.0</span>])</span><br><span class="line">torch.norm(u)</span><br><span class="line"></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">tensot(5.)</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br></pre></td></tr></table></figure><h3 id="L-1-范数"><a href="#L-1-范数" class="headerlink" title="$L_1$范数"></a>$L_1$范数</h3><p><code>torch.abs(A).sum()</code></p><ul><li>深度学习中更经常地使用$L_2$范数的平方，也经常遇到$L_1$范数：</li></ul><p>$$<br>|\mathbf{x}|<em>1 &#x3D; \sum</em>{i&#x3D;1}^n \left|x_i \right|.<br>$$</p><ul><li>与$L_2$范数相比，$L_1$范数受异常值的影响较小</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">torch.<span class="built_in">abs</span>(u).<span class="built_in">sum</span>()</span><br><span class="line"></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">tensor(7.)</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br></pre></td></tr></table></figure><h3 id="L-p-范数"><a href="#L-p-范数" class="headerlink" title="$L_p$范数"></a>$L_p$范数</h3><p>$L_2$范数和$L_1$范数都是更一般的$L_p$范数的特例<br>$$<br>|\mathbf{x}|<em>p &#x3D; \left(\sum</em>{i&#x3D;1}^n \left|x_i \right|^p \right)^{1&#x2F;p}.<br>$$</p><h3 id="Frobenius范数"><a href="#Frobenius范数" class="headerlink" title="Frobenius范数"></a><em>Frobenius</em>范数</h3><p><code>torch.norm(A)</code></p><p>类似于向量的$L_2$范数，<strong>矩阵</strong>$\mathbf{X} \in \mathbb{R}^{m \times n}$<strong>的<em>Frobenius范数</em>（Frobenius norm）是矩阵元素平方和的平方根：</strong><br>$$<br>|\mathbf{X}|<em>F &#x3D; \sqrt{\sum</em>{i&#x3D;1}^m \sum_{j&#x3D;1}^n x_{ij}^2}.<br>$$<br>Frobenius范数满足向量范数的所有性质，它就像是矩阵形向量的$L_2$范数</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">torch.norm(torch.ones((<span class="number">4</span>, <span class="number">9</span>)))</span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">tensor(6.)</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br></pre></td></tr></table></figure><h2 id="范数和目标"><a href="#范数和目标" class="headerlink" title="范数和目标"></a>范数和目标</h2><p><strong>目标，或许是深度学习算法最重要的组成部分（除了数据），通常被表达为范数</strong></p><p>在深度学习中，我们经常试图解决优化问题：</p><ul><li><em>最大化</em>分配给观测数据的概率</li><li><em>最小化</em>预测和真实观测之间的距离</li></ul><p>用向量表示物品（如单词、产品或新闻文章），以便最小化相似项目之间的距离，最大化不同项目之间的距离。</p>]]></content>
      
      
      <categories>
          
          <category> AI </category>
          
          <category> 机器学习 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>初识JavaScript</title>
      <link href="/2025/03/02/2025-3-2-%E5%88%9D%E8%AF%86JavaScript/"/>
      <url>/2025/03/02/2025-3-2-%E5%88%9D%E8%AF%86JavaScript/</url>
      
        <content type="html"><![CDATA[<h1 id="初识JavaScript"><a href="#初识JavaScript" class="headerlink" title="初识JavaScript"></a>初识JavaScript</h1><p><em>一个合格的后端开发者，必须要精通JavaScript</em></p><h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><ul><li><p>JavaScript 是互联网上最流行的脚本语言</p></li><li><p>JavaScript 是一种脚本编程语言，它可以在网页上实现复杂的功能，网页展现给你的不再是简单的静态信息，而是实时的内容更新——交互式的地图、2D&#x2F;3D 动画、滚动播放的视频等等</p></li></ul><h2 id="历史"><a href="#历史" class="headerlink" title="历史"></a>历史</h2><p>相关链接：[JavaScript历史]([JavaScript的诞生与进化 - 知乎](<a href="https://zhuanlan.zhihu.com/p/24352382390#:~:text=JavaScript%EF%BC%8C%E6%9C%80%E5%88%9D%E8%A2%AB%E7%A7%B0%E4%B8%BA">https://zhuanlan.zhihu.com/p/24352382390#:~:text=JavaScript，最初被称为</a> LiveScript，在 1995 年由 Brendan Eich （网景公司）开发并集成进 Netscape,JavaScript。 这个改名与当时 Java 编程语言的流行密切相关，借用了 Java 的影响力来推动 JavaScript 的普及。))</p><p>JavaScript，最初被称为 <strong>LiveScript</strong>，在 1995 年由 <strong><a href="https://zhida.zhihu.com/search?content_id=253892501&content_type=Article&match_order=1&q=Brendan+Eich&zhida_source=entity">Brendan Eich</a></strong>（网景公司）开发并集成进 <strong>Netscape Navigator 2</strong> 浏览器中。最初的目的是提供一种替代 Perl 语言的轻量级客户端脚本，特别用于表单验证。那时，验证一个表单字段的内容通常需要与服务器进行通信，而慢速的拨号上网使得每一次的页面刷新都变得非常痛苦。</p><h4 id="JavaScript和Java"><a href="#JavaScript和Java" class="headerlink" title="JavaScript和Java"></a>JavaScript和Java</h4><p>没有任何关系，可以粗略理解为JavaScript取名蹭热度。</p><h4 id="JavaScript和ECMAScript"><a href="#JavaScript和ECMAScript" class="headerlink" title="JavaScript和ECMAScript"></a>JavaScript和ECMAScript</h4><p>后者是前者的规格，前者是后者的实现。</p><p>ECMAScript 只用来标准化 JavaScript 这种语言的基本语法结构，与部署环境相关的标准都由其他标准规定，比如 DOM 的标准就是由 W3C组织（World Wide Web Consortium）制定的。</p><h2 id="快速入门"><a href="#快速入门" class="headerlink" title="快速入门"></a>快速入门</h2><h3 id="引入JavaScript"><a href="#引入JavaScript" class="headerlink" title="引入JavaScript"></a>引入JavaScript</h3><h4 id="外部引入"><a href="#外部引入" class="headerlink" title="外部引入"></a>外部引入</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;body&gt;</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;test.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line">&lt;/body&gt;</span><br></pre></td></tr></table></figure><h4 id="内部样式"><a href="#内部样式" class="headerlink" title="内部样式"></a>内部样式</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;body&gt;</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="title function_">alert</span>(<span class="string">&quot;hello&quot;</span>);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line">&lt;/body&gt;</span><br></pre></td></tr></table></figure><h4 id="脚本"><a href="#脚本" class="headerlink" title="脚本"></a>脚本</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>My-First-Javascript<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 外部引入 --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- script标签必须成对出现 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;js/helloWorld.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- &lt;script&gt;</span></span><br><span class="line"><span class="comment">        alert(&quot;hello, world&quot;)</span></span><br><span class="line"><span class="comment">    &lt;/script&gt; --&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    </span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">alert</span>(<span class="string">&quot;hello world&quot;</span>)</span><br></pre></td></tr></table></figure><h2 id="浏览器开发者工具"><a href="#浏览器开发者工具" class="headerlink" title="浏览器开发者工具"></a>浏览器开发者工具</h2><p>推荐一篇博客：[F12 - 开发者工具详解](<a href="https://zhuanlan.zhihu.com/p/231865779">F12 - 开发者工具详解 - 知乎</a>)</p><p>按<code>F12</code>或者右键点击检查（审查元素&#x2F;开发者模式）</p><p><img src="/../img/screenshot/devtools.png" alt="devtools"></p><h3 id="元素（Elements）"><a href="#元素（Elements）" class="headerlink" title="元素（Elements）"></a>元素（Elements）</h3><ul><li>查看网页页面的所有元素，修改元素的代码与属性。用于查看修改元素的属性、CSS 属性、监听事件以及断点等等</li></ul><h3 id="控制台（Console）"><a href="#控制台（Console）" class="headerlink" title="控制台（Console）"></a>控制台（Console）</h3><ul><li>查看JS对象及其属性</li><li>执行JS语句</li><li>查看控制台日志</li></ul><h3 id="源代码（Sources）"><a href="#源代码（Sources）" class="headerlink" title="源代码（Sources）"></a>源代码（Sources）</h3><ul><li>查看文件</li><li>断点调试</li></ul><h3 id="网络（Network）"><a href="#网络（Network）" class="headerlink" title="网络（Network）"></a>网络（Network）</h3><h2 id="基本语法"><a href="#基本语法" class="headerlink" title="基本语法"></a>基本语法</h2><h3 id="变量声明和赋值"><a href="#变量声明和赋值" class="headerlink" title="变量声明和赋值"></a>变量声明和赋值</h3><p> 使用<code>var</code>关键字声明一个变量</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> a = <span class="number">123</span>;</span><br></pre></td></tr></table></figure><p>example:</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">&lt;!<span class="variable constant_">DOCTYPE</span> html&gt;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>basic-language<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="comment">// JavaScript严格区分大小写</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="comment">// 1. 定义变量： 变量类型 变量名 = 变量值</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="keyword">var</span> score = <span class="number">98</span>;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="keyword">if</span> (score &gt;= <span class="number">90</span> &amp;&amp; score &lt;= <span class="number">100</span>) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="title function_">alert</span>(<span class="string">&quot;excellent&quot;</span>); </span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (score &gt;= <span class="number">80</span>) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="title function_">alert</span>(<span class="string">&quot;good&quot;</span>);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        &#125; <span class="keyword">else</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="title function_">alert</span>(<span class="string">&quot;not good&quot;</span>);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="comment">// console.log(score)在浏览器的控制台打印变量</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    </span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span></span><br></pre></td></tr></table></figure><h2 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h2><ol><li>数值型（Number）</li><li>字符串型（String）</li><li>布尔型（Boolean）</li><li>undefined型（Undefined）</li><li>null型（Null）</li><li>上5种之外的类型都称为Object</li></ol><h3 id="Number"><a href="#Number" class="headerlink" title="Number"></a>Number</h3><p><strong>JS不区分小数和整数</strong></p><ul><li><code>NaN</code>：not a number</li><li><code>Infinity</code>：正无穷</li><li><code>-Infinity</code>：负无穷</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">123</span> <span class="comment">//整数123</span></span><br><span class="line"><span class="number">123.1</span> <span class="comment">//浮点数123.1</span></span><br><span class="line"><span class="number">1.123e3</span> <span class="comment">//科学计数法</span></span><br><span class="line">-<span class="number">99</span> <span class="comment">//负数</span></span><br><span class="line"><span class="title class_">Nan</span> <span class="comment">//not a number</span></span><br><span class="line"><span class="title class_">Infinity</span> <span class="comment">//正无穷</span></span><br></pre></td></tr></table></figure><h3 id="String"><a href="#String" class="headerlink" title="String"></a>String</h3><p>用单引号或双引号括起来</p><p><code>&#39;abc&#39;</code></p><p><code>&quot;abc&quot;</code></p><h3 id="Boolean"><a href="#Boolean" class="headerlink" title="Boolean"></a>Boolean</h3><p><code>true</code>或<code>false</code></p><h3 id="undefined"><a href="#undefined" class="headerlink" title="undefined"></a>undefined</h3><ul><li>未定义</li><li>undefined 类型只有一个值，即特殊的 undefined</li><li>在使用 var 声明变量但未对其加以初始化时，这个变量的值就是 undefined</li></ul><h3 id="null"><a href="#null" class="headerlink" title="null"></a>null</h3><ul><li>空</li><li>null 类型只有一个值，即特殊的 null</li><li>undefined值实际上是由null值衍生出来的，所以如果比较undefined和null是否相等，会返回true</li></ul><h3 id="对象（Object）"><a href="#对象（Object）" class="headerlink" title="对象（Object）"></a>对象（Object）</h3><h4 id="创建对象"><a href="#创建对象" class="headerlink" title="创建对象"></a>创建对象</h4><p>创建对象有两种方式</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> person = &#123;</span><br><span class="line">    <span class="attr">name</span>: <span class="string">&quot;Xiao Jinghuai&quot;</span>，</span><br><span class="line">    <span class="attr">age</span>: <span class="number">18</span>，</span><br><span class="line">    <span class="attr">tags</span>: [<span class="string">&#x27;js&#x27;</span>, <span class="string">&#x27;python&#x27;</span>, <span class="string">&#x27;cpp&#x27;</span>, <span class="string">&#x27;java&#x27;</span>]</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 每个属性间用逗号隔开，最后一个不需要</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(person);</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> person = <span class="keyword">new</span> <span class="title class_">Object</span>();</span><br><span class="line">person.<span class="property">name</span> = <span class="string">&quot;Xiao Jinghuai&quot;</span>;</span><br><span class="line">person.<span class="property">age</span> = <span class="number">18</span>;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(person);</span><br></pre></td></tr></table></figure><h4 id="访问对象属性"><a href="#访问对象属性" class="headerlink" title="访问对象属性"></a>访问对象属性</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">person.<span class="property">name</span></span><br><span class="line">&gt; <span class="string">&quot;Xiao Jinghuai&quot;</span></span><br><span class="line">person.<span class="property">age</span></span><br><span class="line">&gt; <span class="number">18</span></span><br></pre></td></tr></table></figure><h4 id="数组对象"><a href="#数组对象" class="headerlink" title="数组对象"></a>数组对象</h4><ul><li><p>JS中数组不需要是相同类型的对象（Java中必须类型相同）</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arr = [<span class="number">1</span>, <span class="number">2.0</span>, <span class="string">&#x27;hello&#x27;</span>, <span class="literal">null</span>, <span class="literal">true</span>]; <span class="comment">//尽量用[]定义</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">new</span> <span class="title class_">Array</span>(<span class="number">1</span>, <span class="number">2.0</span>, <span class="string">&#x27;hello&#x27;</span>, <span class="literal">null</span>, <span class="literal">true</span>);</span><br></pre></td></tr></table></figure></li><li><p>去数组下标越界，返回：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="literal">undefined</span></span><br></pre></td></tr></table></figure></li></ul><h2 id="运算符"><a href="#运算符" class="headerlink" title="运算符"></a>运算符</h2><h3 id="逻辑运算符"><a href="#逻辑运算符" class="headerlink" title="逻辑运算符"></a>逻辑运算符</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&amp;&amp; </span><br><span class="line">||</span><br><span class="line">!</span><br></pre></td></tr></table></figure><h3 id="比较运算符"><a href="#比较运算符" class="headerlink" title="比较运算符"></a>比较运算符</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">=     赋值</span><br><span class="line">==    等于（类型不一样，值一样即为<span class="literal">true</span>）</span><br><span class="line">===   绝对等于（类型一样，值一样才为<span class="literal">true</span>）</span><br></pre></td></tr></table></figure><ul><li><code>==</code>是JS的缺陷，不要用<code>==</code>比较</li><li>NaN与所有数值都不相等，包括自己：<code>NaN==NaN -&gt; false</code></li><li>只能通过<code>isNaN(Nan)</code>判断这个数是否是NaN</li></ul><h3 id="浮点数问题"><a href="#浮点数问题" class="headerlink" title="浮点数问题"></a>浮点数问题</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>((<span class="number">1</span>/<span class="number">3</span>)===(<span class="number">1</span>-<span class="number">2</span>/<span class="number">3</span>))</span><br><span class="line">&gt; <span class="literal">false</span></span><br></pre></td></tr></table></figure><p>尽量避免用浮点数进行运算比较，存在<strong>精度问题</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="title class_">Math</span>.<span class="title function_">abs</span>(<span class="number">1</span>/<span class="number">3</span>-(<span class="number">1</span>-<span class="number">2</span>/<span class="number">3</span>)) &lt; <span class="number">0.00000001</span></span><br><span class="line">&gt; <span class="literal">true</span></span><br></pre></td></tr></table></figure><h2 id="严格模式"><a href="#严格模式" class="headerlink" title="严格模式"></a>严格模式</h2><ul><li>消除 Javascript 语法的一些不合理、不严谨之处，减少一些怪异行为</li><li>消除代码运行的一些不安全之处，保证代码运行的安全</li><li>提高编译器效率，增加运行速度</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&quot;use strict&quot;</span> </span><br></pre></td></tr></table></figure><p><strong>脚本</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&lt;!<span class="variable constant_">DOCTYPE</span> html&gt;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>严格模式<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">    <span class="comment">&lt;!-- IDE需要支持ES6语法 --&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="comment">&lt;!-- 必须写在JavaScript第一行 --&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="comment">&lt;!-- 局部变量用let定义 --&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"><span class="meta"></span></span></span></span><br><span class="line"><span class="meta"><span class="language-javascript"><span class="language-xml">        &#x27;use strict&#x27;</span>;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="keyword">let</span> i = <span class="number">1</span>;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    </span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 开发 </category>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数据预处理（深度学习）</title>
      <link href="/2025/03/02/2025-3-2-%E6%95%B0%E6%8D%AE%E9%A2%84%E5%A4%84%E7%90%86%EF%BC%88%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%EF%BC%89/"/>
      <url>/2025/03/02/2025-3-2-%E6%95%B0%E6%8D%AE%E9%A2%84%E5%A4%84%E7%90%86%EF%BC%88%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h1 id="数据预处理（深度学习）"><a href="#数据预处理（深度学习）" class="headerlink" title="数据预处理（深度学习）"></a>数据预处理（深度学习）</h1><h2 id="读取数据集"><a href="#读取数据集" class="headerlink" title="读取数据集"></a>读取数据集</h2><h3 id="创建数据集"><a href="#创建数据集" class="headerlink" title="创建数据集"></a>创建数据集</h3><ul><li><strong>创建一个人工数据集，并存储在CSV（逗号分隔值）文件</strong><code>../data/house_tiny.csv</code>中</li><li><code>..</code> 表示当前文件所在目录的上一级目录</li><li>（因为我现在打开的jupyter notebook在<code>../chapter_prelliminaries</code>目录下，所以他会在<code>../data</code>目录创建一个<code>data</code>数据集）</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line">os.makedirs(os.path.join(<span class="string">&#x27;..&#x27;</span>, <span class="string">&#x27;data&#x27;</span>), exist_ok=<span class="literal">True</span>)</span><br><span class="line">data_file = os.path.join(<span class="string">&#x27;..&#x27;</span>, <span class="string">&#x27;data&#x27;</span>, <span class="string">&#x27;house_tiny.csv&#x27;</span>)</span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(data_file, <span class="string">&#x27;w&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">    f.write(<span class="string">&#x27;NumRooms,Alley,Price\n&#x27;</span>)  <span class="comment"># 列名</span></span><br><span class="line">    f.write(<span class="string">&#x27;NA,Pave,127500\n&#x27;</span>)  <span class="comment"># 每行表示一个数据样本</span></span><br><span class="line">    f.write(<span class="string">&#x27;2,NA,106000\n&#x27;</span>)</span><br><span class="line">    f.write(<span class="string">&#x27;4,NA,178100\n&#x27;</span>)</span><br><span class="line">    f.write(<span class="string">&#x27;NA,NA,140000\n&#x27;</span>)</span><br></pre></td></tr></table></figure><h3 id="加载数据集"><a href="#加载数据集" class="headerlink" title="加载数据集"></a>加载数据集</h3><p><strong>从创建的CSV文件中加载原始数据</strong>，，我们导入<code>pandas</code>包并调用<code>read_csv</code>函数</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">    (tensor([[<span class="number">3.</span>, <span class="number">1.</span>, <span class="number">0.</span>, <span class="number">0.</span>, <span class="number">0.</span>],</span><br><span class="line">             [<span class="number">4.</span>, <span class="number">0.</span>, <span class="number">0.</span>, <span class="number">1.</span>, <span class="number">0.</span>],</span><br><span class="line">             [<span class="number">3.</span>, <span class="number">0.</span>, <span class="number">1.</span>, <span class="number">0.</span>, <span class="number">0.</span>]], dtype=torch.float64),</span><br><span class="line">     tensor([<span class="number">127500</span>, <span class="number">178100</span>, <span class="number">140000</span>]))<span class="comment"># 如果没有安装pandas，只需取消对以下行的注释来安装pandas</span></span><br><span class="line"><span class="comment"># !pip install pandas</span></span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"></span><br><span class="line">data = pd.read_csv(data_file, na_values=<span class="string">&quot;NA&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(data)</span><br></pre></td></tr></table></figure><p>加载读取的<code>data</code>：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">   NumRooms Alley   Price</span><br><span class="line">0       NaN  Pave  127500</span><br><span class="line">1       2.0   NaN  106000</span><br><span class="line">2       4.0   NaN  178100</span><br><span class="line">3       NaN   NaN  140000</span><br></pre></td></tr></table></figure><h2 id="处理缺失值"><a href="#处理缺失值" class="headerlink" title="处理缺失值"></a>处理缺失值</h2><h3 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h3><ol><li><strong>插值法</strong>：用一个替代值弥补缺失值</li><li><strong>删除法</strong>：忽略缺失值</li></ol><h3 id="插值法"><a href="#插值法" class="headerlink" title="插值法"></a>插值法</h3><ul><li><p>通过位置索引<code>iloc</code>，我们将<code>data</code>分成<code>inputs</code>和<code>outputs</code>， 其中前者为<code>data</code>的前两列，而后者为<code>data</code>的最后一列</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">inputs, outputs = data.iloc[:, <span class="number">0</span>:<span class="number">2</span>], data.iloc[:, <span class="number">2</span>]</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">// inputs的值</span><br><span class="line">    NumRooms Alley</span><br><span class="line"><span class="number">0</span>       NaN  Pave</span><br><span class="line"><span class="number">1</span>       <span class="number">2.0</span>   NaN</span><br><span class="line"><span class="number">2</span>       <span class="number">4.0</span>   NaN</span><br><span class="line"><span class="number">3</span>       NaN   NaN</span><br><span class="line"></span><br><span class="line">// inputs的类型</span><br><span class="line">NumRooms    float64</span><br><span class="line">Alley        <span class="built_in">object</span></span><br><span class="line">dtype: <span class="built_in">object</span></span><br><span class="line"></span><br><span class="line">// outputs的值   NumRooms  Alley_Pave  Alley_nan</span><br><span class="line"><span class="number">0</span>       <span class="number">3.0</span>         <span class="number">1.0</span>        <span class="number">0.0</span></span><br><span class="line"><span class="number">1</span>       <span class="number">2.0</span>         <span class="number">0.0</span>        <span class="number">1.0</span></span><br><span class="line"><span class="number">2</span>       <span class="number">4.0</span>         <span class="number">0.0</span>        <span class="number">1.0</span></span><br><span class="line"><span class="number">3</span>       <span class="number">3.0</span>         <span class="number">0.0</span>        <span class="number">1.0</span></span><br><span class="line"><span class="number">0</span>    <span class="number">127500</span></span><br><span class="line"><span class="number">1</span>    <span class="number">106000</span></span><br><span class="line"><span class="number">2</span>    <span class="number">178100</span></span><br><span class="line"><span class="number">3</span>    <span class="number">140000</span></span><br><span class="line">Name: Price, dtype: int64</span><br><span class="line"></span><br><span class="line">// outputs的类型</span><br><span class="line">int64</span><br></pre></td></tr></table></figure></li><li><p>对于<code>inputs</code>中缺少的数值，我们用同一列的均值替换“NaN”项</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">inputs[<span class="string">&#x27;NumRooms&#x27;</span>] = inputs[<span class="string">&#x27;NumRooms&#x27;</span>].fillna(inputs[<span class="string">&#x27;NumRooms&#x27;</span>].mean())</span><br><span class="line"><span class="built_in">print</span>(inputs)</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">   NumRooms Alley</span><br><span class="line">0       3.0  Pave</span><br><span class="line">1       2.0   NaN</span><br><span class="line">2       4.0   NaN</span><br><span class="line">3       3.0   NaN</span><br></pre></td></tr></table></figure></li><li><p>[<strong>对于<code>inputs</code>中的类别值或离散值，我们将“NaN”视为一个类别。</strong>] 由于“巷子类型”（“Alley”）列只接受两种类型的类别值“Pave”和“NaN”， <code>pandas</code>可以自动将此列转换为两列“Alley_Pave”和“Alley_nan”。 类型为“Pave”的行会将“Alley_Pave”的值设置为1，“Alley_nan”的值设置为0。 缺少类型的行会将“Alley_Pave”和“Alley_nan”分别设置为0和1。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">inputs = pd.get_dummies(inputs, dummy_na=<span class="literal">True</span>)</span><br><span class="line"><span class="built_in">print</span>(inputs)</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">   NumRooms  Alley_Pave  Alley_nan</span><br><span class="line">0       3.0        True      False</span><br><span class="line">1       2.0       False       True</span><br><span class="line">2       4.0       False       True</span><br><span class="line">3       3.0       False       True</span><br></pre></td></tr></table></figure></li></ul><h2 id="转换为张量格式"><a href="#转换为张量格式" class="headerlink" title="转换为张量格式"></a>转换为张量格式</h2><ul><li><p><strong>现在<code>inputs</code>和<code>outputs</code>中的所有条目都是数值类型，它们可以转换为张量格式。</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> torch</span><br><span class="line"></span><br><span class="line">X, y = torch.tensor(inputs.values), torch.tensor(outputs.values)</span><br><span class="line">X, y</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">(tensor([[3., 1., 0.],</span><br><span class="line">         [2., 0., 1.],</span><br><span class="line">         [4., 0., 1.],</span><br><span class="line">         [3., 0., 1.]], dtype=torch.float64),</span><br><span class="line"> tensor([127500, 106000, 178100, 140000]))</span><br></pre></td></tr></table></figure></li></ul><p><strong>注意：</strong></p><p>如果这一部报错，有可能是<code>inputs.values</code>无法把布尔值直接当作浮点数处理（大多数机器学习的情况下是可以直接转化的），你需要先把inputs中的布尔值转化为浮点数：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">inputs = inputs.astype(<span class="built_in">float</span>)</span><br><span class="line"><span class="built_in">print</span>(inputs)</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">   NumRooms  Alley_Pave  Alley_nan</span><br><span class="line">0       3.0         1.0        0.0</span><br><span class="line">1       2.0         0.0        1.0</span><br><span class="line">2       4.0         0.0        1.0</span><br><span class="line">3       3.0         0.0        1.0</span><br></pre></td></tr></table></figure><h2 id="其他方法"><a href="#其他方法" class="headerlink" title="其他方法"></a>其他方法</h2><h3 id="删除法"><a href="#删除法" class="headerlink" title="删除法"></a>删除法</h3><h4 id="读取数据集-1"><a href="#读取数据集-1" class="headerlink" title="读取数据集"></a>读取数据集</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line">os.makedirs(os.path.join(<span class="string">&#x27;..&#x27;</span>, <span class="string">&#x27;data&#x27;</span>), exist_ok=<span class="literal">True</span>)</span><br><span class="line">data_file = os.path.join(<span class="string">&#x27;..&#x27;</span>, <span class="string">&#x27;data&#x27;</span>, <span class="string">&#x27;house_tiny2.csv&#x27;</span>)</span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(data_file, <span class="string">&#x27;w&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">    f.write(<span class="string">&#x27;NumRooms,Alley,Price\n&#x27;</span>)  <span class="comment"># 列名</span></span><br><span class="line">    f.write(<span class="string">&#x27;3,Pave,127500\n&#x27;</span>)  <span class="comment"># 每行表示一个数据样本</span></span><br><span class="line">    f.write(<span class="string">&#x27;2,NA,106000\n&#x27;</span>)</span><br><span class="line">    f.write(<span class="string">&#x27;4,wood,178100\n&#x27;</span>)</span><br><span class="line">    f.write(<span class="string">&#x27;3,granite,140000\n&#x27;</span>)</span><br></pre></td></tr></table></figure><p>加载数据集：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"></span><br><span class="line">data = pd.read_csv(data_file)</span><br><span class="line"><span class="built_in">print</span>(data)</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">   NumRooms    Alley   Price</span><br><span class="line">0         3     Pave  127500</span><br><span class="line">1         2      NaN  106000</span><br><span class="line">2         4     wood  178100</span><br><span class="line">3         3  granite  140000</span><br></pre></td></tr></table></figure><h4 id="删除数据"><a href="#删除数据" class="headerlink" title="删除数据"></a>删除数据</h4><ul><li>用 <code>pandas</code> 的 <code>dropna()</code> 方法来删除包含 <code>NA</code> 或缺失值的行</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">data = data.dropna()</span><br><span class="line"><span class="built_in">print</span>(data)</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">//     NumRooms    Alley   Price</span><br><span class="line">    0         3     Pave  127500</span><br><span class="line">    2         4     wood  178100</span><br><span class="line">    3         3  granite  140000</span><br></pre></td></tr></table></figure><h4 id="独热编码"><a href="#独热编码" class="headerlink" title="独热编码"></a>独热编码</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">inputs, outputs = data.iloc[:, <span class="number">0</span>:<span class="number">2</span>], data.iloc[:, <span class="number">2</span>]</span><br><span class="line"><span class="built_in">print</span>(inputs)</span><br><span class="line"><span class="built_in">print</span>(outputs)</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">//     NumRooms    Alley</span><br><span class="line">    0         3     Pave</span><br><span class="line">    2         4     wood</span><br><span class="line">    3         3  granite</span><br><span class="line">    0    127500</span><br><span class="line">    2    178100</span><br><span class="line">    3    140000</span><br><span class="line">    Name: Price, dtype: int64</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">inputs = pd.get_dummies(inputs, dummy_na=<span class="literal">True</span>)</span><br><span class="line"><span class="built_in">print</span>(inputs)</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">//     NumRooms  Alley_Pave  Alley_granite  Alley_wood  Alley_nan</span><br><span class="line">    0         3        True          False       False      False</span><br><span class="line">    2         4       False          False        True      False</span><br><span class="line">    3         3       False           True       False      False</span><br></pre></td></tr></table></figure><h4 id="转换为张量格式-1"><a href="#转换为张量格式-1" class="headerlink" title="转换为张量格式"></a>转换为张量格式</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">inputs = inputs.astype(<span class="built_in">float</span>)</span><br><span class="line"><span class="keyword">import</span> torch</span><br><span class="line">X, y = torch.tensor(inputs.values), torch.tensor(outputs.values)</span><br><span class="line">X, y</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">//  (tensor([[3., 1., 0., 0., 0.],</span><br><span class="line">             [4., 0., 0., 1., 0.],</span><br><span class="line">             [3., 0., 1., 0., 0.]], dtype=torch.float64),</span><br><span class="line">     tensor([127500, 178100, 140000]))</span><br></pre></td></tr></table></figure><h2 id="torch"><a href="#torch" class="headerlink" title="torch"></a>torch</h2><h3 id="torch-arange"><a href="#torch-arange" class="headerlink" title="torch.arange()"></a>torch.arange()</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">torch.arange(start=<span class="number">0</span>, end, step=<span class="number">1</span>, *, out=<span class="literal">None</span>, dtype=<span class="literal">None</span>, layout=torch.strided, device=<span class="literal">None</span>, requires_grad=<span class="literal">False</span>) → Tensor</span><br></pre></td></tr></table></figure><ul><li><code>start</code>：起始值（默认0）</li><li><code>end</code>：结束值</li><li><code>step</code>：相邻点之间的间隙</li><li><code>dtype</code>：返回的tensor所需数据类型</li><li><code>requires_grad</code>：指定返回tensor需不需要梯度（默认False）</li></ul><h2 id="os"><a href="#os" class="headerlink" title="os"></a>os</h2><h3 id="os-makedirs"><a href="#os-makedirs" class="headerlink" title="os.makedirs()"></a>os.makedirs()</h3><ul><li><p><code>os.makedirs()</code> 方法用于递归创建多层目录。</p></li><li><p>如果子目录创建失败或者已经存在，会抛出一个 OSError 的异常</p></li><li><p>如果第一个参数 path 只有一级，即只创建一层目录，则与 <a href="https://www.runoob.com/python3/python3-os-mkdir.html">mkdir()</a> 函数相同。</p></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">os.makedirs(path, mode=<span class="number">511</span>, exist_ok=<span class="literal">False</span>)</span><br></pre></td></tr></table></figure><ul><li><p><code>path</code> ：需要递归创建的目录，可以是相对或者绝对路径（在path上直接写要创建的文件名）</p></li><li><p><code>exist_ok</code>：是否在目录存在时触发异常</p><p><code>False</code>：（默认值），则在目标目录已存在的情况下触发 FileExistsError 异常</p><p><code>True</code>：在目标目录已存在的情况下不会触发 FileExistsError 异常</p></li></ul><h3 id="os-path-join"><a href="#os-path-join" class="headerlink" title="os.path.join()"></a>os.path.join()</h3><p>连接两个或更多的路径名组件</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">os.path.join(path, *paths)</span><br></pre></td></tr></table></figure><ol><li>如果有一个组件是一个绝对路径，则在它之前的所有组件均会被舍弃</li><li>如果各组件名首字母不包含<code>\</code>，则函数会自动加上</li><li>如果最后一个组件为空，则生成的路径以一个<code>\</code>分隔符结尾</li></ol><h3 id="with-open"><a href="#with-open" class="headerlink" title="with open()"></a>with open()</h3><p>用来打开本地文件，他会在使用完毕后，自动关闭文件，相对<code>open()</code>省去了写<code>close()</code>的麻烦</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(file=<span class="string">&quot;file_path&quot;</span>,mode=<span class="string">&quot;r/w/a&quot;</span>,encoding=<span class="string">&quot;utf-8&quot;</span>) <span class="keyword">as</span> f:</span><br><span class="line">    data=f.read/write()</span><br><span class="line">    <span class="built_in">print</span>(data)</span><br></pre></td></tr></table></figure><ul><li>mode：<ol><li><code>r</code>：只读（默认）</li><li><code>w</code>：只写（会清除之前写的内容）</li><li><code>a</code>：追加内容（会在已经写的内容基础上追加新的内容）</li></ol></li><li>encoding：系统默认（不用管）</li></ul><h3 id="write"><a href="#write" class="headerlink" title="write()"></a>write()</h3><p><code>write()</code>方法用于向文件中写入指定字符串</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fileObject.write( [ <span class="built_in">str</span> ])</span><br></pre></td></tr></table></figure><h2 id="CSV"><a href="#CSV" class="headerlink" title="CSV"></a>CSV</h2><p><strong>逗号分隔值</strong>（Comma-Separated Values，CSV），其文件以纯文本形式存储表格数据（数字和文本），文件的每一行都是一个数据记录。每个记录由一个或多个字段组成，用逗号分隔。</p><h2 id="pandas"><a href="#pandas" class="headerlink" title="pandas"></a>pandas</h2><h3 id="iloc"><a href="#iloc" class="headerlink" title="iloc[]"></a>iloc[]</h3><p>基于整数位置的索引，用于按位置选择</p><h3 id="fillna"><a href="#fillna" class="headerlink" title="fillna()"></a>fillna()</h3><p>用指定的方法填充NA&#x2F;NaN值</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">DataFrame.fillna(value=<span class="literal">None</span>, *, method=<span class="literal">None</span>, axis=<span class="literal">None</span>, inplace=<span class="literal">False</span>, limit=<span class="literal">None</span>, downcast=&lt;no_default&gt;)</span><br></pre></td></tr></table></figure><ul><li><code>value</code>：用于填充的空值的值</li></ul><h3 id="get-dummies"><a href="#get-dummies" class="headerlink" title="get_dummies()"></a>get_dummies()</h3><h4 id="one-hot-独热编码"><a href="#one-hot-独热编码" class="headerlink" title="one-hot 独热编码"></a>one-hot 独热编码</h4><p>将离散型特征的每一种特征取值都看成一种状态，若指定离散特征中有N个不相同的取值，那么我们就可以将该特征抽象成N种不同的状态，one-hot编码保证了每一个取值只会使得一种状态处于“激活态”，也就是说这N种状态中只有一个状态位值为1，其他状态位都是0</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pandas.get_dummies(data, prefix=<span class="literal">None</span>, prefix_sep=<span class="string">&#x27;_&#x27;</span>, dummy_na=<span class="literal">False</span>, columns=<span class="literal">None</span>, sparse=<span class="literal">False</span>, drop_first=<span class="literal">False</span>, dtype=<span class="literal">None</span>)</span><br></pre></td></tr></table></figure><ul><li><code>data</code>：输入的数据</li><li><code>dummy_na</code>：增加一列表示空缺值，如果False就忽略空缺值（默认false）</li></ul><h2 id="numpy"><a href="#numpy" class="headerlink" title="numpy"></a>numpy</h2><h3 id="astype"><a href="#astype" class="headerlink" title="astype()"></a>astype()</h3><p>用于执行类型转换操作</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">series.astype(dtype, copy=<span class="literal">True</span>, errors=<span class="string">&#x27;raise&#x27;</span>)</span><br></pre></td></tr></table></figure><ul><li><p><code>dtype</code>：表示要转换的目标数据类型</p></li><li><p><code>copy</code>：</p><ol><li><code>True</code>：（默认）表示创建数据的副本</li><li><code>False</code>：可能会修改原始数据</li></ol></li><li><p><code>errors</code>：</p><ol><li><p><code>raise</code>（默认）在转换过程中遇到错误抛出异常</p></li><li><p><code>ignore</code> 忽略错误</p></li></ol></li></ul>]]></content>
      
      
      <categories>
          
          <category> AI </category>
          
          <category> 机器学习 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>数据操作（深度学习）</title>
      <link href="/2025/03/02/2025-3-2-%E6%95%B0%E6%8D%AE%E6%93%8D%E4%BD%9C%EF%BC%88%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%EF%BC%89/"/>
      <url>/2025/03/02/2025-3-2-%E6%95%B0%E6%8D%AE%E6%93%8D%E4%BD%9C%EF%BC%88%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h1 id="数据操作（深度学习）"><a href="#数据操作（深度学习）" class="headerlink" title="数据操作（深度学习）"></a>数据操作（深度学习）</h1><p>为了能够完成各种数据操作，我们需要某种方法来存储和操作数据。 </p><p>通常，我们需要做两件重要的事：</p><p>（1）获取、存储数据；</p><p>（2）将数据读入计算机后对其进行处理</p><h2 id="张量"><a href="#张量" class="headerlink" title="张量"></a>张量</h2><p>n维数组，也叫<strong>张量（tensor）</strong>。与Numpy的<code>ndarray</code>类似，但深度学习框架又比Numpy的<code>ndarray</code>多一些重要功能：</p><ol><li>GPU支持加速计算，而NumPy仅支持CPU计算</li><li>张量类支持自动微分</li></ol><h3 id="创建张量"><a href="#创建张量" class="headerlink" title="创建张量"></a>创建张量</h3><p>用 <code>arange</code> 创建一个行向量 <code>x</code>：包含以0开始的前12个整数，它们默认创建为整数。也可指定创建类型为浮点数。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">x = torch.arange(<span class="number">12</span>)</span><br></pre></td></tr></table></figure><h3 id="访问张量形状"><a href="#访问张量形状" class="headerlink" title="访问张量形状"></a>访问张量形状</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">x.shape</span><br></pre></td></tr></table></figure><h3 id="张量中元素总数"><a href="#张量中元素总数" class="headerlink" title="张量中元素总数"></a>张量中元素总数</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">x.numel()</span><br></pre></td></tr></table></figure><h3 id="改变张量形状"><a href="#改变张量形状" class="headerlink" title="改变张量形状"></a>改变张量形状</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">X = x.reshape(<span class="number">3</span>, <span class="number">4</span>)</span><br></pre></td></tr></table></figure><p>可以以通过<code>-1</code>来调用此自动计算出维度的功能：</p><p><code>x.reshape(-1, 4)</code>或<code>x.reshape(3, -1)</code>来取代上面的代码</p><h3 id="初始化张量"><a href="#初始化张量" class="headerlink" title="初始化张量"></a>初始化张量</h3><p><strong>使用全0、全1、其他常量，或者从特定分布中随机采样的数字</strong></p><ul><li><p>全0</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">torch.zeros((<span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>))</span><br></pre></td></tr></table></figure></li><li><p>全1</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">torch.ones((<span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>))</span><br></pre></td></tr></table></figure></li><li><p>均值为0、标准差为1的标准高斯分布（正态分布）中随机采样</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">torch.randn(<span class="number">3</span>, <span class="number">4</span>)</span><br></pre></td></tr></table></figure></li></ul><p><strong>包含数值的Python列表（或嵌套列表)，为所需张量中的每个元素赋予确定值</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">torch.tensor([[<span class="number">2</span>, <span class="number">1</span>, <span class="number">4</span>, <span class="number">3</span>], [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>], [<span class="number">4</span>, <span class="number">3</span>, <span class="number">2</span>, <span class="number">1</span>]])</span><br></pre></td></tr></table></figure><h2 id="运算符"><a href="#运算符" class="headerlink" title="运算符"></a>运算符</h2><h3 id="常见标准运算符"><a href="#常见标准运算符" class="headerlink" title="常见标准运算符"></a>常见标准运算符</h3><p><strong><code>+</code>、<code>-</code>、<code>*</code>、<code>/</code>和<code>**</code></strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">x = torch.tensor([<span class="number">1.0</span>, <span class="number">2</span>, <span class="number">4</span>, <span class="number">8</span>])</span><br><span class="line">y = torch.tensor([<span class="number">2</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">2</span>])</span><br><span class="line">x + y, x - y, x * y, x / y, x ** y  <span class="comment"># **运算符是求幂运算</span></span><br></pre></td></tr></table></figure><h3 id="求幂"><a href="#求幂" class="headerlink" title="求幂"></a>求幂</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">torch.exp(x)</span><br></pre></td></tr></table></figure><h3 id="连结多个张量"><a href="#连结多个张量" class="headerlink" title="连结多个张量"></a>连结多个张量</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">X = torch.arange(<span class="number">12</span>, dtype=torch.float32).reshape((<span class="number">3</span>,<span class="number">4</span>))</span><br><span class="line">Y = torch.tensor([[<span class="number">2.0</span>, <span class="number">1</span>, <span class="number">4</span>, <span class="number">3</span>], [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>], [<span class="number">4</span>, <span class="number">3</span>, <span class="number">2</span>, <span class="number">1</span>]])</span><br><span class="line"><span class="built_in">print</span>(X)</span><br><span class="line"><span class="built_in">print</span>(Y)</span><br><span class="line">torch.cat((X, Y), dim=<span class="number">0</span>), torch.cat((X, Y), dim=<span class="number">1</span>)</span><br></pre></td></tr></table></figure><h3 id="用逻辑运算符构建二元张量"><a href="#用逻辑运算符构建二元张量" class="headerlink" title="用逻辑运算符构建二元张量"></a>用逻辑运算符构建二元张量</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(X == Y)</span><br></pre></td></tr></table></figure><h3 id="对所有元素求和"><a href="#对所有元素求和" class="headerlink" title="对所有元素求和"></a>对所有元素求和</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">X.<span class="built_in">sum</span>()</span><br></pre></td></tr></table></figure><h2 id="广播机制"><a href="#广播机制" class="headerlink" title="广播机制"></a>广播机制</h2><p><strong>即使形状不同，我们仍然可以通过调用 广播机制（broadcasting mechanism）来执行按元素操作</strong></p><ol><li>通过适当复制元素来扩展一个或两个数组，以便在转换之后，两个张量具有相同的形状</li><li>对生成的数组执行按元素操作</li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">a = torch.arange(<span class="number">3</span>).reshape((<span class="number">3</span>, <span class="number">1</span>))</span><br><span class="line">b = torch.arange(<span class="number">2</span>).reshape((<span class="number">1</span>, <span class="number">2</span>))</span><br><span class="line">a, b</span><br><span class="line"></span><br><span class="line">a + b</span><br></pre></td></tr></table></figure><h2 id="索引和切片"><a href="#索引和切片" class="headerlink" title="索引和切片"></a>索引和切片</h2><ul><li>与任何Python数组一样：第一个元素的索引是0，最后一个元素索引是-1； 可以指定范围以包含第一个元素和最后一个之前的元素</li><li><strong>左闭右开</strong></li></ul><h3 id="选择最后一个元素"><a href="#选择最后一个元素" class="headerlink" title="选择最后一个元素"></a>选择最后一个元素</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">X[-<span class="number">1</span>]</span><br></pre></td></tr></table></figure><h3 id="选择第二个和第三个元素"><a href="#选择第二个和第三个元素" class="headerlink" title="选择第二个和第三个元素"></a>选择第二个和第三个元素</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">X[<span class="number">1</span>:<span class="number">3</span>]</span><br></pre></td></tr></table></figure><h3 id="通过指定索引来将元素写入矩阵"><a href="#通过指定索引来将元素写入矩阵" class="headerlink" title="通过指定索引来将元素写入矩阵"></a>通过指定索引来将元素写入矩阵</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">X[<span class="number">1</span>, <span class="number">2</span>] = <span class="number">9</span></span><br><span class="line">X</span><br></pre></td></tr></table></figure><h3 id="为多个元素赋值相同的值"><a href="#为多个元素赋值相同的值" class="headerlink" title="为多个元素赋值相同的值"></a>为多个元素赋值相同的值</h3><p><code>[0:2, :]</code>：访问第1行和第2行，其中“:”代表沿轴1（列）的所有元素</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">X[<span class="number">0</span>:<span class="number">2</span>, :] = <span class="number">12</span></span><br><span class="line">X</span><br></pre></td></tr></table></figure><h2 id="节省内存"><a href="#节省内存" class="headerlink" title="节省内存"></a>节省内存</h2><ul><li><strong>运行一些操作可能会导致为新结果分配内存</strong></li><li>Python的<code>id()</code>函数给我们提供了内存中引用对象的确切地址</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(<span class="built_in">id</span>(Y))</span><br><span class="line">before = <span class="built_in">id</span>(Y)</span><br><span class="line">Y = Y + X</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">id</span>(Y))</span><br><span class="line"><span class="built_in">id</span>(Y) == before </span><br><span class="line">// <span class="literal">False</span></span><br></pre></td></tr></table></figure><p>这可能是不可取的，原因有两个：</p><ol><li>首先，我们不想总是不必要地分配内存。在机器学习中，我们可能有数百兆的参数，并且在一秒内多次更新所有参数。通常情况下，我们希望原地执行这些更新；</li><li>如果不原地更新，其他引用仍然会指向旧的内存位置，这样我们的某些代码可能会无意中引用旧的参数。</li></ol><h3 id="执行原地操作"><a href="#执行原地操作" class="headerlink" title="执行原地操作"></a>执行原地操作</h3><h4 id="法一：创建一个新的矩阵Z"><a href="#法一：创建一个新的矩阵Z" class="headerlink" title="法一：创建一个新的矩阵Z"></a>法一：创建一个新的矩阵<code>Z</code></h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Z = torch.zeros_like(Y)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;id(Z):&#x27;</span>, <span class="built_in">id</span>(Z))</span><br><span class="line">Z[:] = X + Y</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;id(Z):&#x27;</span>, <span class="built_in">id</span>(Z))</span><br></pre></td></tr></table></figure><h4 id="法二：自增自减"><a href="#法二：自增自减" class="headerlink" title="法二：自增自减"></a>法二：自增自减</h4><p>如果在后续计算中没有重复使用<code>X</code>， 我们也可以使用<code>X[:] = X + Y</code>或<code>X += Y</code>来减少操作的内存开销</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(<span class="built_in">id</span>(X))</span><br><span class="line">before = <span class="built_in">id</span>(X)</span><br><span class="line">X += Y</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">id</span>(X))</span><br><span class="line"><span class="built_in">id</span>(X) == before</span><br></pre></td></tr></table></figure><h2 id="转换为其他Python对象"><a href="#转换为其他Python对象" class="headerlink" title="转换为其他Python对象"></a>转换为其他Python对象</h2><h3 id="转换为NumPy张量"><a href="#转换为NumPy张量" class="headerlink" title="转换为NumPy张量"></a>转换为NumPy张量</h3><ul><li><p>将深度学习框架定义的张量[<strong>转换为NumPy张量（<code>ndarray</code>）</strong>]很容易，反之也同样容易</p></li><li><p>torch张量和numpy数组将共享它们的底层内存，就地操作更改一个张量也会同时更改另一个张量</p></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy</span><br><span class="line"><span class="built_in">print</span>(numpy.__version__)</span><br><span class="line"><span class="built_in">print</span>(torch.__version__)</span><br><span class="line"></span><br><span class="line">A = X.numpy()</span><br><span class="line">B = torch.tensor(A)</span><br><span class="line"><span class="built_in">type</span>(A), <span class="built_in">type</span>(B)</span><br></pre></td></tr></table></figure><h3 id="转换为Python标量"><a href="#转换为Python标量" class="headerlink" title="转换为Python标量"></a>转换为Python标量</h3><p>可以调用<code>item</code>函数或Python的内置函数</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">a = torch.tensor([<span class="number">3.5</span>])</span><br><span class="line">a, a.item(), <span class="built_in">float</span>(a), <span class="built_in">int</span>(a)</span><br></pre></td></tr></table></figure><h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><p>如果在jupyter notebook中发现numpy无法使用，可能是因为numpy和pytorch版本不兼容：</p><p>关闭jupyter notebook，在虚拟环境中执行以下代码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install numpy==<span class="number">1.26</span><span class="number">.4</span></span><br></pre></td></tr></table></figure><ul><li>更改1.26.4为和你的pytorch兼容的版本</li><li>这条命令会卸载原有的numpy，降低版本安装numpy</li></ul>]]></content>
      
      
      <categories>
          
          <category> AI </category>
          
          <category> 机器学习 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>定位（CSS）</title>
      <link href="/2025/03/01/2025-3-1-%E5%AE%9A%E4%BD%8D%EF%BC%88CSS%EF%BC%89/"/>
      <url>/2025/03/01/2025-3-1-%E5%AE%9A%E4%BD%8D%EF%BC%88CSS%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h1 id="定位"><a href="#定位" class="headerlink" title="定位"></a>定位</h1><p><code>position</code>：</p><ol><li>相对定位：<code>relative</code></li><li>绝对定位：<code>abolute</code></li><li>固定定位：<code>fixed</code></li><li>默认：<code>static</code></li></ol><h2 id="相对定位"><a href="#相对定位" class="headerlink" title="相对定位"></a>相对定位</h2><p><code>position: relative;</code></p><p><code>top:</code></p><p><code>right:</code></p><p><code>bottom:</code></p><p><code>left:</code></p><ul><li>相对原来位置，进行偏移</li><li>仍在标准文档流中，原来的位置保留</li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 相对定位：相对自己原来的位置偏移 */</span></span><br><span class="line"></span><br><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">10px</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">10px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">div</span> &#123;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">10px</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">5px</span>;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">15px</span>;</span><br><span class="line">    <span class="attribute">line-height</span>: <span class="number">25px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#father</span> &#123;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">2px</span> solid black;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#first</span> &#123;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">2px</span> dashed black;</span><br><span class="line">    <span class="attribute">position</span>: relative;</span><br><span class="line">    <span class="attribute">top</span>: -<span class="number">10px</span>;</span><br><span class="line">    <span class="attribute">left</span>: <span class="number">10px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#second</span> &#123;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">2px</span> dashed black;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#third</span> &#123;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">2px</span> dashed black;</span><br><span class="line">    <span class="attribute">position</span>: relative;</span><br><span class="line">    <span class="attribute">bottom</span>: -<span class="number">10px</span>;</span><br><span class="line">    <span class="attribute">right</span>: -<span class="number">10px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>相对定位<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;css/style.css&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;father&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;first&quot;</span>&gt;</span>1st box<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;second&quot;</span>&gt;</span>2nt box<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;third&quot;</span>&gt;</span>3th box<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="绝对定位"><a href="#绝对定位" class="headerlink" title="绝对定位"></a>绝对定位</h2><p><code>position: absolute;</code></p><ul><li>相对最近的存在定位的父级元素偏移</li><li>如果没有，则相对浏览器窗口偏移</li><li>不在标准文档流中，原来位置不会被保留</li></ul><p>example:</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#father</span> &#123;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">2px</span> solid black;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">position</span>: relative;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#second</span> &#123;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">2px</span> dashed black;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">right</span>: <span class="number">30px</span>;</span><br><span class="line">    <span class="attribute">top</span>: <span class="number">30px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="脚本"><a href="#脚本" class="headerlink" title="脚本"></a>脚本</h4><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">10px</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">10px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">div</span> &#123;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">10px</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">5px</span>;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">15px</span>;</span><br><span class="line">    <span class="attribute">line-height</span>: <span class="number">25px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#father</span> &#123;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">2px</span> solid black;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">position</span>: relative;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#first</span> &#123;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">2px</span> dashed black;</span><br><span class="line">    <span class="comment">/* position: relative;</span></span><br><span class="line"><span class="comment">    top: -10px;</span></span><br><span class="line"><span class="comment">    left: 10px; */</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#second</span> &#123;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">2px</span> dashed black;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">right</span>: <span class="number">30px</span>;</span><br><span class="line">    <span class="attribute">top</span>: <span class="number">30px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#third</span> &#123;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">2px</span> dashed black;</span><br><span class="line">    <span class="comment">/* position: relative;</span></span><br><span class="line"><span class="comment">    bottom: -10px;</span></span><br><span class="line"><span class="comment">    right: -10px; */</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>绝对定位<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;css/style.css&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;father&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;first&quot;</span>&gt;</span>1st box<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;second&quot;</span>&gt;</span>2nt box<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;third&quot;</span>&gt;</span>3th box<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="固定定位"><a href="#固定定位" class="headerlink" title="固定定位"></a>固定定位</h2><p><code>position: fixed;</code></p><ul><li>相对浏览器窗口定位</li><li>屏幕滚动时元素不改变位置</li><li>不在标准文档流中，原来位置不会被保留</li></ul><h4 id="脚本-1"><a href="#脚本-1" class="headerlink" title="脚本"></a>脚本</h4><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">5000px</span>;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">2px</span> solid black;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">div</span><span class="selector-pseudo">:nth-of-type</span>(<span class="number">1</span>) &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="built_in">rgb</span>(<span class="number">163</span>, <span class="number">102</span>, <span class="number">216</span>);</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">right</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">bottom</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">div</span><span class="selector-pseudo">:nth-of-type</span>(<span class="number">2</span>) &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">50px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">50px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="built_in">rgb</span>(<span class="number">216</span>, <span class="number">102</span>, <span class="number">102</span>);</span><br><span class="line">    <span class="attribute">position</span>: fixed;</span><br><span class="line">    <span class="attribute">right</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">bottom</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>固定定位<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;css/style.css&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span>div 1<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span>div 2<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    </span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="z-index"><a href="#z-index" class="headerlink" title="z-index"></a>z-index</h2><p>z-index设置元素的堆叠顺序，拥有更高顺序的元素会处于上层</p><h4 id="脚本-2"><a href="#脚本-2" class="headerlink" title="脚本"></a>脚本</h4><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#content</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">500px</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">0px</span>;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0px</span>;</span><br><span class="line">    <span class="attribute">overflow</span>: hidden;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">15px</span>;</span><br><span class="line">    <span class="attribute">line-height</span>: <span class="number">25px</span>;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">2px</span> solid black;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">ul</span> <span class="selector-tag">li</span> &#123;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">0px</span>;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0px</span>;</span><br><span class="line">    <span class="attribute">list-style</span>: none;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#content</span> <span class="selector-tag">ul</span> &#123;</span><br><span class="line">    <span class="attribute">position</span>: relative;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.tipText</span>, <span class="selector-class">.tipBg</span> &#123;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">500px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">25px</span>;</span><br><span class="line">    <span class="attribute">top</span>: <span class="number">510px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.tipText</span> &#123;</span><br><span class="line">    <span class="attribute">z-index</span>: <span class="number">5</span>;</span><br><span class="line">    <span class="attribute">color</span>: white;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.tipBg</span> &#123;</span><br><span class="line">    <span class="attribute">z-index</span>: <span class="number">3</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: black;</span><br><span class="line">    <span class="attribute">opacity</span>: <span class="number">0.5</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>z-index<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;css/style.css&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;content&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;img/wallpaper.jpg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;tipText&quot;</span>&gt;</span>zerd1y-Blog<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;tipBg&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span>time: 2025-3-1<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span>Dalian<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 开发 </category>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CSS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>jupyter notebook</title>
      <link href="/2025/02/28/2025-2-28-jupyter-notebook/"/>
      <url>/2025/02/28/2025-2-28-jupyter-notebook/</url>
      
        <content type="html"><![CDATA[<h1 id="jupyter-notebook"><a href="#jupyter-notebook" class="headerlink" title="jupyter notebook"></a>jupyter notebook</h1><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>Jupyter Notebook 是一个<strong>交互式计算环境</strong>，使用户能够编写笔记本文档，其中包括：- 实时代码 - 交互式小组件 - 绘图 - 叙述性文本 - 方程式 - 图像 - 视频  </p><p>官方文档：<a href="https://jupyter-notebook.readthedocs.io/en/stable/">官方文档</a></p><h2 id="特点"><a href="#特点" class="headerlink" title="特点"></a>特点</h2><ul><li>编程时具有**「语法高亮」**、缩进、tab补全的功能</li><li>可直接通过浏览器运行代码，同时在代码块下方展示运行结果</li><li>以富媒体格式展示计算结果（HTML、MarkDown、LaTex、PNG，SVG）</li></ul><h2 id="启动"><a href="#启动" class="headerlink" title="启动"></a>启动</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">jupyter notebook</span><br></pre></td></tr></table></figure><ul><li>默认情况下， <code>http://127.0.0.1:8888</code></li><li>之后在Jupyter Notebook的所有操作，都请保持终端**「不要关闭」**,否则会断开与本地服务器的连接。</li></ul><h2 id="用户界面"><a href="#用户界面" class="headerlink" title="用户界面"></a>用户界面</h2><p><em><strong>Dashboard：</strong></em></p><p><img src="/../img/screenshot/jupyter_notebook_user_interface.png" alt="user_interface"></p><ul><li>notebook名称（Notebook name）：<strong>单击可重命名</strong></li><li>菜单栏（Menu bar）</li><li>工具栏（Toolbar）</li><li>代码框（Code cell）</li></ul><h2 id="结构"><a href="#结构" class="headerlink" title="结构"></a>结构</h2><ol><li>代码单元格（Code）</li><li>markdown单元格（MarkDown）</li><li>原始单元格（Raw）</li></ol><h4 id="执行"><a href="#执行" class="headerlink" title="执行"></a>执行</h4><p><code>Shift-Enter</code>（或Toolbar上的Run键）</p><h3 id="代码单元格"><a href="#代码单元格" class="headerlink" title="代码单元格"></a>代码单元格</h3><ul><li>可编写代码，语法高亮显示和 Tab 键完成功能。编程语言取决于<em>内核</em>，默认内核 （IPython） 运行 Python 代码。</li><li>输出不仅限于文本，还有许多其他可能的输出形式，包括 <code>matplotlib</code> 图形和 HTML 表格</li><li><code>Shift-Enter</code>：运行代码单元格</li><li><code>Alt-Enter</code> ：运行当前单元格，在下方插入新单元格</li><li><code>Ctrl-Enter</code> 运行当前单元格，进入命令模式</li></ul><h3 id="MarkDown单元格"><a href="#MarkDown单元格" class="headerlink" title="MarkDown单元格"></a>MarkDown单元格</h3><ul><li>MarkDown语法（详见之前博客）</li><li>LaTeX 表示法</li></ul><h3 id="原始单元格"><a href="#原始单元格" class="headerlink" title="原始单元格"></a>原始单元格</h3><p>写入 <em>output</em> 的位置</p><h2 id="基本工作流程"><a href="#基本工作流程" class="headerlink" title="基本工作流程"></a>基本工作流程</h2><h3 id="创建"><a href="#创建" class="headerlink" title="创建"></a>创建</h3><p><img src="/../img/screenshot/jupyter_notebook_create.png" alt="create_notebook"></p><ul><li>单击<code>New</code>，从下拉列表选择一个内核。列出的内核取决于服务器上安装的内容</li><li>正在运行的notebook旁边会显示绿色</li></ul><h3 id="删除"><a href="#删除" class="headerlink" title="删除"></a>删除</h3><p><img src="/../img/screenshot/jupyter_notebook_delete.png" alt="jupyter_notebook_delete"></p><ul><li>要下载、删除、复制或重命名笔记本，选中它旁边的复选框，一组控件将出现在笔记本列表的顶部</li></ul><h3 id="查看正在运行的notebook"><a href="#查看正在运行的notebook" class="headerlink" title="查看正在运行的notebook"></a>查看正在运行的notebook</h3><ul><li>单击“Running选项卡</li></ul><p><img src="/../img/screenshot/jupyter_notebook_check.png" alt="jupyter_notebook_check"></p><h2 id="模式"><a href="#模式" class="headerlink" title="模式"></a>模式</h2><ol><li>编辑模式</li><li>命令模式</li></ol><h3 id="编辑模式"><a href="#编辑模式" class="headerlink" title="编辑模式"></a>编辑模式</h3><ul><li>按 <code>Enter</code> 键（用鼠标单击单元格的编辑器区域），进入编辑模式</li><li>可以在单元格中键入内容（用快捷键）</li></ul><h3 id="命令模式"><a href="#命令模式" class="headerlink" title="命令模式"></a>命令模式</h3><ul><li>按 <code>Esc</code> 键（用鼠标在单元格的编辑器区域<em>外部</em>单击），进入命令模式</li><li>可编辑整个笔记本，但不能在单个单元格中键入内容</li></ul><h3 id="快捷键"><a href="#快捷键" class="headerlink" title="快捷键"></a>快捷键</h3><ul><li><p>中断耗时过长的计算：</p><p><code>Kernel</code>-&gt;<code>Interrupt</code>（Menu bar）或 <code>i,i</code> 快捷键</p></li><li><p>重启整个计算过程：</p><p><code>Kernel</code>-&gt;<code>Restart</code>（Menu bar）或 <code>0,0</code>  快捷键</p></li><li><p>把notebook下载为 <code>.ipynb</code> 文件：</p><p><code>File</code>-&gt;<code>Download as</code>（Menu bar）</p></li></ul><h2 id="搜索"><a href="#搜索" class="headerlink" title="搜索"></a>搜索</h2><p><code>Ctrl+F</code>：高级内置搜索插件，用于在笔记本或其他文档中查找文本</p>]]></content>
      
      
      <categories>
          
          <category> AI </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>浮动（CSS）</title>
      <link href="/2025/02/27/2025-2-27-%E6%B5%AE%E5%8A%A8%EF%BC%88CSS%EF%BC%89/"/>
      <url>/2025/02/27/2025-2-27-%E6%B5%AE%E5%8A%A8%EF%BC%88CSS%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h1 id="浮动"><a href="#浮动" class="headerlink" title="浮动"></a>浮动</h1><p><strong>浮动是CSS中的重难点</strong></p><ul><li><p>比较好的一篇博客：<a href="https://blog.csdn.net/qq_36595013/article/details/81810219?fromshare=blogdetail&sharetype=blogdetail&sharerId=81810219&sharerefer=PC&sharesource=zerd1y&sharefrom=from_link">(图文详细)最通俗易懂的CSS 浮动float属性详解</a></p></li><li><p>可以再结合各个学习网站，博客学习</p></li></ul><h2 id="标准文档流"><a href="#标准文档流" class="headerlink" title="标准文档流"></a>标准文档流</h2><p><strong>文档流</strong>指的是元素排版布局过程中，元素会默认自动从左往右，从上往下的<strong>流式排列方式</strong>。并最终窗体自上而下分成一行行，并在每行中从左至右的顺序排放元素。</p><p><img src="/../img/screenshot/document_stream.png" alt="文档流"></p><h4 id="块级元素"><a href="#块级元素" class="headerlink" title="块级元素"></a>块级元素</h4><ul><li><strong>独占一行</strong>，不能与其他任何元素并列</li><li>能接受宽、高</li><li>如果不设置宽度，那么宽度将默认变为父亲的100%，即和父亲一样宽</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">h1~h6 p div 列表</span><br></pre></td></tr></table></figure><h4 id="行内元素"><a href="#行内元素" class="headerlink" title="行内元素"></a>行内元素</h4><ul><li><strong>与其他元素并排</strong></li><li>不能设置宽、高。默认的宽度就是文字的宽度</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">span a img strong</span><br></pre></td></tr></table></figure><p>行内元素可以被包含在块级元素中，反之则不可以</p><h2 id="display"><a href="#display" class="headerlink" title="display"></a>display</h2><p><code>diplay:</code></p><ul><li><code>none</code>：不显示</li><li><code>block</code>：块元素（此元素前后带有换行符）</li><li><code>inline</code>：行内元素</li><li><code>inline-block</code>：行内块元素</li></ul><h3 id="脚本"><a href="#脚本" class="headerlink" title="脚本"></a>脚本</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#div1</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">    <span class="attribute">border-color</span>: <span class="built_in">rgb</span>(<span class="number">142</span>, <span class="number">116</span>, <span class="number">235</span>);</span><br><span class="line">    <span class="attribute">border-style</span>: solid;</span><br><span class="line">    <span class="attribute">display</span>: inline-block;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.content</span> &#123;</span><br><span class="line">    <span class="comment">/* 不能设置宽高 */</span></span><br><span class="line">    <span class="comment">/* width: 100px;</span></span><br><span class="line"><span class="comment">    height: 50px; */</span></span><br><span class="line">    <span class="attribute">border-color</span>: black;</span><br><span class="line">    <span class="attribute">border-style</span>: solid;</span><br><span class="line">    <span class="attribute">display</span>: inline-block;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#div2</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">    <span class="attribute">border-color</span>: <span class="built_in">rgb</span>(<span class="number">244</span>, <span class="number">121</span>, <span class="number">141</span>);</span><br><span class="line">    <span class="attribute">border-style</span>: solid;</span><br><span class="line">    <span class="attribute">display</span>: inline-block;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#div3</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">    <span class="attribute">border-color</span>: <span class="built_in">rgb</span>(<span class="number">148</span>, <span class="number">243</span>, <span class="number">190</span>);</span><br><span class="line">    <span class="attribute">border-style</span>: solid;</span><br><span class="line">    <span class="attribute">display</span>: block;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>display<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;css/style.css&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;div1&quot;</span>&gt;</span>div1<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;content&quot;</span>&gt;</span>行内元素：text content<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;div2&quot;</span>&gt;</span>div2<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;div3&quot;</span>&gt;</span>div3<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="浮动-1"><a href="#浮动-1" class="headerlink" title="浮动"></a>浮动</h2><p>CSS 浮动（<code>float</code>）是一种将元素从其正常文档流中移出，并使其向左或向右浮动的布局方式。浮动元素的周围内容会环绕其周围，常用于图文混排和简单的多列布局。</p><p><code>float:</code></p><ul><li><code>left</code>：向左浮动，周围内容环绕其右侧</li><li><code>right</code>：向右浮动，周围内容环绕其左侧</li><li><code>inherit</code>：继承父元素的 <code>float</code> 属性值</li></ul><h2 id="清除浮动"><a href="#清除浮动" class="headerlink" title="清除浮动"></a>清除浮动</h2><p><code>clear:</code></p><ul><li><code>left</code>：元素左侧不允许有浮动元素</li><li><code>right</code>：元素右侧不允许有浮动元素</li><li><code>both</code>：元素两侧不允许有浮动元素</li></ul><h2 id="父级边框塌陷问题"><a href="#父级边框塌陷问题" class="headerlink" title="父级边框塌陷问题"></a>父级边框塌陷问题</h2><p>父容器无法包含浮动子元素，导致高度塌陷</p><p>如图：</p><p><img src="/../img/screenshot/border_collapse.png" alt="border_collapse"></p><h3 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h3><ol><li><p>增加父级元素高度</p></li><li><p>增加一个空的div标签，清除浮动</p></li><li><p>overflow</p></li><li><p>父类增加伪类：after</p></li></ol><h4 id="增加父级元素高度"><a href="#增加父级元素高度" class="headerlink" title="增加父级元素高度"></a>增加父级元素高度</h4><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#father</span> &#123;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">2px</span> solid black;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">1000px</span>;  增加父级元素高度</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/../img/screenshot/add_height.png" alt="add_height"></p><h4 id="增加一个空的div标签，清除浮动"><a href="#增加一个空的div标签，清除浮动" class="headerlink" title="增加一个空的div标签，清除浮动"></a>增加一个空的div标签，清除浮动</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;clear&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.clear</span> &#123;</span><br><span class="line">    <span class="attribute">clear</span>: both;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/../img/screenshot/add_empty_element.png" alt="add_empty_element"></p><h4 id="overflow"><a href="#overflow" class="headerlink" title="overflow"></a>overflow</h4><p><code>overflow</code>：</p><ul><li><code>scroll</code>：内容会被修剪，但是浏览器会显示滚动条以便查看其余的内容</li><li><code>hidden</code>：内容会被修剪，并且其余内容不可见</li><li><code>auto</code>：如果内容被修剪，则浏览器会显示滚动条以便查看其余的内容</li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#content</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">150px</span>;</span><br><span class="line">    <span class="attribute">overflow</span>: hidden;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/../img/screenshot/css_overflow.png" alt="overflow"></p><h4 id="父类增加伪类：after"><a href="#父类增加伪类：after" class="headerlink" title="父类增加伪类：after"></a>父类增加伪类：after</h4><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#father</span><span class="selector-pseudo">::after</span> &#123;</span><br><span class="line">    <span class="attribute">content</span>: <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">    <span class="attribute">display</span>: block;</span><br><span class="line">    <span class="attribute">clear</span>: both;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/../img/screenshot/css_after.png" alt="after"></p><h3 id="脚本-1"><a href="#脚本-1" class="headerlink" title="脚本"></a>脚本</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">div</span> &#123;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">10px</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">5px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#father</span> &#123;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">2px</span> solid black;</span><br><span class="line">    <span class="comment">/* height: 1000px; */</span></span><br><span class="line">    <span class="comment">/* overflow: scroll; */</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#father</span><span class="selector-pseudo">:after</span> &#123;</span><br><span class="line">    <span class="attribute">content</span>: <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">    <span class="attribute">display</span>: block;</span><br><span class="line">    <span class="attribute">clear</span>: both;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.layer01</span> &#123;</span><br><span class="line">    <span class="attribute">border</span>:  <span class="number">1px</span> dashed black;</span><br><span class="line">    <span class="comment">/* display: inline-block; */</span></span><br><span class="line">    <span class="attribute">float</span>: left;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.layer02</span> &#123;</span><br><span class="line">    <span class="attribute">border</span>:  <span class="number">1px</span> dashed black;</span><br><span class="line">    <span class="comment">/* display: inline-block; */</span></span><br><span class="line">    <span class="attribute">float</span>: left;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.layer03</span> &#123;</span><br><span class="line">    <span class="attribute">border</span>:  <span class="number">1px</span> dashed black;</span><br><span class="line">    <span class="comment">/* display: inline-block; */</span></span><br><span class="line">    <span class="attribute">float</span>: right;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.layer04</span> &#123;</span><br><span class="line">    <span class="attribute">border</span>:  <span class="number">1px</span> dashed black;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">16px</span>;</span><br><span class="line">    <span class="attribute">line-height</span>: <span class="number">23px</span>;</span><br><span class="line">    <span class="comment">/* display: inline-block; */</span></span><br><span class="line">    <span class="attribute">float</span>: right;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* .clear &#123;</span></span><br><span class="line"><span class="comment">    clear: both;</span></span><br><span class="line"><span class="comment">    margin: 0;</span></span><br><span class="line"><span class="comment">    padding: 0;</span></span><br><span class="line"><span class="comment">&#125; */</span></span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>浮动<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;css/style.css&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;father&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;layer01&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;img/avatar.jpg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;layer02&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;img/LofiSu1.jpg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;layer03&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;img/wallpaper.jpg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;layer04&quot;</span>&gt;</span>hello hello hello world world world<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- &lt;div class=&quot;clear&quot;&gt;&lt;/div&gt; --&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><ol><li><p>增加父级元素高度：（不推荐）</p><p>高度需要多次尝试，不能从本质上解决问题</p></li><li><p>增加一个空的div标签，清除浮动:</p><p>有效，但造成代码冗余</p></li><li><p>overflow：</p><p>在有下拉菜单的场景，下拉菜单会显示不出来，而且很丑。</p></li><li><p>父类增加伪类：after：<strong>（推荐）</strong></p><p>没有任何副作用</p></li></ol>]]></content>
      
      
      <categories>
          
          <category> 开发 </category>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CSS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux配置深度学习环境</title>
      <link href="/2025/02/26/2025-2-26-Linux%E9%85%8D%E7%BD%AE%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E7%8E%AF%E5%A2%83/"/>
      <url>/2025/02/26/2025-2-26-Linux%E9%85%8D%E7%BD%AE%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E7%8E%AF%E5%A2%83/</url>
      
        <content type="html"><![CDATA[<h1 id="Linux配置深度学习环境"><a href="#Linux配置深度学习环境" class="headerlink" title="Linux配置深度学习环境"></a>Linux配置深度学习环境</h1><p>要了我老命，几乎半天时间都消耗在这了呜呜</p><p>推荐教程：</p><ul><li><p><a href="https://blog.csdn.net/Zosea231/article/details/138549683?fromshare=blogdetail&sharetype=blogdetail&sharerId=138549683&sharerefer=PC&sharesource=zerd1y&sharefrom=from_link">在移动硬盘上搭建Ubuntu24.04深度学，习环境（Anaconda + CUDA + Pytorch）</a></p></li><li><p>ChatGPT（绝境下的神中神，我差点淘宝付费找人远程了）</p></li></ul><h2 id="我的配置"><a href="#我的配置" class="headerlink" title="我的配置"></a>我的配置</h2><ul><li>天选5pro，Windows11系统，双系统安装了Ubuntu24.04 LTS</li><li>独立显卡：<strong>NVIDIA GeForce RTX 4060 Max-Q &#x2F; Mobile</strong></li></ul><h2 id="Ubuntu安装"><a href="#Ubuntu安装" class="headerlink" title="Ubuntu安装"></a>Ubuntu安装</h2><p>之前的Blog发布过，就不写啦，可以到我之前的Blog看看</p><h2 id="Miniconda安装"><a href="#Miniconda安装" class="headerlink" title="Miniconda安装"></a>Miniconda安装</h2><p>同上哈哈哈</p><h2 id="显卡驱动安装"><a href="#显卡驱动安装" class="headerlink" title="显卡驱动安装"></a>显卡驱动安装</h2><h3 id="开始前的开始"><a href="#开始前的开始" class="headerlink" title="开始前的开始"></a>开始前的开始</h3><p><strong>重启进入bios，关闭secure boot</strong>：</p><p>把密钥全部删除，关闭安全启动（天选5pro）</p><p><strong>由于我是双系统，这步一定要做！！！网上的博客教程都不会写是因为他们的计算机就是linux，我失败了无数次才发现最开始有个巨坑</strong></p><h3 id="安装准备"><a href="#安装准备" class="headerlink" title="安装准备"></a>安装准备</h3><h4 id="安装所需依赖："><a href="#安装所需依赖：" class="headerlink" title="安装所需依赖："></a>安装所需依赖：</h4><p><code>sudo apt-get update</code></p><p><code>sudo apt-get install g++ gcc make</code></p><h4 id="禁用nouveau："><a href="#禁用nouveau：" class="headerlink" title="禁用nouveau："></a>禁用nouveau：</h4><ol><li><p>打开文件夹：</p><p><code>sudo gedit /etc/modprobe.d/blacklist.conf</code></p><p>gedit用不了的话直接装一个</p></li><li><p>在末尾添加并保存：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">blacklist nouveau</span><br><span class="line">options nouveau modeset=0</span><br></pre></td></tr></table></figure></li><li><p>改完要更新系统镜像文件:</p><p><code>sudo update-initramfs -u</code></p></li><li><p>重启ubuntu：</p><p><code>sudo reboot</code></p></li><li><p>验证禁用nouveau：</p><p><code>lsmod | grep nouveau</code> 如果没有输出就说明禁用了nouveau</p></li></ol><h3 id="正式安装"><a href="#正式安装" class="headerlink" title="正式安装"></a>正式安装</h3><h4 id="查看推荐版本"><a href="#查看推荐版本" class="headerlink" title="查看推荐版本"></a>查看推荐版本</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ubuntu-drivers devices</span><br></pre></td></tr></table></figure><p>找到后面标有<code>recommand</code>的版本，记住这个版本号</p><ul><li>我显示的是<code>driver   : nvidia-driver-560 - third-party non-free recommended</code></li><li>尽量按照推荐版本安装，版本不高不要强求，不兼容下载过来也用不了</li></ul><h4 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> apt install nvidia-driver-560</span><br></pre></td></tr></table></figure><ul><li>记住把上面代码的560改称你自己系统推荐的版本</li><li>过程比较慢，期间我上了节高数课</li></ul><h4 id="重启"><a href="#重启" class="headerlink" title="重启"></a>重启</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> reboot</span><br></pre></td></tr></table></figure><h4 id="验证驱动是否正确安装"><a href="#验证驱动是否正确安装" class="headerlink" title="验证驱动是否正确安装"></a>验证驱动是否正确安装</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nvidia-smi</span><br></pre></td></tr></table></figure><p>这会显示你显卡的相关信息</p><h2 id="安装cuda"><a href="#安装cuda" class="headerlink" title="安装cuda"></a>安装cuda</h2><h3 id="找到和你的显卡驱动匹配的cuda版本"><a href="#找到和你的显卡驱动匹配的cuda版本" class="headerlink" title="找到和你的显卡驱动匹配的cuda版本"></a>找到和你的显卡驱动匹配的cuda版本</h3><ul><li>很重要！！一定要匹配，不然折腾半天到最后会报错！！</li><li>可以搜博客（搜“cuda和显卡驱动版本对应”）也可以看官网：<a href="https://docs.nvidia.com/cuda/cuda-toolkit-release-notes/index.html">版本对应情况</a></li></ul><h3 id="准备安装"><a href="#准备安装" class="headerlink" title="准备安装"></a>准备安装</h3><ul><li><p>到官网找对应版本下载即可：<a href="https://developer.nvidia.com/cuda-toolkit-archive">nvidia_cuda官网下载</a></p></li><li><p>按你的计算机版本走：</p><p><img src="/../img/screenshot/cuda_12.6.png" alt="cuda下载"></p></li><li><p>把下面两行代码依次复制到终端运行，开始安装</p></li></ul><h3 id="安装-1"><a href="#安装-1" class="headerlink" title="安装"></a>安装</h3><p>**安装过程中注意取消勾选Driver选项，以避免重复安装显卡驱动导致安装失败，**取消勾选后的界面如下图所示：</p><p><img src="/../img/screenshot/cuda_download.png" alt="取消勾选Driver项"></p><h3 id="cuda配置"><a href="#cuda配置" class="headerlink" title="cuda配置"></a>cuda配置</h3><p>打开环境变量配置文件：<code>gedit ~/.bashrc</code></p><p>添加以下内容：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> PATH=/usr/local/cuda-12.6/bin:<span class="variable">$PATH</span></span><br><span class="line"><span class="built_in">export</span> LD_LIBRARY_PATH=/usr/local/cuda-12.6/lib64:<span class="variable">$LD_LIBRARY_PATH</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>激活环境变量<code>source ~/.bashrc</code></p><h3 id="检查cuda是否安装正确"><a href="#检查cuda是否安装正确" class="headerlink" title="检查cuda是否安装正确"></a>检查cuda是否安装正确</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nvcc --version</span><br></pre></td></tr></table></figure><p><img src="/../img/screenshot/cuda_terminal.png" alt="检查cuda安装成功"></p><p>出现以上结果即为安装成功</p><h2 id="安装cudnn"><a href="#安装cudnn" class="headerlink" title="安装cudnn"></a>安装cudnn</h2><h3 id="找到和你的cuda匹配的cudnn版本"><a href="#找到和你的cuda匹配的cudnn版本" class="headerlink" title="找到和你的cuda匹配的cudnn版本"></a>找到和你的cuda匹配的cudnn版本</h3><ul><li>是的，cudnn也要和cuda版本对应</li><li>官网可查找：<a href="https://developer.nvidia.com/rdp/cudnn-archive">官网</a></li></ul><h3 id="安装-2"><a href="#安装-2" class="headerlink" title="安装"></a>安装</h3><p>官网找到就可以直接点击进去安装了</p><p><img src="/../img/screenshot/cudnn_download.png" alt="cudn_download"></p><h3 id="提取"><a href="#提取" class="headerlink" title="提取"></a>提取</h3><p>下载完成后，进入下载目录，进行以下操作：</p><ol><li><p>提取cuDNN文件：<code>tar -xf xxx.tar.xz</code></p><p>注意：<strong>xxx.tar.xz改为你的包名，还有等下的cuda版本号</strong></p></li><li><p>依次执行以下指令，将提取后的文件复制到cuda目录下，<strong>cuda版本不一样的注意修改路径</strong>：</p><p><code>sudo cp xxx/include/* /usr/local/cuda-12.6/include</code></p><p><code>sudo cp xxx/lib/libcudnn* /usr/local/cuda-12.6/lib64</code></p><p><strong>（注意改版本号）</strong></p></li></ol><h3 id="提升权限"><a href="#提升权限" class="headerlink" title="提升权限"></a>提升权限</h3><p><code>sudo chmod 777 /usr/local/cuda-12.6/include/cudnn.h</code></p><p><code>sudo chmod 777 /usr/local/cuda-12.6/lib64/libcudnn*</code></p><p><strong>（注意改版本号）</strong></p><h3 id="验证安装"><a href="#验证安装" class="headerlink" title="验证安装"></a>验证安装</h3><p>终端输入以下代码：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cat</span> /usr/local/cuda-12.6/include/cudnn_version.h | grep CUDNN_MAJOR -A 2</span><br></pre></td></tr></table></figure><p><strong>（注意改版本号）</strong></p><p><img src="/../img/screenshot/cudnn_terminal.png" alt="验证cudnn安装"></p><p>出现以上结果即为安装成功</p><h2 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h2><p>到这里安装就大功告成啦，感觉比较累，但很有成就感</p><p>如果你想再验证一下是否安装成功的话：</p><h3 id="nvidia显卡驱动"><a href="#nvidia显卡驱动" class="headerlink" title="nvidia显卡驱动"></a>nvidia显卡驱动</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nvidia-smi</span><br></pre></td></tr></table></figure><p>会显示 GPU 的使用情况</p><h3 id="CUDA和cuDNN"><a href="#CUDA和cuDNN" class="headerlink" title="CUDA和cuDNN"></a>CUDA和cuDNN</h3><p>cuda可用python验证</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">import torch</span><br><span class="line"><span class="built_in">print</span>(torch.cuda.is_available())</span><br><span class="line"><span class="built_in">print</span>(torch.backends.cudnn.enabled)</span><br></pre></td></tr></table></figure><ul><li><p>这个是<strong>已经用conda创造了虚拟环境，并且安装了pytorch的情况下的验证方法</strong></p></li><li><p>返回<code>True</code>，说明 PyTorch 检测到了 GPU</p></li><li><p>返回 <code>True</code> ，说明 cuDNN 被启用</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> AI </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>conda环境</title>
      <link href="/2025/02/26/2025-2-26-conda%E7%8E%AF%E5%A2%83/"/>
      <url>/2025/02/26/2025-2-26-conda%E7%8E%AF%E5%A2%83/</url>
      
        <content type="html"><![CDATA[<h1 id="conda环境"><a href="#conda环境" class="headerlink" title="conda环境"></a>conda环境</h1><p>conda 中的环境是独立的隔离空间，您可以在其中安装特定版本的软件包，包括依赖项、库和 Python 版本。这种隔离有助于避免包版本之间的冲突，并确保您的项目具有所需的确切库和工具。</p><p>入门文档：<a href="https://docs.anaconda.com/working-with-conda/environments/#create-env">入门文档</a></p><p>更多细节：<a href="https://docs.conda.io/projects/conda/en/latest/user-guide/tasks/manage-environments.html">更多细节</a></p><h2 id="为什么要创建新环境"><a href="#为什么要创建新环境" class="headerlink" title="为什么要创建新环境"></a>为什么要创建新环境</h2><ul><li>依赖项隔离</li><li>可重现性</li><li>易于管理</li><li>测试、开发</li></ul><h2 id="为什么我们不应该在基本环境中工作"><a href="#为什么我们不应该在基本环境中工作" class="headerlink" title="为什么我们不应该在基本环境中工作"></a>为什么我们不应该在基本环境中工作</h2><h3 id="base环境"><a href="#base环境" class="headerlink" title="base环境"></a>base环境</h3><p>首次安装和使用 conda 时，您可能会看到对称为 <code>base</code> 或 “base environment” 的引用。此环境是安装 conda 本身的位置，只能用于安装 anaconda、conda 和与 conda 相关的软件包，例如 <code>anaconda-client</code> 或 <code>conda-build</code>。</p><h3 id="新环境"><a href="#新环境" class="headerlink" title="新环境"></a>新环境</h3><p>但是，对于您的项目，Anaconda <em>强烈建议</em>创建新的工作环境。这可以保护您的基本环境不会因复杂的依赖关系冲突而中断，并允许您在其他计算机上轻松管理和重现您的环境。</p><h2 id="使用环境"><a href="#使用环境" class="headerlink" title="使用环境"></a>使用环境</h2><h3 id="创建环境"><a href="#创建环境" class="headerlink" title="创建环境"></a>创建环境</h3><p>打开终端，以下命令创建一个新环境并下载指定的包及其依赖项：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda create --name &lt;ENV_NAME&gt; &lt;PACKAGE&gt;=&lt;VERSION&gt;</span><br></pre></td></tr></table></figure><p>example：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda create --name myenv python=3.11 beautifulsoup4 docutils jinja2=3.1.4 wheel</span><br></pre></td></tr></table></figure><h3 id="激活环境"><a href="#激活环境" class="headerlink" title="激活环境"></a>激活环境</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda activate &lt;ENV_NAME&gt;</span><br></pre></td></tr></table></figure><h3 id="在环境之间切换"><a href="#在环境之间切换" class="headerlink" title="在环境之间切换"></a>在环境之间切换</h3><p>当您准备好在项目之间切换时，只需激活另一个项目的环境即可。激活其他环境将停用您当前的环境。</p><ul><li><p>（可选）通过运行以下命令查看所有环境的列表：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda info --envs</span><br></pre></td></tr></table></figure></li><li><p>切换环境：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda activate &lt;ENV_NAME&gt;</span><br></pre></td></tr></table></figure></li></ul><h2 id="锁定环境"><a href="#锁定环境" class="headerlink" title="锁定环境"></a>锁定环境</h2><p>确保您的项目无限期地保持可重现性的最可靠方法是 “锁定”  其环境。锁定环境会创建一个完全指定的环境，该环境包含项目中使用的所有包及其依赖项，这些包都配置为特定版本。这可确保您的项目将完全按照最初的配置进行复制，因为如果发布了新的包依赖项，则永远不会发生意外的更新或更改。</p><ol><li><p>锁定项目需要在要锁定的环境中安装 <code>conda-project</code> 包。通过运行以下命令安装软件包：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">conda activate &lt;ENV&gt;</span><br><span class="line">conda install conda-project</span><br></pre></td></tr></table></figure></li><li><p>如果您的项目不包含 <code>environment.yml</code> 文件，请运行以下命令创建一个：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda-project init</span><br></pre></td></tr></table></figure></li><li><p>锁定环境：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda-project lock</span><br></pre></td></tr></table></figure></li></ol><p>锁定项目会生成一个 <code>conda-lock.default.yml</code> 文件，您可以导出该文件以与他人<strong>共享</strong>。</p><h2 id="共享环境"><a href="#共享环境" class="headerlink" title="共享环境"></a>共享环境</h2><p>与其他人共享您的环境允许他们使用 conda 在其计算机上<a href="https://docs.anaconda.com/working-with-conda/environments/#create-env">重新创建您的环境</a>。</p><p>要共享环境及其软件包，您必须将环境的配置导出到 <code>.yml</code> 文件中。</p><h3 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h3><ol><li>简单地将 Anaconda 或 Miniconda 文件复制到新目录或其他计算机不会重新创建环境。您必须将环境作为一个整体导出。</li><li>如果当前目录中已有环境配置<code>.yml</code>文件，则在导出过程中将覆盖该文件。</li></ol><h3 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h3><ol><li><p>激活要导出的环境：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda activate &lt;ENV_NAME&gt;</span><br></pre></td></tr></table></figure></li><li><p>导出环境</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda <span class="built_in">env</span> <span class="built_in">export</span> &gt; environment.yml</span><br></pre></td></tr></table></figure></li></ol><h2 id="停用环境"><a href="#停用环境" class="headerlink" title="停用环境"></a>停用环境</h2><p>最佳做法是在完成环境中的工作后停用环境。</p><p>停用环境：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda deactivate</span><br></pre></td></tr></table></figure><h2 id="删除环境"><a href="#删除环境" class="headerlink" title="删除环境"></a>删除环境</h2><p>终端运行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda remove --name &lt;ENV_NAME&gt; --all</span><br></pre></td></tr></table></figure><p>验证是否已经删除环境：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda info --envs</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> AI </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>盒子模型及边框（CSS）</title>
      <link href="/2025/02/26/2025-2-26-%E7%9B%92%E5%AD%90%E6%A8%A1%E5%9E%8B%E5%8F%8A%E8%BE%B9%E6%A1%86%EF%BC%88CSS%EF%BC%89/"/>
      <url>/2025/02/26/2025-2-26-%E7%9B%92%E5%AD%90%E6%A8%A1%E5%9E%8B%E5%8F%8A%E8%BE%B9%E6%A1%86%EF%BC%88CSS%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h1 id="盒子模型及边框"><a href="#盒子模型及边框" class="headerlink" title="盒子模型及边框"></a>盒子模型及边框</h1><p>所有HTML元素可以看作盒子，在CSS中，”box model”这一术语是用来设计和布局时使用。</p><p>CSS盒模型本质上是一个盒子，封装周围的HTML元素，它包括：边距，边框，填充，和实际内容。</p><p>盒模型允许我们在其它元素和周围元素边框之间的空间放置元素。</p><p><img src="/../img/screenshot/box_model.png" alt="盒子模型"></p><ul><li><p><code>margin</code>：外边距-清除边框外的区域，外边距是透明的</p><p>（body总有一个默认的外边距，可设置为0）</p></li><li><p><code>border</code>：边框-围绕在内边距和内容外的边框</p></li><li><p><code>padding</code>：内边距- 清除内容周围的区域，内边距是透明的</p></li><li><p><code>content</code>：内容-盒子的内容，显示文本和图像</p></li></ul><h3 id="元素的宽度和高度"><a href="#元素的宽度和高度" class="headerlink" title="元素的宽度和高度"></a>元素的宽度和高度</h3><p>当你指定一个 CSS 元素的宽度和高度属性时，你<strong>只是设置内容区域的宽度和高度</strong></p><p>完整大小的元素，你还<strong>必须添加内边距，边框和外边距</strong></p><h3 id="最终元素宽度的计算公式"><a href="#最终元素宽度的计算公式" class="headerlink" title="最终元素宽度的计算公式"></a>最终元素宽度的计算公式</h3><blockquote><p>margin+border+padding+content</p></blockquote><ol><li><p>总元素的宽度&#x3D;宽度+左填充+右填充+左边框+右边框+左边距+右边距</p></li><li><p>总元素的宽度&#x3D;宽度+左填充+右填充+左边框+右边框+左边距+右边距</p></li></ol><h2 id="边框"><a href="#边框" class="headerlink" title="边框"></a>边框</h2><ul><li><code>border-width</code>：边框宽度</li><li><code>border-style</code>：边框样式<ol><li><code>none</code>：不显示边框</li><li><code>solid</code>：实线</li><li><code>dashed</code>：短的方形虚线</li></ol></li><li><code>border-color</code>：边框颜色</li></ul><h3 id="单独设置各边"><a href="#单独设置各边" class="headerlink" title="单独设置各边"></a>单独设置各边</h3><p>设置顺序：顺时针（上右下左）</p><p><code>border-top</code></p><p><code>border-right</code></p><p><code>border-bottom</code></p><p><code>border-left</code></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">margin</span>: <span class="number">0</span>; 上下左右为<span class="number">0</span></span><br><span class="line"><span class="attribute">margin</span>: <span class="number">0</span> <span class="number">1px</span>; 上下为<span class="number">0</span>，左右为<span class="number">1px</span></span><br><span class="line"><span class="attribute">margin</span>: <span class="number">0</span> <span class="number">1px</span> <span class="number">2px</span> <span class="number">3px</span>; 上<span class="number">0</span> 右<span class="number">1px</span> 下<span class="number">2px</span> 左<span class="number">3px</span></span><br></pre></td></tr></table></figure><h3 id="居中"><a href="#居中" class="headerlink" title="居中"></a>居中</h3><p><code>margin: 0 aut0;</code></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#box1</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">300px</span>;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="built_in">rgb</span>(<span class="number">157</span>, <span class="number">89</span>, <span class="number">225</span>);</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span> auto;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="圆角边框"><a href="#圆角边框" class="headerlink" title="圆角边框"></a>圆角边框</h3><p><code>border-radius:</code></p><ul><li>顺序：左上，右上，右下，左下</li><li>圆圈：圆角 &#x3D; 半径</li></ul><h3 id="阴影"><a href="#阴影" class="headerlink" title="阴影"></a>阴影</h3><p><code>box-shadow: h-shadow v-shadow blur color</code></p><ul><li>h-shadow：水平阴影</li><li>v-shadow：竖直阴影</li><li>blur：阴影距离</li><li>color：颜色</li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">box-shadow</span>: <span class="built_in">rgba</span>(<span class="number">100</span>, <span class="number">100</span>, <span class="number">111</span>, <span class="number">0.2</span>) <span class="number">0px</span> <span class="number">7px</span> <span class="number">29px</span> <span class="number">0px</span>;</span><br></pre></td></tr></table></figure><h2 id="脚本"><a href="#脚本" class="headerlink" title="脚本"></a>脚本</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">body</span>, <span class="selector-tag">h2</span>, <span class="selector-tag">li</span>, <span class="selector-tag">a</span>, <span class="selector-tag">form</span>&#123;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">text-decoration</span>: none;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">h2</span> &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: antiquewhite;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#box1</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">300px</span>;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="built_in">rgb</span>(<span class="number">157</span>, <span class="number">89</span>, <span class="number">225</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">form</span> &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="built_in">rgb</span>(<span class="number">173</span>, <span class="number">165</span>, <span class="number">234</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">div</span><span class="selector-pseudo">:nth-of-type</span>(<span class="number">1</span>) &gt; <span class="selector-tag">input</span> &#123;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">2px</span> solid <span class="built_in">rgb</span>(<span class="number">111</span>, <span class="number">157</span>, <span class="number">237</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">div</span><span class="selector-pseudo">:nth-of-type</span>(<span class="number">2</span>) &gt; <span class="selector-tag">input</span> &#123;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">2px</span> dashed <span class="built_in">rgb</span>(<span class="number">237</span>, <span class="number">111</span>, <span class="number">111</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">div</span><span class="selector-pseudo">:nth-of-type</span>(<span class="number">3</span>) &gt; <span class="selector-tag">input</span> &#123;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">2px</span> dotted <span class="built_in">rgb</span>(<span class="number">240</span>, <span class="number">136</span>, <span class="number">206</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>登录<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;css/style.css&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    </span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;box1&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h2</span>&gt;</span>会员登录<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;#&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;username&quot;</span>&gt;</span>用户名<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">id</span>=<span class="string">&quot;username&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;password&quot;</span>&gt;</span>密码<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">id</span>=<span class="string">&quot;password&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;email&quot;</span>&gt;</span>邮箱<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">id</span>=<span class="string">&quot;email&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="网页模仿"><a href="#网页模仿" class="headerlink" title="网页模仿"></a>网页模仿</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line">* &#123;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">a</span> &#123;</span><br><span class="line">    <span class="attribute">text-decoration</span>: none;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.nav-header</span> &#123;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">90</span>;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="built_in">rgb</span>(<span class="number">139</span>, <span class="number">208</span>, <span class="number">228</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.head-contain</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">1180px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">90px</span>;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span> auto;</span><br><span class="line">    <span class="attribute">text-align</span>: center;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.top-log</span>, <span class="selector-class">.top-nav</span>, <span class="selector-class">.top-nav</span> &gt; <span class="selector-tag">ul</span> &gt;<span class="selector-tag">li</span>, <span class="selector-class">.top-right</span> &#123;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">90px</span>;</span><br><span class="line">    <span class="attribute">display</span>: inline-block;</span><br><span class="line">    <span class="attribute">vertical-align</span>: top;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.top-nav</span> &#123;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span> <span class="number">48px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.top-nav</span> <span class="selector-tag">li</span> &#123;</span><br><span class="line">    <span class="attribute">line-height</span>: <span class="number">90px</span>;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">80px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.top-nav</span> <span class="selector-tag">li</span> <span class="selector-tag">a</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: blue;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.top-right</span> <span class="selector-tag">a</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: inline-block;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">16px</span>;</span><br><span class="line">    <span class="attribute">text-align</span>: center;</span><br><span class="line">    <span class="attribute">margin-top</span>: <span class="number">25px</span>;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">35px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.top-right</span> <span class="selector-tag">a</span><span class="selector-pseudo">:first-of-type</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">93px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">38px</span>;</span><br><span class="line">    <span class="attribute">line-height</span>: <span class="number">38px</span>;</span><br><span class="line">    <span class="attribute">color</span>: <span class="built_in">rgb</span>(<span class="number">149</span>, <span class="number">89</span>, <span class="number">228</span>);</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="built_in">rgb</span>(<span class="number">240</span>, <span class="number">126</span>, <span class="number">162</span>);</span><br><span class="line">    <span class="attribute">display</span>: inline-block;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.top-right</span> <span class="selector-tag">a</span><span class="selector-pseudo">:first-of-type</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>:<span class="built_in">rgb</span>(<span class="number">118</span>, <span class="number">15</span>, <span class="number">227</span>);</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="built_in">rgb</span>(<span class="number">116</span>, <span class="number">112</span>, <span class="number">239</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.top-right</span> <span class="selector-tag">a</span><span class="selector-pseudo">:last-of-type</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">140px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">40px</span>;</span><br><span class="line">    <span class="attribute">line-height</span>: <span class="number">40px</span>;</span><br><span class="line">    <span class="attribute">font-weight</span>: <span class="number">400</span>;</span><br><span class="line">    <span class="attribute">color</span>: <span class="built_in">rgb</span>(<span class="number">149</span>, <span class="number">89</span>, <span class="number">228</span>);</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="built_in">rgb</span>(<span class="number">240</span>, <span class="number">126</span>, <span class="number">162</span>);</span><br><span class="line">    <span class="attribute">display</span>: inline-block;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.top-right</span> <span class="selector-tag">a</span><span class="selector-pseudo">:last-of-type</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>:<span class="built_in">rgb</span>(<span class="number">118</span>, <span class="number">15</span>, <span class="number">227</span>);</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="built_in">rgb</span>(<span class="number">116</span>, <span class="number">112</span>, <span class="number">239</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>csdiy<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;css/style.css&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;wrap&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">header</span> <span class="attr">class</span>=<span class="string">&quot;nav-header&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;head-contain&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;&quot;</span> <span class="attr">class</span>=<span class="string">&quot;top-logo&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;img/title.png&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;csdiy&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">nav</span> <span class="attr">class</span>=<span class="string">&quot;top-nav&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;&quot;</span>&gt;</span>前言<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;&quot;</span>&gt;</span>必学工具<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;&quot;</span>&gt;</span>数学基础<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;&quot;</span>&gt;</span>编程入门<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;&quot;</span>&gt;</span>软件工程<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;&quot;</span>&gt;</span>人工智能<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;&quot;</span>&gt;</span>后记<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">nav</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;top-right&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;&quot;</span>&gt;</span>登录<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;&quot;</span>&gt;</span>注册<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">header</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="下载网页源码"><a href="#下载网页源码" class="headerlink" title="下载网页源码"></a>下载网页源码</h2><p><strong>用Google插件Save All Resources</strong></p><ol><li>右键“检查”（或者F12）</li><li>在顶部的框中找到ResourcesSaver（Elements，Console，Sources右边下拉框里面）</li><li>点击Save All Resources</li></ol>]]></content>
      
      
      <categories>
          
          <category> 开发 </category>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CSS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>安装Miniconda</title>
      <link href="/2025/02/25/2025-2-25-%E5%AE%89%E8%A3%85Miniconda/"/>
      <url>/2025/02/25/2025-2-25-%E5%AE%89%E8%A3%85Miniconda/</url>
      
        <content type="html"><![CDATA[<h1 id="安装Miniconda"><a href="#安装Miniconda" class="headerlink" title="安装Miniconda"></a>安装Miniconda</h1><h3 id="前置条件"><a href="#前置条件" class="headerlink" title="前置条件"></a>前置条件</h3><p>Linux x86系统：ubuntu24.04 </p><p>所以以下安装过程均是用Linux terminal代码</p><h2 id="下载最新版本的Miniconda"><a href="#下载最新版本的Miniconda" class="headerlink" title="下载最新版本的Miniconda"></a>下载最新版本的Miniconda</h2><p><code>ctrl + alt + T</code>打开Terminal终端，输入以下代码：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh</span><br></pre></td></tr></table></figure><ul><li>你也可以下载其他版本的Miniconda：<a href="https://repo.anaconda.com/miniconda/">下载其他版本</a></li></ul><p>下载完后应该有一个名字为<code>Miniconda3-latest-Linux-x86_64.sh</code>的文件在你的主文件夹里（我是<code>/home/zerd1y</code>）</p><h2 id="（可选）验证安装程序的完整性"><a href="#（可选）验证安装程序的完整性" class="headerlink" title="（可选）验证安装程序的完整性"></a>（可选）验证安装程序的完整性</h2><h3 id="生成SHA-256哈希值"><a href="#生成SHA-256哈希值" class="headerlink" title="生成SHA-256哈希值"></a>生成SHA-256哈希值</h3><p>把终端导航到下载文件的目录，运行以下命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sha256sum</span> &lt;FILE_NAME&gt;</span><br></pre></td></tr></table></figure><p>例如：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sha256sum Miniconda3-latest-Linux-x86_64.sh</span><br></pre></td></tr></table></figure><p>然后会生成SHA-256哈希值</p><h3 id="比较哈希值"><a href="#比较哈希值" class="headerlink" title="比较哈希值"></a>比较哈希值</h3><ul><li>查找安装程序的官方 SHA-256 哈希值：<a href="">官方SHA-256哈希值</a><a href="https://repo.anaconda.com/miniconda/">https://repo.anaconda.com/miniconda/</a></li><li>如果匹配，则程序可以安全使用</li></ul><h2 id="安装Miniconda-1"><a href="#安装Miniconda-1" class="headerlink" title="安装Miniconda"></a>安装Miniconda</h2><ol><li>终端运行以下命令，启动安装：</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bash ~/Miniconda3-latest-Linux-x86_64.sh</span><br></pre></td></tr></table></figure><ol start="2"><li><p>不断往下滚动阅读TOS条款，划到最下方输入<code>Yes</code>，然后继续按<code>ENTER</code>（接受默认位置，此处你可以自己修改安装位置），开始安装</p></li><li><p>初始化选项，默认<code>NO</code>：<code>conda</code>不会修改你的shell脚本，安装后，如果要初始化，则<strong>必须手动进行初始化</strong></p><p>（我比较喜欢这样，这样子不会每次打开终端都被 conda 干扰，有其他 Python 版本要也方便些）</p></li></ol><h3 id="手动初始化"><a href="#手动初始化" class="headerlink" title="手动初始化"></a>手动初始化</h3><p>终端输入以下命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">source</span> &lt;PATH_TO_CONDA&gt;/bin/activate</span><br><span class="line">conda init --all</span><br></pre></td></tr></table></figure><h2 id="安装完成"><a href="#安装完成" class="headerlink" title="安装完成"></a>安装完成</h2><ul><li><p>关闭终端，重新打开，使安装完全生效</p></li><li><p>或者使用以下命令刷新终端：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">source</span> ~/.bashrc</span><br></pre></td></tr></table></figure></li></ul><p>在终端输入：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda --version</span><br></pre></td></tr></table></figure><p>检查conda是否正常工作呀</p><h2 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h2><p>安装到这里就已经圆满结束啦（感觉ubuntu自带的输入法好难用，有机会换一个）</p><p>目前你的conda状态是<strong>已激活</strong>了，但是打开终端不会自动进入conda虚拟环境：</p><ul><li><p>终端可以用<code>conda</code>命令</p></li><li><p>进入conda的base环境需要在终端输入以下命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda activate base</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> AI </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>美化网页元素（CSS）</title>
      <link href="/2025/02/24/2025-2-24-%E7%BE%8E%E5%8C%96%E7%BD%91%E9%A1%B5%E5%85%83%E7%B4%A0%EF%BC%88CSS%EF%BC%89/"/>
      <url>/2025/02/24/2025-2-24-%E7%BE%8E%E5%8C%96%E7%BD%91%E9%A1%B5%E5%85%83%E7%B4%A0%EF%BC%88CSS%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h1 id="美化网页元素"><a href="#美化网页元素" class="headerlink" title="美化网页元素"></a>美化网页元素</h1><p><em>感觉前端在最基本的知识框架学完后，需要大量的搬运、模仿、借鉴、总结，再加上一些艺术设计的感觉，才能搭好一个漂亮的网页   -2025&#x2F;2&#x2F;26</em> </p><p><em>避免造轮子行为，现在网上有很多现成的框架、模板（vue3…）</em></p><h2 id="为什么要美化网页"><a href="#为什么要美化网页" class="headerlink" title="为什么要美化网页"></a>为什么要美化网页</h2><ol><li>有效的传递页面信息</li><li>吸引用户</li><li>凸显页面主题</li><li>提高用户体验</li></ol><h2 id="span标签"><a href="#span标签" class="headerlink" title="span标签"></a>span标签</h2><ul><li><code>&lt;span&gt;</code>标签：重点突出的字，用审判套起来</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>span<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-id">#Java</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">font-size</span>: large;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">font-family</span>: <span class="string">&#x27;Courier New&#x27;</span>, Courier, monospace;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">font-weight</span>: <span class="number">900</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">font-style</span>: italic;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>Welcome to <span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">&quot;Java&quot;</span>&gt;</span>Java<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="字体"><a href="#字体" class="headerlink" title="字体"></a>字体</h2><h3 id="字体系列"><a href="#字体系列" class="headerlink" title="字体系列"></a>字体系列</h3><ul><li><code>font-family</code></li><li><code>font-family</code> 属性应该设置几个字体名称作为一种”后备”机制，如果浏览器不支持第一种字体，他将尝试下一种字体</li></ul><h3 id="字体样式"><a href="#字体样式" class="headerlink" title="字体样式"></a>字体样式</h3><ul><li><code>font-style</code>：<ol><li><code>normal</code>：正常</li><li><code>italic</code>：斜体</li></ol></li></ul><h3 id="字体大小"><a href="#字体大小" class="headerlink" title="字体大小"></a>字体大小</h3><ul><li><code>font-size</code></li><li>大小设置：<ol><li><code>px</code>：像素</li><li><code>em</code>：1em&#x3D;16px</li></ol></li></ul><h3 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h3><ul><li><code>font-weight</code>：字体粗细</li><li><code>color</code>：颜色</li></ul><h3 id="脚本"><a href="#脚本" class="headerlink" title="脚本"></a>脚本</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>字体样式<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">h1</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">font-family</span>:<span class="string">&#x27;Franklin Gothic Medium&#x27;</span>, <span class="string">&#x27;Arial Narrow&#x27;</span>, Arial, sans-serif;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">font-style</span>: italic;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-id">#p1</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">font-family</span>: Verdana, Geneva, Tahoma, sans-serif;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">font-size</span>:large;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">font-weight</span>: bolder;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-id">#p2</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">font-family</span>: <span class="string">&#x27;Gill Sans&#x27;</span>, <span class="string">&#x27;Gill Sans MT&#x27;</span>, Calibri, <span class="string">&#x27;Trebuchet MS&#x27;</span>, sans-serif;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">font-size</span>: medium;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-id">#p3</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">font-family</span>: <span class="string">&#x27;Lucida Sans&#x27;</span>, <span class="string">&#x27;Lucida Sans Regular&#x27;</span>, <span class="string">&#x27;Lucida Grande&#x27;</span>, <span class="string">&#x27;Lucida Sans Unicode&#x27;</span>, Geneva, Verdana, sans-serif;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">font-size</span>: small;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>人物介绍<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">&quot;p1&quot;</span>&gt;</span></span><br><span class="line">        赤井秀一，日本漫画《名侦探柯南》及其衍生作品中的角色。</span><br><span class="line">    <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">&quot;p2&quot;</span>&gt;</span></span><br><span class="line">        是联邦调查局搜查官，赤井务武与赤井玛丽的长子，羽田秀吉与世良真纯的哥哥。有极强的狙击能力、推理能力和情报搜集分析能力，且车技一流。冷峻坚定，不苟言笑，是左撇子，平时常头戴针织帽。</span><br><span class="line">    <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">&quot;p3&quot;</span>&gt;</span></span><br><span class="line">        曾化名“诸星大”卧底黑衣组织，并获得“黑麦威士忌（Rye）”的代号，后因身份暴露脱离组织，被组织称为“银色子弹”。其知晓江户川柯南的真实身份为工藤新一，为了帮助CIA卧底水无怜奈重回组织并取得信任，假装被枪击身亡，之后以冲矢昴的身份继续活动，暂住在工藤宅中，暗中保护灰原哀。</span><br><span class="line">    <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="文本"><a href="#文本" class="headerlink" title="文本"></a>文本</h2><h3 id="颜色"><a href="#颜色" class="headerlink" title="颜色"></a>颜色</h3><ul><li><p>rgb值：如<code>rgb(255，0，0)</code></p></li><li><p>rgba值：如<code>rgba(85,63,224,0.5)</code></p><p>（a值透明度，值在0~1间）</p></li><li><p>名称：如red</p></li><li><p>十六进制值：如#FF0000 （0~F）</p></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">body &#123;color:red;&#125;</span><br><span class="line">h1 &#123;color:#00ff00;&#125;</span><br><span class="line">h2 &#123;color:rgb(255,0,0);&#125;</span><br></pre></td></tr></table></figure><h3 id="对齐方式"><a href="#对齐方式" class="headerlink" title="对齐方式"></a>对齐方式</h3><ul><li><code>text-align</code>：<ol><li><code>centre</code>：居中</li><li><code>right</code>&#x2F;<code>left</code>：向右&#x2F;左对齐</li><li><code>justify</code>：左、右外边距对齐（每行宽度相等）</li></ol></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">h1 &#123;text-align:center;&#125;</span><br><span class="line">p.date &#123;text-align:right;&#125;</span><br><span class="line">p.main &#123;text-align:justify;&#125;</span><br></pre></td></tr></table></figure><h3 id="修饰（划线）"><a href="#修饰（划线）" class="headerlink" title="修饰（划线）"></a>修饰（划线）</h3><ul><li><code>text-decoration</code>：<ol><li><code>none</code>：主要用于删除链接的下划线</li><li><code>overline</code>：上划线</li><li><code>line-through</code>：中划线</li><li><code>underline</code>：下划线（不建议强调指出不是链接的文本，因为这常常混淆用户）</li></ol></li></ul><h3 id="缩进"><a href="#缩进" class="headerlink" title="缩进"></a>缩进</h3><ul><li><code>text-indent</code>:<ol><li><code>px</code></li><li><code>em</code>：常用（2em）</li></ol></li></ul><h3 id="阴影"><a href="#阴影" class="headerlink" title="阴影"></a>阴影</h3><ul><li><code>text-shadow</code>:</li><li>语法：<code>text-shadow: h-shadow v-shadow blur color;</code><ol><li>h-shadow：水平阴影（必选）</li><li>v-shadow：垂直阴影（必选）</li><li>blur：阴影距离（可选）</li><li>color：阴影颜色（可选）</li></ol></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">#price &#123;</span><br><span class="line">            text-shadow: 5px 5px 5px rgb(142, 73, 202);</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><h3 id="其他-1"><a href="#其他-1" class="headerlink" title="其他"></a>其他</h3><ul><li><p><code>height</code>：块高</p></li><li><p><code>line-height</code>：行高</p><p>行高和块高一致，可以让文字上下居中（<code>line-height=height</code>）</p></li><li><p>文本图片水平对齐：<code>vertical-align:middle</code></p></li></ul><h3 id="脚本-1"><a href="#脚本-1" class="headerlink" title="脚本"></a>脚本</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>文本样式<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">h1</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* color: rgb(85, 63, 224); */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">color</span>: <span class="built_in">rgba</span>(<span class="number">85</span>, <span class="number">63</span>, <span class="number">224</span>, <span class="number">0.8</span>)</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-id">#p2</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: aquamarine;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">300px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">line-height</span>: <span class="number">300px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>人物介绍<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">&quot;p1&quot;</span>&gt;</span></span><br><span class="line">        赤井秀一，日本漫画《名侦探柯南》及其衍生作品中的角色。</span><br><span class="line">    <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">&quot;p2&quot;</span>&gt;</span></span><br><span class="line">        是联邦调查局搜查官，赤井务武与赤井玛丽的长子，羽田秀吉与世良真纯的哥哥。有极强的狙击能力、推理能力和情报搜集分析能力，且车技一流。冷峻坚定，不苟言笑，是左撇子，平时常头戴针织帽。</span><br><span class="line">    <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">&quot;p3&quot;</span>&gt;</span></span><br><span class="line">        曾化名“诸星大”卧底黑衣组织，并获得“黑麦威士忌（Rye）”的代号，后因身份暴露脱离组织，被组织称为“银色子弹”。其知晓江户川柯南的真实身份为工藤新一，为了帮助CIA卧底水无怜奈重回组织并取得信任，假装被枪击身亡，之后以冲矢昴的身份继续活动，暂住在工藤宅中，暗中保护灰原哀。</span><br><span class="line">    <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h2><ul><li><code>list-style</code><ol><li><code>none</code>：去掉圆点</li><li><code>circle</code>：空心圆</li><li><code>decimal</code>：数字</li><li><code>square</code>：正方形</li></ol></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>列表<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;css/style.css&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;nav&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h2</span> <span class="attr">class</span>=<span class="string">&quot;title&quot;</span>&gt;</span>csdiy<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>数据结构与算法<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>计算机网络<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>计算机组成原理<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>计算机系统基础<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>操作系统<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>体系结构<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>并行与分布式系统<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>计算机系统安全<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>计算机网络<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>数据库系统<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>编译原理<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>Web开发<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>数据科学<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>人工智能<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>机器学习<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>计算机图形学<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>数学进阶<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>深度学习<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>强化学习<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>自然语言处理<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>计算机视觉<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>数据结构与算法<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>计算机网络<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>计算机组成原理<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>前端<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>后端<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>IOS<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#nav</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">450px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: aquamarine;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.title</span> &#123;</span><br><span class="line">    <span class="attribute">font-size</span>: large;</span><br><span class="line">    <span class="attribute">font-weight</span>: bold;</span><br><span class="line">    <span class="attribute">text-indent</span>: <span class="number">2em</span>;</span><br><span class="line">    <span class="attribute">line-height</span>: <span class="number">35px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: bisque;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">ul</span> &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: beige;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">ul</span> <span class="selector-tag">li</span> &#123;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">30px</span>;</span><br><span class="line">    <span class="attribute">list-style</span>: none;</span><br><span class="line">    <span class="attribute">text-indent</span>: <span class="number">1em</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">a</span> &#123;</span><br><span class="line">    <span class="attribute">text-decoration</span>: none;</span><br><span class="line">    <span class="attribute">font-size</span>: medium;</span><br><span class="line">    <span class="attribute">color</span>: black;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">a</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="built_in">rgb</span>(<span class="number">98</span>, <span class="number">81</span>, <span class="number">226</span>);</span><br><span class="line">    <span class="attribute">text-decoration</span>: underline;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><h3 id="背景颜色"><a href="#背景颜色" class="headerlink" title="背景颜色"></a>背景颜色</h3><ul><li><code>background-color</code></li><li><strong>可以设置渐变色</strong>，详见“渐变”一栏</li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">body</span> &#123;<span class="attribute">background-color</span>:<span class="number">#b0c4de</span>;&#125;</span><br></pre></td></tr></table></figure><h3 id="背景图片"><a href="#背景图片" class="headerlink" title="背景图片"></a>背景图片</h3><ul><li><p><code>background-image</code>：</p><p>默认情况下：背景图像进行平铺重复显示，以覆盖整个元素实体</p></li><li><p><code>background-repeat</code>：</p><ol><li><code>no-repeat</code>：不平铺</li><li><code>repeat-x</code>：水平方向平铺</li><li><code>repeat-y</code>：竖直方向平铺</li></ol></li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">div</span> &#123;</span><br><span class="line">    <span class="attribute">background-image</span>: <span class="built_in">url</span>(<span class="string">../img/LofiSu1.jpg</span>);</span><br><span class="line">    <span class="attribute">background-repeat</span>: no-repeat;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="不透明度"><a href="#不透明度" class="headerlink" title="不透明度"></a>不透明度</h3><p>常与z-index一起使用</p><p><code>opacity:</code> （0.0~1.0）</p><ul><li>完全不透明：<code>opacity: 1;</code></li><li>半透明：<code>opacity: 0.5;</code></li><li>完全透明：<code>opacity: 0;</code></li></ul><h3 id="脚本-2"><a href="#脚本-2" class="headerlink" title="脚本"></a>脚本</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">div</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">1000px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">700px</span>;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="built_in">rgb</span>(<span class="number">101</span>, <span class="number">147</span>, <span class="number">228</span>);</span><br><span class="line">    <span class="attribute">background-image</span>: <span class="built_in">url</span>(<span class="string">../img/LofiSu1.jpg</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.div1</span> &#123;</span><br><span class="line">    <span class="attribute">background-repeat</span>: no-repeat;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.div2</span> &#123;</span><br><span class="line">    <span class="attribute">background-repeat</span>: repeat-x;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.div3</span> &#123;</span><br><span class="line">    <span class="attribute">background-repeat</span>: repeat-y;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>背景<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;css/style.css&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;div1&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;div2&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;div3&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="渐变"><a href="#渐变" class="headerlink" title="渐变"></a>渐变</h2><p>做渐变色建议去网上搜现成的，自己调不太好看</p><p>推荐一个网站：<a href="https://www.grabient.com/">grabient</a> （加载不进去的话，可能用魔法速度会快些）</p><p><img src="/../img/screenshot/grabient.png" alt="grabient"></p><ul><li>example：</li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#4158D0</span>;</span><br><span class="line">    <span class="attribute">background-image</span>: <span class="built_in">linear-gradient</span>(<span class="number">45deg</span>, <span class="number">#4158D0</span> <span class="number">0%</span>, <span class="number">#C850C0</span> <span class="number">46%</span>, <span class="number">#FFCC70</span> <span class="number">100%</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>渐变<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;css/style.css&quot;</span>&gt;</span></span><br><span class="line">    </span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    </span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 开发 </category>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CSS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>初识CSS</title>
      <link href="/2025/02/23/2025-2-23-%E5%88%9D%E8%AF%86CSS/"/>
      <url>/2025/02/23/2025-2-23-%E5%88%9D%E8%AF%86CSS/</url>
      
        <content type="html"><![CDATA[<h1 id="初识CSS"><a href="#初识CSS" class="headerlink" title="初识CSS"></a>初识CSS</h1><h2 id="CSS要点"><a href="#CSS要点" class="headerlink" title="CSS要点"></a>CSS要点</h2><ol><li>CSS是什么</li><li>CSS怎么用（快速入门）</li><li><strong>CSS选择器（重点＋难点）</strong></li><li>美化网页（文字，阴影，超链接，列表，渐变…）</li><li>盒子模型</li><li>浮动</li><li>定位</li><li>网页动画（特效效果）</li></ol><ul><li>学习网站：W3School，菜鸟教程</li></ul><h2 id="什么是CSS"><a href="#什么是CSS" class="headerlink" title="什么是CSS"></a>什么是CSS</h2><p>CSS（Cascading Style Sheets，层叠样式表）</p><p>CSS：表现（美化网页）</p><p>字体，颜色，边距，高度，宽度，背景图片，网页定位，网页浮动…</p><h3 id="网页源码"><a href="#网页源码" class="headerlink" title="网页源码"></a>网页源码</h3><ul><li>右键<code>检查</code>或者是<code>查找审查元素</code></li><li><code>F12</code></li><li>右上角找<code>开发者工具</code></li></ul><p><img src="/../img/screenshot/my_Blog_CSS.png" alt="我博客的网页源码"></p><h3 id="CSS发展史"><a href="#CSS发展史" class="headerlink" title="CSS发展史"></a>CSS发展史</h3><ol><li>CSS1.0</li><li>CSS2.0    DIV（块）＋ CSS，HTML与CSS结构分离的思想</li><li>CSS2.1    浮动，定位</li><li>CSS3.0    圆角，阴影，动画… 浏览器兼容性</li></ol><h2 id="快速入门"><a href="#快速入门" class="headerlink" title="快速入门"></a>快速入门</h2><h3 id="语法："><a href="#语法：" class="headerlink" title="语法："></a>语法：</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">选择器 &#123;</span><br><span class="line">    声明<span class="number">1</span>;</span><br><span class="line">    声明<span class="number">2</span>;</span><br><span class="line">    声明<span class="number">3</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="HTML"><a href="#HTML" class="headerlink" title="HTML"></a>HTML</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">  </span><br><span class="line">  <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;css/style.css&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>I am title<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="CSS"><a href="#CSS" class="headerlink" title="CSS"></a>CSS</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">h1</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: royalblue;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><h3 id="规范"><a href="#规范" class="headerlink" title="规范"></a>规范</h3><ul><li>HTML和CSS分离</li><li>vscode记得安装Live Server插件！！！</li></ul><p><img src="/../img/screenshot/vscode_html_css.png" alt="HTML和CSS分离"></p><h2 id="CSS优势"><a href="#CSS优势" class="headerlink" title="CSS优势"></a>CSS优势</h2><ol><li>内容和表现分离</li><li>网页结构表现统一，可以实现复用</li><li>样式丰富</li><li>利用SEO，易于被搜索引擎收录</li><li>建议使用独立于HTML的CSS文件</li></ol><h2 id="四种CSS导入方式"><a href="#四种CSS导入方式" class="headerlink" title="四种CSS导入方式"></a>四种CSS导入方式</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>导入方式<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 1.内部样式 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">h1</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">color</span>: green;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 2.外部样式-链接式 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;css/style.css&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 3.外部样式-导入式 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="keyword">@import</span> url(css/style.css);</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 4.行内样式：在标签元素中，写一个style属性，编写样式即可 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span> <span class="attr">style</span>=<span class="string">&quot;color: blue;&quot;</span>&gt;</span>My Title<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>原则：<strong>覆盖原则（就近原则）</strong></li></ul><p><strong>拓展</strong>：外部样式的两种写法</p><p><strong>导入式</strong></p><p><code>@import</code>是CSS 2.1特有，现在不推荐使用！</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 外部样式-导入式 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="keyword">@import</span> url(css/style.css);</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>链接式</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 2.外部样式-链接式 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;css/style.css&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 开发 </category>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CSS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>选择器（CSS）</title>
      <link href="/2025/02/23/2025-2-23-%E9%80%89%E6%8B%A9%E5%99%A8%EF%BC%88CSS%EF%BC%89/"/>
      <url>/2025/02/23/2025-2-23-%E9%80%89%E6%8B%A9%E5%99%A8%EF%BC%88CSS%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h1 id="选择器（CSS）"><a href="#选择器（CSS）" class="headerlink" title="选择器（CSS）"></a>选择器（CSS）</h1><blockquote><p>作用：选择页面上某一个或某一类元素</p></blockquote><h2 id="基本选择器"><a href="#基本选择器" class="headerlink" title="基本选择器"></a>基本选择器</h2><ol><li>元素（标签）选择器：选择一类标签 <code>标签 &#123;&#125;</code></li><li>类选择器：选择所有<code>class</code>属性一致的标签，跨标签<code>.类名&#123;&#125;</code></li><li>ID选择器：全局唯一<code>#id名&#123;&#125;</code></li><li>通配选择器：选择所有元素 <code>*</code></li></ol><h3 id="元素选择器（标签选择器）"><a href="#元素选择器（标签选择器）" class="headerlink" title="元素选择器（标签选择器）"></a>元素选择器（标签选择器）</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>标签选择器<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="comment">/* 标签选择器：会选择页面上所有的这个标签的元素 */</span></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">h1</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">color</span>: aqua;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background</span>: beige;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">border-radius</span>: <span class="number">24px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">p</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">font-size</span>: <span class="number">50px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>Xiao Jinghuai<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>zerd1y<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>frontend<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="类选择器"><a href="#类选择器" class="headerlink" title="类选择器"></a>类选择器</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>类选择器<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="comment">/* 类选择器 .class名称 &#123;&#125;</span></span></span><br><span class="line"><span class="comment"><span class="language-css">        好处：可以多个标签归类，是同一个class，可以复用 */</span></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.Xiao</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">color</span>: <span class="built_in">rgba</span>(<span class="number">105</span>, <span class="number">14</span>, <span class="number">70</span>, <span class="number">0.543</span>);</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.Jinghuai</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">color</span>: <span class="built_in">rgb</span>(<span class="number">48</span>, <span class="number">128</span>, <span class="number">112</span>);</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span> <span class="attr">class</span>=<span class="string">&quot;Xiao&quot;</span>&gt;</span>标题1<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span> <span class="attr">class</span>=<span class="string">&quot;Jinghuai&quot;</span>&gt;</span>标题2<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span> <span class="attr">class</span>=<span class="string">&quot;Xiao&quot;</span>&gt;</span>标题3<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;Jinghuai&quot;</span>&gt;</span>zerd1y<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="ID选择器"><a href="#ID选择器" class="headerlink" title="ID选择器"></a>ID选择器</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>id选择器<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="comment">/* id选择器：id必须保证全局唯一</span></span></span><br><span class="line"><span class="comment"><span class="language-css">        #id名称 &#123;&#125; */</span></span></span><br><span class="line"><span class="language-css">        <span class="selector-id">#Xiao</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">color</span>: <span class="built_in">rgb</span>(<span class="number">67</span>, <span class="number">25</span>, <span class="number">121</span>);</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-id">#Jinghuai</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">color</span>: <span class="built_in">rgb</span>(<span class="number">21</span>, <span class="number">75</span>, <span class="number">23</span>);</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.zerd1y</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">color</span>: <span class="built_in">rgb</span>(<span class="number">110</span>, <span class="number">17</span>, <span class="number">87</span>);</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">h1</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">color</span>: <span class="built_in">rgb</span>(<span class="number">11</span>, <span class="number">72</span>, <span class="number">125</span>);</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span> <span class="attr">id</span>=<span class="string">&quot;Xiao&quot;</span>&gt;</span>标题1<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span> <span class="attr">id</span>=<span class="string">&quot;Jinghuai&quot;</span> <span class="attr">class</span>=<span class="string">&quot;zerd1y&quot;</span>&gt;</span>标题2<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span> <span class="attr">class</span>=<span class="string">&quot;zerd1y&quot;</span>&gt;</span>标题3<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>标题4<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>标题5<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>优先级：id &gt; class &gt; 标签</strong></p><h3 id="通配选择器"><a href="#通配选择器" class="headerlink" title="通配选择器"></a>通配选择器</h3><p><code>*</code>：并设置其背景颜色和文字样式</p><h2 id="层次选择器"><a href="#层次选择器" class="headerlink" title="层次选择器"></a>层次选择器</h2><ol><li>后代选择器</li><li>子选择器</li><li>相邻兄弟选择器</li><li>通用选择器</li></ol><h3 id="后代选择器"><a href="#后代选择器" class="headerlink" title="后代选择器"></a>后代选择器</h3><ul><li>选择指定元素内部的所有符合条件的后代元素</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">body p &#123;</span><br><span class="line">  color: blue;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>选择<code>&lt;body&gt;</code>元素内所有<code>&lt;p&gt;</code>元素</p><h3 id="子选择器"><a href="#子选择器" class="headerlink" title="子选择器"></a>子选择器</h3><ul><li>选择指定元素的直接子元素</li><li>注意：<ol><li>对html文件内所有指定元素生效</li><li>子元素：指定元素的直接下一级，不可跳一级或多级，如果没有则不选中</li></ol></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">li &gt; p &#123;</span><br><span class="line">  color: red;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>选择直接位于<code>&lt;li&gt;</code>元素内的子元素</p><h3 id="相邻兄弟选择器"><a href="#相邻兄弟选择器" class="headerlink" title="相邻兄弟选择器"></a>相邻兄弟选择器</h3><ul><li>选择与指定元素在同一层级且紧接在它后面的元素</li><li>注意：<ol><li>同一层级</li><li>紧接在后面的<strong>1个</strong>兄弟元素，如果没有则不选中</li></ol></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">h2 + p &#123;</span><br><span class="line">  color: green;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>选择同一层级、紧跟在<code>&lt;h2&gt;</code>后面的<strong>一个</strong><code>&lt;p&gt;</code>元素</p><h3 id="通用兄弟选择器"><a href="#通用兄弟选择器" class="headerlink" title="通用兄弟选择器"></a>通用兄弟选择器</h3><ul><li><p>选择与指定元素在同一层级的所有后续兄弟元素</p></li><li><p>注意：</p><ol><li>同一层级</li><li>后面的所有兄弟元素，如果没有则补不选中</li></ol></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">h2 ~ p &#123;</span><br><span class="line">  color: black;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>选择同一层级、在<code>&lt;h2&gt;</code>后面的所有兄弟元素</p><h4 id="脚本"><a href="#脚本" class="headerlink" title="脚本"></a>脚本</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>层次选择器<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="comment">/* 标签选择器 */</span></span></span><br><span class="line"><span class="language-css">        <span class="comment">/* p &#123;</span></span></span><br><span class="line"><span class="comment"><span class="language-css">            background-color: aquamarine;</span></span></span><br><span class="line"><span class="comment"><span class="language-css">        &#125; */</span></span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="comment">/* 后代选择器 */</span></span></span><br><span class="line"><span class="language-css">        <span class="comment">/* body p &#123;</span></span></span><br><span class="line"><span class="comment"><span class="language-css">            background-color: aqua;</span></span></span><br><span class="line"><span class="comment"><span class="language-css">        &#125; */</span></span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="comment">/* 子选择器 */</span></span></span><br><span class="line"><span class="language-css">        <span class="comment">/* ol&gt;p &#123;</span></span></span><br><span class="line"><span class="comment"><span class="language-css">            background-color: aquamarine;</span></span></span><br><span class="line"><span class="comment"><span class="language-css">        &#125; */</span></span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="comment">/* 相邻兄弟选择器：只有一个，相邻（向下） */</span></span></span><br><span class="line"><span class="language-css">        <span class="comment">/* .Xiao + p &#123;</span></span></span><br><span class="line"><span class="comment"><span class="language-css">            background-color: aqua;</span></span></span><br><span class="line"><span class="comment"><span class="language-css">        &#125; */</span></span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="comment">/* 通用兄弟选择器：当前选中元素的向下的所有兄弟元素 */</span></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.Xiao</span>~<span class="selector-tag">p</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: aqua;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;Xiao&quot;</span>&gt;</span>p1<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>p2<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>p3<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">p</span>&gt;</span>p4<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">p</span>&gt;</span>p4.1<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">p</span>&gt;</span>p4.2<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">ul</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">p</span>&gt;</span>p5<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">p</span>&gt;</span>p6<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ol</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">p</span>&gt;</span>p7<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">p</span>&gt;</span>p8<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">p</span>&gt;</span>p9<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ol</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="属性选择器（常用）"><a href="#属性选择器（常用）" class="headerlink" title="属性选择器（常用）"></a>属性选择器（常用）</h2><ul><li><code>=</code>：等于</li><li><code>*=</code>：子串（不需要要完整的单词匹配）</li><li><code>^=</code>：以…开头</li><li><code>$=</code>：以…结尾</li><li><code>~=</code>：包含（需要包含一个完整单词，单词之间由空格分隔）</li></ul><h3 id="脚本-1"><a href="#脚本-1" class="headerlink" title="脚本"></a>脚本</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>属性选择器<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.demo</span> <span class="selector-tag">a</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">float</span>: left;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">display</span>: flexbox;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: auto;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: auto;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">border-radius</span>: <span class="number">10px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: beige;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">text-align</span>: center;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">color</span>: <span class="built_in">rgb</span>(<span class="number">56</span>, <span class="number">58</span>, <span class="number">164</span>);</span></span><br><span class="line"><span class="language-css">            <span class="attribute">text-decoration</span>: none;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin-right</span>: <span class="number">5px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">font</span>: bold <span class="number">20px</span>/<span class="number">50px</span> Arial;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="comment">/* 存在id的元素 */</span></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">a</span><span class="selector-attr">[id]</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: <span class="built_in">rgb</span>(<span class="number">123</span>, <span class="number">99</span>, <span class="number">172</span>);</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="comment">/* id=my_profile的元素 */</span></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">a</span><span class="selector-attr">[id=<span class="string">&quot;my_profile&quot;</span>]</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: aquamarine;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="comment">/* class中有study的元素 */</span></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">a</span><span class="selector-attr">[class*=<span class="string">&quot;study&quot;</span>]</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: <span class="built_in">rgb</span>(<span class="number">232</span>, <span class="number">228</span>, <span class="number">130</span>);</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="comment">/* href中以http开头的元素 */</span></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">a</span><span class="selector-attr">[href^=http]</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: <span class="built_in">rgb</span>(<span class="number">247</span>, <span class="number">95</span>, <span class="number">95</span>);</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="comment">/* href中以jpg结尾的元素 */</span></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">a</span><span class="selector-attr">[href$=jpg]</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: <span class="built_in">rgb</span>(<span class="number">234</span>, <span class="number">117</span>, <span class="number">187</span>);</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;demo&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;https://www.zerd1y.com/&quot;</span> <span class="attr">class</span>=<span class="string">&quot;life&quot;</span> <span class="attr">id</span>=<span class="string">&quot;my_blog&quot;</span>&gt;</span>My-Blog<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;https://www.bilibili.com/&quot;</span> <span class="attr">class</span>=<span class="string">&quot;study&quot;</span> <span class="attr">target</span>=<span class="string">&quot;_blank&quot;</span> <span class="attr">title</span>=<span class="string">&quot;bilibili&quot;</span>&gt;</span>bilibili<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;https://csdiy.wiki/&quot;</span> <span class="attr">class</span>=<span class="string">&quot;study&quot;</span> <span class="attr">id</span>=<span class="string">&quot;computer science&quot;</span>&gt;</span>csdiy<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;https://www.csdn.net/&quot;</span> <span class="attr">class</span>=<span class="string">&quot;study&quot;</span> &gt;</span>csdn<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;http://www.luogu.com.cn/&quot;</span>&gt;</span>ACM<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;img/LofiSu1.jpg&quot;</span> <span class="attr">class</span>=<span class="string">&quot;life&quot;</span> <span class="attr">id</span>=<span class="string">&quot;my_profile&quot;</span>&gt;</span>My-Profile<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;img/avatar.jpg&quot;</span> <span class="attr">class</span>=<span class="string">&quot;life&quot;</span>&gt;</span>My-avatar<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="伪类选择器"><a href="#伪类选择器" class="headerlink" title="伪类选择器"></a>伪类选择器</h2><p>伪类：为处于某个状态的已有元素添加对应的样式，这个状态是根据用户行为而动态改变的。</p><p>（<strong>文档树里有些信息无法被充分描述</strong>，所以引入伪类）</p><h3 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h3><ol><li>动态伪类选择器</li><li>结构伪类选择器</li><li>等等…</li></ol><h3 id="动态伪类选择器"><a href="#动态伪类选择器" class="headerlink" title="动态伪类选择器"></a>动态伪类选择器</h3><ul><li><code>:hover</code>鼠标停留在元素上的状态</li><li><code>:active</code>鼠标按住未释放的状态（元素激活的状态）</li><li><code>:link</code>超链接未访问的状态</li><li><code>:visited</code>超链接访问过的状态</li></ul><h4 id="脚本-2"><a href="#脚本-2" class="headerlink" title="脚本"></a>脚本</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>超链接伪类<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">a</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">text-decoration</span>: none;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">color</span>: black;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">a</span><span class="selector-pseudo">:hover</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">color</span>: <span class="built_in">rgb</span>(<span class="number">179</span>, <span class="number">99</span>, <span class="number">235</span>);</span></span><br><span class="line"><span class="language-css">            <span class="attribute">font-size</span>: large;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">a</span><span class="selector-pseudo">:active</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">color</span>: <span class="built_in">rgb</span>(<span class="number">230</span>, <span class="number">68</span>, <span class="number">105</span>);</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="comment">/* a:visited &#123;</span></span></span><br><span class="line"><span class="comment"><span class="language-css">            color: rgb(61, 143, 214);</span></span></span><br><span class="line"><span class="comment"><span class="language-css">        &#125; */</span></span></span><br><span class="line"><span class="language-css">        <span class="selector-id">#price</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">text-shadow</span>: <span class="number">5px</span> <span class="number">5px</span> <span class="number">5px</span> <span class="built_in">rgb</span>(<span class="number">142</span>, <span class="number">73</span>, <span class="number">202</span>);</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;https://book.douban.com/subject/30333948/&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;img/coding.jpg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;《码出高效》&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;https://book.douban.com/subject/30333948/&quot;</span>&gt;</span>《码出高效：Java开发手册》<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;https://book.douban.com/subject/30333948/&quot;</span>&gt;</span>作者：孤尽<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">&quot;price&quot;</span>&gt;</span></span><br><span class="line">        ￥99.0</span><br><span class="line">    <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="结构伪类选择器"><a href="#结构伪类选择器" class="headerlink" title="结构伪类选择器"></a>结构伪类选择器</h3><ul><li><code>:first-child</code> 选择父元素的第一个子元素</li><li><code>:last-child</code>选择父元素的最后一个子元素</li><li><code>:nth-child(n)</code>选择父元素的第n个子元素</li><li><code>:nth-of-type(n)</code>选择父元素下相同类型元素的第n个子元素</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>结构伪类选择器<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 避免使用.class id选择器 --&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="comment">/* ul的第一个子元素 */</span></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">ul</span> <span class="selector-tag">li</span><span class="selector-pseudo">:first-child</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: aqua;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="comment">/* ul的最后一个子元素 */</span></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">ul</span> <span class="selector-tag">li</span><span class="selector-pseudo">:last-child</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: aquamarine;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="comment">/* 选中p1：定位到父元素，选择这个元素的子元素的第1个，如果不是&lt;p&gt;元素则不生效 */</span></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">p</span><span class="selector-pseudo">:nth-child</span>(<span class="number">2</span>) &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: blueviolet;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="comment">/* 定位到父元素，选择这个元素的子元素的第4个 */</span></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">p</span><span class="selector-pseudo">:nth-of-type</span>(<span class="number">4</span>) &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: blue;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">a</span><span class="selector-pseudo">:hover</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: <span class="built_in">rgb</span>(<span class="number">79</span>, <span class="number">81</span>, <span class="number">182</span>);</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">     </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;https://www.zerd1y.com/&quot;</span>&gt;</span>点击我<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>p1<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>p2<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>p3<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>li1<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>li2<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>li3<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">p</span>&gt;</span>p4<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">p</span>&gt;</span>p5<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>p6<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id=""><a href="#" class="headerlink" title=""></a></h2>]]></content>
      
      
      <categories>
          
          <category> 开发 </category>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CSS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>页面布局（HTML）</title>
      <link href="/2025/02/22/2025-2-22-%E9%A1%B5%E9%9D%A2%E5%B8%83%E5%B1%80%EF%BC%88HTML%EF%BC%89/"/>
      <url>/2025/02/22/2025-2-22-%E9%A1%B5%E9%9D%A2%E5%B8%83%E5%B1%80%EF%BC%88HTML%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h1 id="HTML页面布局"><a href="#HTML页面布局" class="headerlink" title="HTML页面布局"></a>HTML页面布局</h1><h2 id="页面结构"><a href="#页面结构" class="headerlink" title="页面结构"></a>页面结构</h2><ul><li><code>header</code>：标题头部区域的内容</li><li><code>nav</code>：导航类辅助内容</li><li><code>footer</code>：标记脚步区域的内容</li><li><code>section</code>：web页面中的一块独立区域</li><li><code>article</code>：独立的文章内容</li><li><code>aside</code>：相关内容或应用（侧边栏）</li></ul><h2 id="iframe内联框架"><a href="#iframe内联框架" class="headerlink" title="iframe内联框架"></a>iframe内联框架</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">iframe</span> <span class="attr">src</span>=<span class="string">&quot;URL&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">iframe</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li><code>src</code>：地址</li><li><code>width,height</code>：宽度，高度</li><li><code>frameborder=&quot;0&quot;</code>：移除边框</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">iframe</span> <span class="attr">src</span>=<span class="string">&quot;https://www.zerd1y.com/&quot;</span> <span class="attr">frameborder</span>=<span class="string">&quot;0&quot;</span> <span class="attr">width</span>=<span class="string">&quot;1000px&quot;</span> <span class="attr">height</span>=<span class="string">&quot;800px&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">iframe</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="显示目标链接页面"><a href="#显示目标链接页面" class="headerlink" title="显示目标链接页面"></a>显示目标链接页面</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">iframe</span> <span class="attr">src</span>=<span class="string">&quot;&quot;</span> <span class="attr">name</span>=<span class="string">&quot;hello&quot;</span> <span class="attr">frameborder</span>=<span class="string">&quot;0&quot;</span> <span class="attr">width</span>=<span class="string">&quot;1000px&quot;</span> <span class="attr">height</span>=<span class="string">&quot;800px&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">iframe</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;https://www.bilibili.com/&quot;</span> <span class="attr">target</span>=<span class="string">&quot;hello&quot;</span>&gt;</span>点击跳转<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 开发 </category>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HTML </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>表单（HTML）</title>
      <link href="/2025/02/22/2025-2-22-%E8%A1%A8%E5%8D%95%EF%BC%88HTML%EF%BC%89/"/>
      <url>/2025/02/22/2025-2-22-%E8%A1%A8%E5%8D%95%EF%BC%88HTML%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h1 id="表单（HTML）"><a href="#表单（HTML）" class="headerlink" title="表单（HTML）"></a>表单（HTML）</h1><ul><li><p>HTML 表单用于收集用户的输入信息。</p></li><li><p>HTML 表单表示文档中的一个区域，此区域包含交互控件，将用户收集到的信息发送到 Web 服务器。</p></li><li><p>HTML 表单通常包含各种输入字段、复选框、单选按钮、下拉列表等元素。</p></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">method</span>=<span class="string">&quot;post&quot;</span> <span class="attr">action</span>=<span class="string">&quot;result.html&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li><p><code>&lt;form&gt;</code> 元素用于创建表单，<code>action</code> 属性定义了表单数据提交的目标 URL，<code>method</code> 属性定义了提交数据的 HTTP 方法（这里使用的是 “post”）。</p></li><li><p><code>&lt;input&gt;</code> 元素是最常用的表单元素之一，它可以创建文本输入框、密码框、单选按钮、复选框等。<code>type</code> 属性定义了输入框的类型，<code>id</code> 属性用于关联 <code>&lt;label&gt;</code> 元素，<code>name</code> 属性用于标识表单字段。</p></li><li><p><code>&lt;label&gt;</code> 元素用于为表单元素添加标签，提高可访问性。</p></li><li><p><code>&lt;select&gt;</code> 元素用于创建下拉列表，而 <code>&lt;option&gt;</code> 元素用于定义下拉列表中的选项。</p></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;My-first-web.html&quot;</span> <span class="attr">method</span>=<span class="string">&quot;post&quot;</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!--文本输入框--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;name&quot;</span>&gt;</span>用户名：<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">id</span>=<span class="string">&quot;name&quot;</span> <span class="attr">name</span>=<span class="string">&quot;name&quot;</span> <span class="attr">required</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">  <span class="comment">&lt;!--密码输入框--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;password&quot;</span>&gt;</span>密码：<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;password&quot;</span> <span class="attr">id</span>=<span class="string">&quot;password&quot;</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span> <span class="attr">required</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;reset&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  </span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="表单元素格式"><a href="#表单元素格式" class="headerlink" title="表单元素格式"></a>表单元素格式</h2><ul><li><code>type</code>：指定元素的类型。text、password、checkbox、radio、submit、reset、file、hidden、image、和button，默认为text</li><li><code>name</code>：指定表单元素的名称</li><li><code>value</code>：元素的初始值。type为radio时必须指定一个值</li><li><code>size</code>：文本框长度。当type为text或password时，表单元素大小以字符为单位。对于其他类型，宽度以像素为单位</li><li><code>maxlength</code>：type为text或password时，输入的最大字符数</li><li><code>checkd</code>：type为radio或checkbox时，指定按钮是否是被选中</li></ul><h2 id="单选框"><a href="#单选框" class="headerlink" title="单选框"></a>单选框</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">label</span>&gt;</span>性别：<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">id</span>=<span class="string">&quot;male&quot;</span> <span class="attr">name</span>=<span class="string">&quot;gender&quot;</span> <span class="attr">value</span>=<span class="string">&quot;male&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;male&quot;</span>&gt;</span>男<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">id</span>=<span class="string">&quot;female&quot;</span> <span class="attr">name</span>=<span class="string">&quot;gender&quot;</span> <span class="attr">value</span>=<span class="string">&quot;female&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;female&quot;</span>&gt;</span>女<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li><code>label</code>与<code>id</code>配对</li><li><code>id</code>：<ul><li>为页面提供标识符</li><li>与<code>&lt;label&gt;</code>关联</li></ul></li><li><code>name</code>：<ul><li>为表单数据键名，输入的内容为对应的值（例如<code>name=Xiao Jinghuai</code>）</li><li>一组单选按钮中，多个元素可以共享一个<code>name</code>，表示它们属于同一组</li></ul></li></ul><h2 id="多选框"><a href="#多选框" class="headerlink" title="多选框"></a>多选框</h2><p><code>&lt;input type=&quot;checkbox&quot;&gt;</code>定义了复选框</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">label</span>&gt;</span>爱好：<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">name</span>=<span class="string">&quot;hobby&quot;</span> <span class="attr">value</span>=<span class="string">&quot;code&quot;</span> <span class="attr">id</span>=<span class="string">&quot;code&quot;</span> <span class="attr">checked</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;code&quot;</span>&gt;</span>写代码<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">name</span>=<span class="string">&quot;hobby&quot;</span> <span class="attr">value</span>=<span class="string">&quot;game&quot;</span> <span class="attr">id</span>=<span class="string">&quot;game&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;game&quot;</span>&gt;</span>玩游戏<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">name</span>=<span class="string">&quot;hobby&quot;</span> <span class="attr">value</span>=<span class="string">&quot;sleep&quot;</span> <span class="attr">id</span>=<span class="string">&quot;sleep&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;sleep&quot;</span>&gt;</span>睡觉<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">name</span>=<span class="string">&quot;hobby&quot;</span> <span class="attr">value</span>=<span class="string">&quot;run&quot;</span> <span class="attr">id</span>=<span class="string">&quot;run&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;run&quot;</span>&gt;</span>跑步<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li><code>name</code>：表示组</li><li><code>value</code>：多选框的值</li><li><code>checked</code>：默认选中</li></ul><h2 id="按钮"><a href="#按钮" class="headerlink" title="按钮"></a>按钮</h2><h3 id="普通按钮"><a href="#普通按钮" class="headerlink" title="普通按钮"></a>普通按钮</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">name</span>=<span class="string">&quot;button1&quot;</span> <span class="attr">value</span>=<span class="string">&quot;click_me&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>点击不会跳转</li><li>需要CSS处理</li></ul><h3 id="图片按钮"><a href="#图片按钮" class="headerlink" title="图片按钮"></a>图片按钮</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">src</span>=<span class="string">&quot;image_path&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>点击自动跳转到<code>action</code></li></ul><h3 id="提交按钮"><a href="#提交按钮" class="headerlink" title="提交按钮"></a>提交按钮</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="重置按钮"><a href="#重置按钮" class="headerlink" title="重置按钮"></a>重置按钮</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;reset&quot;</span> <span class="attr">value</span>=<span class="string">&quot;清空表单&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li><code>value</code>上的值会显示在按钮上</li></ul><h2 id="下拉框（列表框）"><a href="#下拉框（列表框）" class="headerlink" title="下拉框（列表框）"></a>下拉框（列表框）</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;country&quot;</span>&gt;</span>国家：<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">select</span> <span class="attr">name</span>=<span class="string">&quot;country&quot;</span> <span class="attr">id</span>=<span class="string">&quot;country&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;China&quot;</span>&gt;</span>中国<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;US&quot;</span> <span class="attr">selected</span>&gt;</span>美国<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;Hong Kong&quot;</span>&gt;</span>香港<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;Singapore&quot;</span>&gt;</span>新加坡<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li><code>selected</code>：默认选中</li></ul><h2 id="文本域"><a href="#文本域" class="headerlink" title="文本域"></a>文本域</h2><p><code>textarea</code></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;feedback&quot;</span>&gt;</span>反馈：<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">textarea</span> <span class="attr">name</span>=<span class="string">&quot;feedback&quot;</span> <span class="attr">id</span>=<span class="string">&quot;feedback&quot;</span> <span class="attr">cols</span>=<span class="string">&quot;30&quot;</span> <span class="attr">rows</span>=<span class="string">&quot;10&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">textarea</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="文件域"><a href="#文件域" class="headerlink" title="文件域"></a>文件域</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;file&quot;</span>&gt;</span>上传文件：<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;file&quot;</span> <span class="attr">name</span>=<span class="string">&quot;file&quot;</span> <span class="attr">id</span>=<span class="string">&quot;file&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">value</span>=<span class="string">&quot;上传&quot;</span> <span class="attr">name</span>=<span class="string">&quot;upload&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><h3 id="邮件验证"><a href="#邮件验证" class="headerlink" title="邮件验证"></a>邮件验证</h3><p><code>email</code></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;email&quot;</span>&gt;</span>邮件：<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;email&quot;</span> <span class="attr">name</span>=<span class="string">&quot;email&quot;</span> <span class="attr">id</span>=<span class="string">&quot;email&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="URL"><a href="#URL" class="headerlink" title="URL"></a>URL</h3><p><code>url</code></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;url&quot;</span>&gt;</span>URL：<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;url&quot;</span> <span class="attr">name</span>=<span class="string">&quot;url&quot;</span> <span class="attr">id</span>=<span class="string">&quot;url&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="数字"><a href="#数字" class="headerlink" title="数字"></a>数字</h3><p><code>number</code></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;number&quot;</span>&gt;</span>商品数量：<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;number&quot;</span> <span class="attr">name</span>=<span class="string">&quot;number&quot;</span> <span class="attr">id</span>=<span class="string">&quot;number&quot;</span> <span class="attr">max</span>=<span class="string">&quot;100&quot;</span> <span class="attr">min</span>=<span class="string">&quot;0&quot;</span> <span class="attr">step</span>=<span class="string">&quot;1&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="滑块"><a href="#滑块" class="headerlink" title="滑块"></a>滑块</h3><p><code>range</code></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;voice&quot;</span>&gt;</span>音量大小：<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;range&quot;</span> <span class="attr">name</span>=<span class="string">&quot;voice&quot;</span> <span class="attr">id</span>=<span class="string">&quot;voice&quot;</span> <span class="attr">max</span>=<span class="string">&quot;100&quot;</span> <span class="attr">min</span>=<span class="string">&quot;0&quot;</span> <span class="attr">step</span>=<span class="string">&quot;2&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="搜索框"><a href="#搜索框" class="headerlink" title="搜索框"></a>搜索框</h3><p><code>search</code></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;search&quot;</span>&gt;</span>搜索：<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;search&quot;</span> <span class="attr">name</span>=<span class="string">&quot;search&quot;</span> <span class="attr">id</span>=<span class="string">&quot;search&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="表单的应用"><a href="#表单的应用" class="headerlink" title="表单的应用"></a>表单的应用</h2><ul><li><p>只读：<code>readonly</code></p></li><li><p>禁用：<code>disabled</code></p></li><li><p>隐藏域：<code>hidden</code></p></li></ul><h2 id="增强鼠标可用性"><a href="#增强鼠标可用性" class="headerlink" title="增强鼠标可用性"></a>增强鼠标可用性</h2><ul><li><code>for</code>指向<code>id</code></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;mark&quot;</span>&gt;</span>你点我试试<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">id</span>=<span class="string">&quot;mark&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="表单初级验证"><a href="#表单初级验证" class="headerlink" title="表单初级验证"></a>表单初级验证</h2><ul><li><p>提示信息：<code>placeholder</code></p></li><li><p>非空判断：<code>required</code></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;name&quot;</span>&gt;</span>用户名：<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">id</span>=<span class="string">&quot;name&quot;</span> <span class="attr">name</span>=<span class="string">&quot;name&quot;</span> <span class="attr">required</span> <span class="attr">placeholder</span>=<span class="string">&quot;请输入用户名&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>正则表达式：<code>pattern</code>（搜“常用正则表达式”，复制粘贴）</p><p><a href="https://zyc88.blog.csdn.net/article/details/98479629?fromshare=blogdetail&sharetype=blogdetail&sharerId=98479629&sharerefer=PC&sharesource=zerd1y&sharefrom=from_link">常用正则表达式</a></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;email&quot;</span>&gt;</span>邮件：<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;email&quot;</span> <span class="attr">name</span>=<span class="string">&quot;email&quot;</span> <span class="attr">id</span>=<span class="string">&quot;email&quot;</span> <span class="attr">pattern</span>=<span class="string">&quot;/^[a-zA-Z0-9_-]+@[a-zA-Z0-9_-]+(\.[a-zA-Z0-9_-]+)+$/&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> 开发 </category>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HTML </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>网页基本信息</title>
      <link href="/2025/02/21/2025-2-21-%E7%BD%91%E9%A1%B5%E5%9F%BA%E6%9C%AC%E4%BF%A1%E6%81%AF/"/>
      <url>/2025/02/21/2025-2-21-%E7%BD%91%E9%A1%B5%E5%9F%BA%E6%9C%AC%E4%BF%A1%E6%81%AF/</url>
      
        <content type="html"><![CDATA[<h1 id="网页基本信息"><a href="#网页基本信息" class="headerlink" title="网页基本信息"></a>网页基本信息</h1><h2 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>菜鸟教程(runoob.com)<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"> </span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>我的第一个标题<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"> </span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>我的第一个段落。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"> </span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="实例解析"><a href="#实例解析" class="headerlink" title="实例解析"></a>实例解析</h2><p><img src="/../img/screenshot/html_basic_structure.jpg" alt="实例解析"></p><ul><li><code>&lt;!DOCTYPE html&gt;</code>声明为 HTML5 文档</li><li><code>&lt;html&gt;</code>元素是 HTML 页面的根元素</li><li><code>&lt;head&gt;</code>元素包含了文档的元（meta）数据，如 <code>&lt;meta charset=&quot;UTF-8&quot;&gt;</code>定义网页编码格式为 <strong>utf-8</strong>。</li><li><code>&lt;title&gt;</code>元素描述了文档的标题</li><li><code>&lt;body&gt;</code>元素包含了可见的页面内容</li><li><code>&lt;h1&gt;</code>元素定义一个大标题</li><li><code>&lt;p&gt;</code>元素定义一个段落</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- DOCTYPE：告诉浏览器我们用什么规范--&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- head标签代表网页头部--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- meta描述性标签，用来描述我们网站的一些信息--&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- meta一般来做SEO--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;keywords&quot;</span> <span class="attr">content</span>=<span class="string">&quot;hahahah&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;description&quot;</span> <span class="attr">content</span>=<span class="string">&quot;come on&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- title网页标题--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- body标签代表网页主体--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line">hello world!</span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 开发 </category>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HTML </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>网页标签</title>
      <link href="/2025/02/21/2025-2-21-%E7%BD%91%E9%A1%B5%E6%A0%87%E7%AD%BE/"/>
      <url>/2025/02/21/2025-2-21-%E7%BD%91%E9%A1%B5%E6%A0%87%E7%AD%BE/</url>
      
        <content type="html"><![CDATA[<h1 id="网页标签"><a href="#网页标签" class="headerlink" title="网页标签"></a>网页标签</h1><h2 id="标题标签"><a href="#标题标签" class="headerlink" title="标题标签"></a>标题标签</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>一级标题<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>二级标题<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h3</span>&gt;</span>三级标题<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h4</span>&gt;</span>四级标题<span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h5</span>&gt;</span>五级标题<span class="tag">&lt;/<span class="name">h5</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h6</span>&gt;</span>六级标题<span class="tag">&lt;/<span class="name">h6</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="段落标签"><a href="#段落标签" class="headerlink" title="段落标签"></a>段落标签</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span> <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure><p>example：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--标题标签--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>一级标题<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>二级标题<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h3</span>&gt;</span>三级标题<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h4</span>&gt;</span>四级标题<span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h5</span>&gt;</span>五级标题<span class="tag">&lt;/<span class="name">h5</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h6</span>&gt;</span>六级标题<span class="tag">&lt;/<span class="name">h6</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--段落标签--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>This love is tainted<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>I need you and I hate it<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>You&#x27;re caught between a dream and a movie scene<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>In a way, you know what I mean<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>When the darts just miss, I just can&#x27;t resist it<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--换行标签--&gt;</span></span><br><span class="line">This love is tainted<span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">I need you and I hate it<span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">You&#x27;re caught between a dream and a movie scene<span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">In a way, you know what I mean<span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">When the darts just miss, I just can&#x27;t resist it<span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="换行标签"><a href="#换行标签" class="headerlink" title="换行标签"></a>换行标签</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br></pre></td></tr></table></figure><h2 id="分割线"><a href="#分割线" class="headerlink" title="分割线"></a>分割线</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">hr</span>/&gt;</span></span><br></pre></td></tr></table></figure><h2 id="注释"><a href="#注释" class="headerlink" title="注释"></a>注释</h2><ul><li>快捷键：<code>ctrl+/</code></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!----&gt;</span></span><br></pre></td></tr></table></figure><h2 id="字体"><a href="#字体" class="headerlink" title="字体"></a>字体</h2><ul><li><p>粗体</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">strong</span>&gt;</span> <span class="tag">&lt;/<span class="name">strong</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>斜体</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">em</span>&gt;</span> <span class="tag">&lt;/<span class="name">em</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><h2 id="特殊符号"><a href="#特殊符号" class="headerlink" title="特殊符号"></a>特殊符号</h2><ul><li><p>空格</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&amp;nbsp</span><br></pre></td></tr></table></figure></li><li><p>大于号 小于号</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&amp;gt</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&amp;lt</span><br></pre></td></tr></table></figure></li></ul><h2 id="图像标签"><a href="#图像标签" class="headerlink" title="图像标签"></a>图像标签</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;url&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;some_txt(img_name)&quot;</span> <span class="attr">title</span>=<span class="string">&quot;img_name&quot;</span> <span class="attr">width</span>=<span class="string">&quot;...&quot;</span> <span class="attr">height</span>=<span class="string">&quot;...&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="链接标签"><a href="#链接标签" class="headerlink" title="链接标签"></a>链接标签</h2><h3 id="基本语法"><a href="#基本语法" class="headerlink" title="基本语法"></a>基本语法</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;URL&quot;</span>&gt;</span>链接文本<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><p>example:</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;1.My-first-web.html&quot;</span> <span class="attr">target</span>=<span class="string">&quot;_blank&quot;</span>&gt;</span>点击我跳转到页面一<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;https://www.bilibili.com/&quot;</span> <span class="attr">target</span>=<span class="string">&quot;_self&quot;</span>&gt;</span>点击我跳转到bilibili<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="图片链接"><a href="#图片链接" class="headerlink" title="图片链接"></a>图片链接</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;https://www.bilibili.com/&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;../resources/img/LofiSu1.jpg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;profile&quot;</span> <span class="attr">title</span>=<span class="string">&quot;my_profile&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="锚链接"><a href="#锚链接" class="headerlink" title="锚链接"></a>锚链接</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">id</span>=<span class="string">&quot;top&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p...</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#top&quot;</span>&gt;</span>回到顶部<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="功能性链接"><a href="#功能性链接" class="headerlink" title="功能性链接"></a>功能性链接</h3><h4 id="邮箱链接"><a href="#邮箱链接" class="headerlink" title="邮箱链接"></a>邮箱链接</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;mailto:1431359947@qq.com&quot;</span>&gt;</span>点击联系我<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="块元素和行元素"><a href="#块元素和行元素" class="headerlink" title="块元素和行元素"></a>块元素和行元素</h2><h3 id="块元素"><a href="#块元素" class="headerlink" title="块元素"></a>块元素</h3><ul><li>特性：默认情况下，块级元素会在新行开始，并且其后的内容也会从新的一行开始。</li><li>example：<ul><li><code>div</code></li><li><code>&lt;h1&gt;</code>到<code>&lt;h6&gt;</code></li><li><code>&lt;p&gt;</code></li><li><code>&lt;ul&gt;</code>,<code>&lt;ol&gt;</code>,<code>&lt;li&gt;</code></li><li><code>&lt;table&gt;</code></li><li><code>form</code></li></ul></li></ul><h3 id="行元素"><a href="#行元素" class="headerlink" title="行元素"></a>行元素</h3><ul><li>特性：行内元素不会在前后添加换行符，因此它们通常出现在文档流中的相邻位置。</li><li>example：<ul><li><code>&lt;a&gt;</code></li><li><code>&lt;strong&gt;</code>,<code>&lt;em&gt;</code></li><li><code>&lt;img&gt;</code></li><li><code>&lt;span&gt;</code></li><li><code>&lt;button&gt;</code></li><li><code>&lt;input&gt;</code></li></ul></li></ul><h2 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h2><p>HTML 支持有序、无序和定义列表</p><h3 id="有序列表"><a href="#有序列表" class="headerlink" title="有序列表"></a>有序列表</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ol</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>Java<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>Python<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>C/C++<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ol</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="无序列表"><a href="#无序列表" class="headerlink" title="无序列表"></a>无序列表</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>Tea<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>Coffee<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>Milk<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>Juice<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="定义列表"><a href="#定义列表" class="headerlink" title="定义列表"></a>定义列表</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dl</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dt</span>&gt;</span>language<span class="tag">&lt;/<span class="name">dt</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dd</span>&gt;</span>Java<span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dd</span>&gt;</span>Python<span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dd</span>&gt;</span>C/C++<span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dd</span>&gt;</span>Go<span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="tag">&lt;<span class="name">dt</span>&gt;</span>City<span class="tag">&lt;/<span class="name">dt</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dd</span>&gt;</span>Beijiing<span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dd</span>&gt;</span>Shanghai<span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dd</span>&gt;</span>Hangzhou<span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dl</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h2><p>HTML 表格由 <code>&lt;table&gt;</code>标签来定义。</p><p>每个表格均有若干行（由<code>&lt;tr&gt;</code>标签定义），每行被分割为若干单元格（由<code>&lt;td&gt;</code>标签定义），表格可以包含标题行（<code>&lt;th&gt;</code>）用于定义列的标题。</p><ul><li><strong><code>&lt;tr&gt;</code></strong>：tr 是 table row 的缩写，表示表格的一行。</li><li><strong><code>&lt;td&gt;</code></strong>：td 是 table data 的缩写，表示表格的数据单元格。</li><li><strong><code>&lt;th&gt;</code></strong>：th 是 table header的缩写，表示表格的表头单元格。</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">border</span>=<span class="string">&quot;1&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span> <span class="attr">colspan</span>=<span class="string">&quot;4&quot;</span>&gt;</span>1-1<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span> <span class="attr">rowspan</span>=<span class="string">&quot;2&quot;</span>&gt;</span>2-1,3-1<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>2-2<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>2-3<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>2-4<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>3-2<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>3-3<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>3-4<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="媒体元素"><a href="#媒体元素" class="headerlink" title="媒体元素"></a>媒体元素</h2><h3 id="视频"><a href="#视频" class="headerlink" title="视频"></a>视频</h3><ul><li><code>src</code>：资源路径（相对路径）</li><li><code>controls</code>：控制条、</li><li><code>autoplay</code>：自动播放</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">video</span> <span class="attr">src</span>=<span class="string">&quot;video_path&quot;</span> <span class="attr">controls</span> <span class="attr">autoplay</span>&gt;</span><span class="tag">&lt;/<span class="name">video</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="音频"><a href="#音频" class="headerlink" title="音频"></a>音频</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">autdio</span> <span class="attr">src</span>=<span class="string">&quot;audio_path&quot;</span> <span class="attr">controls</span>&gt;</span><span class="tag">&lt;/<span class="name">autdio</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 开发 </category>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HTML </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>初识HTML</title>
      <link href="/2025/02/21/2025-2-21-%E5%88%9D%E8%AF%86HTML/"/>
      <url>/2025/02/21/2025-2-21-%E5%88%9D%E8%AF%86HTML/</url>
      
        <content type="html"><![CDATA[<h1 id="初识HTML"><a href="#初识HTML" class="headerlink" title="初识HTML"></a>初识HTML</h1><h2 id="什么是HTML"><a href="#什么是HTML" class="headerlink" title="什么是HTML"></a>什么是HTML</h2><ul><li><p>Hyper Text Markup Language（超文本标记语言）<em>是一种用于创建网页的标准标记语言。您可以使用 HTML 来建立自己的 WEB 站点，HTML 运行在浏览器上，由浏览器来解析。</em></p></li><li><p>目前网页常用：HTML5</p></li></ul><h2 id="W3C标准"><a href="#W3C标准" class="headerlink" title="W3C标准"></a>W3C标准</h2><h3 id="W3C"><a href="#W3C" class="headerlink" title="W3C"></a>W3C</h3><ul><li>World Wide Web Consortium（万维网联盟）</li><li>Web技术领域最权威和具影响力的国际中立性技术标准机构</li><li><a href="http://www.w3.org/">http://www.w3.org/</a></li><li><a href="http://www.chinaw3c.org/">http://www.chinaw3c.org/</a></li></ul><h3 id="W3C标准-1"><a href="#W3C标准-1" class="headerlink" title="W3C标准"></a>W3C标准</h3><ol><li>结构化标准语言（HTML,XML）</li><li>表现标准语言（CSS）</li><li>行为标准（DOM,ECMAScript）</li></ol><h2 id="HTML基本结构"><a href="#HTML基本结构" class="headerlink" title="HTML基本结构"></a>HTML基本结构</h2><p><img src="/../img/screenshot/html_basic_structure.jpg" alt="HTML基本结构"></p>]]></content>
      
      
      <categories>
          
          <category> 开发 </category>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HTML </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vim</title>
      <link href="/2025/02/11/2025-2-11-Vim/"/>
      <url>/2025/02/11/2025-2-11-Vim/</url>
      
        <content type="html"><![CDATA[<h1 id="Vim"><a href="#Vim" class="headerlink" title="Vim"></a>Vim</h1><h2 id="第一讲"><a href="#第一讲" class="headerlink" title="第一讲"></a>第一讲</h2><ol><li><p><strong>hjkl</strong>字母键</p><p>h（左移） j（下行）k（上行）l（右移）</p></li><li><p>进入Vim编辑器</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim 文件名 &lt;回车&gt;</span><br></pre></td></tr></table></figure></li><li><p>退出Vim编辑器</p><ul><li>放弃所有改动</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;ESC&gt; :q! &lt;回车&gt;</span><br></pre></td></tr></table></figure><ul><li>保存改动</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;ESC&gt; :wq &lt;回车&gt;</span><br></pre></td></tr></table></figure></li><li><p>在正常模式下删除光标所在位置的字符</p><p><code>x</code></p></li><li><p>插入或添加文本</p><ul><li>在光标所在位置前插入文本</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">i 输入欲插入文本 &lt;ESC&gt;`g`</span><br></pre></td></tr></table></figure><ul><li>在光标所在位置后添加文本</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">A 输入欲添加文本 &lt;ESC&gt;</span><br></pre></td></tr></table></figure></li><li><p>按下 <code>&lt;ESC&gt;</code> 键会带您回到正常模式或者撤消一个不想输入或部分完整的命令。</p></li></ol><h2 id="第二讲"><a href="#第二讲" class="headerlink" title="第二讲"></a>第二讲</h2><ol><li><p>当前光标删除至下一个单词</p><p><code>dw</code></p></li><li><p>当前光标删除至当前行末尾</p><p><code>d$</code></p></li><li><p>删除整行</p><p><code>dd</code></p></li><li><p>欲重复一个动作，在前面加上一个数字</p><p>如<code>d2w</code></p></li><li><p>在正常模式下修改命令的格式是：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">operator   [number]   motion</span><br></pre></td></tr></table></figure><p>其中：</p><ul><li>operator - 操作符：代表要做的事情，比如 d 代表删除</li><li>[number] - 可以附加的数字：代表动作重复的次数  </li><li>motion   - 动作：代表在所操作的文本上的移动，例如 w 代表单词(word)， $ 代表行末等等。</li></ul></li><li><p>移动光标到行首</p><p><code>0</code></p></li><li><ul><li>撤销以前的操作：<code>u</code></li><li>撤销在一行中所作的改动：<code>U</code></li><li>撤销以前的撤销命令，恢复以前的操作结果：<code>ctrl + R</code></li></ul></li></ol><h1 id="第三讲"><a href="#第三讲" class="headerlink" title="第三讲"></a>第三讲</h1><ol><li><p>将已删除的内容置于光标后</p><p><code>p</code></p><p>如果最后一次删除的是一个整行，那该行将置于当前光标所在行的下一行</p></li><li><p>替换光标所在位置的字符</p><p><code>r</code></p></li><li><p>更改类命令：允许您改变从当前光标所在位置直到动作指示的位置中间的文本</p><ul><li>替换当前光标到单词的末尾的内容：<code>ce</code></li><li>替换当前光标到行末的内容：<code>c$</code></li></ul></li><li><p>更改类命令的格式：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">c [number] motion</span><br></pre></td></tr></table></figure></li></ol><h1 id="第四讲"><a href="#第四讲" class="headerlink" title="第四讲"></a>第四讲</h1><ol><li><ul><li><p>显示当前光标所在位置和文件状态信息</p><p><code>ctrl + g</code></p></li><li><p>将光标跳转至文件最后一行</p><p><code>g</code></p></li><li><p>将光标移动至该行号代表的行</p><p><code>先敲入一个行号然后输入大写G</code></p></li><li><p>将光标跳转至文件第一行</p><p><code>gg</code></p></li></ul></li><li><ul><li><p>正向查找字符串</p><p><code>/ + 字符串</code></p></li><li><p>反向查找字符串</p><p><code>? + 字符串</code></p></li><li><p>在同一方向上查找下一个匹配字符串</p><p><code>完成一次查找后按 n 键</code></p></li><li><p>向相反方向查找下一匹配字符串</p><p><code>按大写 N </code></p></li><li><p>跳转回较旧的位置</p><p><code>ctrl + O</code></p></li><li><p>跳转到较新位置</p><p><code>ctrl + I</code></p></li></ul></li><li><p>光标当前位置是括号<code>(、)、[、]、&#123;、&#125;，</code>按<code>%</code>会将光标移动到配对的括号上</p></li><li><ul><li><p>在一行内替换头一个字符串 old 为新的字符串 new</p><p><code>:s/old/new</code></p></li><li><p>在一行内替换所有的字符串 old 为新的字符串 new</p><p><code>:s/old/new/g</code></p></li><li><p>在两行内替换所有的字符串 old 为新的字符串 new</p><p><code>:#,#s/old/new/g</code></p></li><li><p>在文件内替换所有的字符串 old 为新的字符串 new</p><p><code>:%s/old/new/g</code></p></li><li><p>进行全文替换时询问用户确认每个替换需添加 c 标志</p><p><code>:%s/old/new/gc</code></p></li></ul></li></ol><h1 id="第五讲"><a href="#第五讲" class="headerlink" title="第五讲"></a>第五讲</h1><ol><li><pre><code class="language-bash">:!command</code></pre><p>用于执行一个外部命令<code>commmand</code></p><p>example：</p><ul><li><p>显示当前目录的内容</p><p><code>:!ls</code>（Unix）</p><p><code>:!dir</code>（MS-DOS）</p></li><li><p>删除名为FILENAME的文件</p><p><code>:!rm FILENAME</code>（Unix）</p><p><code>:!del FILENAME</code>（MS-DOS）</p></li></ul></li><li><p>将当前VIM中正在编辑的文件保存到名为FILENAME的文件中</p><p><code>:w FILENAME</code></p></li><li><p>将当前编辑文件中可视模式下选中的内容保存到文件FILENAME中</p><p><code>v motion :w FILENAME</code></p></li><li><p>提取磁盘文件FILENAME并将其插入到当前文件的光标位置后面</p><p><code>:r FILENAME</code></p></li><li><p>读取dir命令的输出并将其放置到当前文件的光表位置后面</p><p><code>:r !dir</code></p></li></ol><h1 id="第六讲"><a href="#第六讲" class="headerlink" title="第六讲"></a>第六讲</h1><ol><li><ul><li><p>在光标下方打开新的一行进入插入模式</p><p><code>o</code></p></li><li><p>在光标上方打开新的一行进入插入模式</p><p><code>O</code></p></li></ul></li><li><ul><li><p>在光标所在位置之后插入文本</p><p><code>a</code></p></li><li><p>在光标所在行的行末之后插入文本</p><p><code>A</code></p></li></ul></li><li><p>使光标移动到单词末尾</p><p><code>e</code></p></li><li><p>复制文本：<code>y</code></p><p>粘贴先前复制的文本：<code>p</code></p></li><li><p>进入替换模式</p><p><code>R</code>，按<code>&lt;ESC&gt;</code>回到正常模式</p></li><li><p>输入 <code>:set xxx</code> 可以设置 <code>xxx</code>选项。一些有用的选项如下：</p><ul><li><code>ic</code>：’ignorecase’查找时忽略字母大小写</li><li><code>is</code> ：’incsearch’查找短语时显示部分匹配      </li><li><code> hls</code> ：’hlsearch’高亮显示所有的匹配短语</li></ul></li><li><p>在选项前加上 <code>no</code> 可以关闭选项：  <code>:set noic</code></p></li></ol><h1 id="第七讲"><a href="#第七讲" class="headerlink" title="第七讲"></a>第七讲</h1><ol><li><p>打开帮助窗口</p><p><code>:help</code>、<code>&lt;F1&gt;键</code>、<code>&lt;help&gt;键</code></p></li><li><p>找到关于 cmd 命令的帮助</p><p>输入<code>:help cmd</code></p></li><li><p>在窗口之间跳转</p><p><code>ctrl + W</code></p></li><li><p>关闭帮助窗口</p><p><code>:q</code></p></li><li><p>可以创建一个 vimrc 启动脚本文件用来保存您偏好的设置</p></li><li><p>当输入 <code>: </code>命令时，按 <code>CTRL-D</code> 可以查看可能的补全结果。按 <code>&lt;TAB&gt;</code> 可以使用一个补全。</p></li></ol><h1 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h1><p>vim 教程到此就结束了。本教程只是为了简明地介绍一下 Vim 编辑器，但已足以让您很容易使用这个编辑器了。毋庸质疑，vim还有很多很多的命令，本教程所介绍的距离完整的差得很远。所以您要精通的话，还望继续努力哦。下一步您可以阅读Vim 的用户手册，使用的命令是： <code>:help user-manual</code></p><p>下面这本书值得推荐用于更进一步的阅读和学习：<br>        Vim - Vi Improved - 作者：Steve Oualline<br>        出版社：New Riders</p><p>这是第一本完全讲解 Vim 的书籍。它对于初学者特别有用。其中包含有大量实例和图示。</p><p>欲知详情，请访问 <a href="https://iccf-holland.org/click5.html">https://iccf-holland.org/click5.html</a></p>]]></content>
      
      
      <categories>
          
          <category> 开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vim </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>异常 (Java)</title>
      <link href="/2025/02/10/2025-2-10-%E5%BC%82%E5%B8%B8-Java/"/>
      <url>/2025/02/10/2025-2-10-%E5%BC%82%E5%B8%B8-Java/</url>
      
        <content type="html"><![CDATA[<h1 id="异常"><a href="#异常" class="headerlink" title="异常"></a>异常</h1><h2 id="什么是异常"><a href="#什么是异常" class="headerlink" title="什么是异常"></a>什么是异常</h2><ul><li><em><strong>Exception</strong></em></li><li>指程序运行中出现的意料外的各种情况：文件找不到、网络连接失败、非法参数等</li></ul><h2 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h2><ol><li>检查性异常：用户错误或问题引起的异常，这是程序员无法预见的。如打开一个不存在的文件夹。这些异常在编译时不能被简单忽略。</li><li>运行时异常：可能被程序员避免的异常。与检查性异常相反，运行时异常可以在编译时被忽略。</li><li>错误<em>ERROR</em>：错误不是异常，而是脱离程序员控制的问题。错误在代码中通常被忽略。例如当栈溢出时，错误发生，它们在编译时检查不到。</li></ol><h2 id="异常体系结构"><a href="#异常体系结构" class="headerlink" title="异常体系结构"></a>异常体系结构</h2><ul><li>Java把异常当作对象来处理，并定义一个基类java.lang.Throwable作为所有异常的超类</li><li>在Java API中已经定义了许多异常类，这些异常类分为两大类，错误<em>Error</em>和异常<em>Exception</em></li></ul><p><img src="/../img/screenshot/exception.png" alt="异常体系结构"></p><h2 id="Error"><a href="#Error" class="headerlink" title="Error"></a>Error</h2><ul><li>Error类对象由Java虚拟机生成并抛出，大多数错误与代码编写者所执行的操作无关</li><li>Java虚拟机运行错误（Virtual MachineError），当JVM不再有继续执行操作所需的内存资源时，将出现OutOfMemoryError。这些异常发生时，Java虚拟机（JVM）一般选择线程终止</li><li>还有发生在虚拟机试图执行应用时，如定义类错误（NoClassDefFoundError）、链接错误（LinkageError）。这些错误是不可查的，因为它们在应用程序的控制和处理能力之外，而且绝大多数是程序运行时不允许出现的状况</li></ul><h1 id="Exception"><a href="#Exception" class="headerlink" title="Exception"></a>Exception</h1><ul><li><p>在Exception分支中有一个重要的子类RuntimeException（运行时异常）</p><ul><li>ArrayIndexOutOfBoundsException（数组下标越界）</li><li>NullPointerException（空指针异常）</li><li>ArithmeticException（算术异常）</li><li>MissingResourceException（丢失资源）</li><li>ClassNotFoundException（找不到类）等异常</li></ul><p>这些异常是不检查异常，程序中可以选择捕获处理，也可以不处理</p></li><li><p>这些异常一般是由程序逻辑错误引起的，程序应该从逻辑角度尽可能避免这类异常的发生</p></li><li><p>Error和Exception的区别：Error通常是灾难性的致命的错误，是程序无法控制和处理的，当出现这些异常时，Java虚拟机（JVM）一般会选择终止进程；Exception通常情况下是可以被程序处理的，并且在程序中应该尽可能地去处理这些异常</p></li></ul><h2 id="异常处理机制"><a href="#异常处理机制" class="headerlink" title="异常处理机制"></a>异常处理机制</h2><ul><li><p>抛出异常</p></li><li><p>捕获异常</p></li><li><p>异常处理五个关键字：</p><p><em>try、catch、finally、throw、throws</em></p></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> exception;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">a</span> <span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">b</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123; <span class="comment">//try 监控区域</span></span><br><span class="line">            System.out.println(a / b);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (ArithmeticException e) &#123; <span class="comment">//catch 捕获异常</span></span><br><span class="line">            System.out.println(<span class="string">&quot;b != 0&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123; <span class="comment">//处理善后工作</span></span><br><span class="line">            System.out.println(<span class="string">&quot;Finally&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//finally 可以不要。 要：假设IO，资源，关闭</span></span><br><span class="line">        <span class="comment">//System.out.println(a / b);</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">new</span> <span class="title class_">Test</span>().a();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Throwable e) &#123; <span class="comment">//catch(想要捕获的异常类型) 捕获异常</span></span><br><span class="line">            System.out.println(<span class="string">&quot;nonono&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;Finally&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//假设捕获多个异常：从小到大</span></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (b == <span class="number">0</span>) &#123; <span class="comment">//throw throws</span></span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">ArithmeticException</span>(); <span class="comment">//主动抛出异常</span></span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            System.out.println(a / b);</span><br><span class="line">            </span><br><span class="line">        &#125; <span class="keyword">catch</span> (Error e) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;Error&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;Exception&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Throwable e) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;Throwable&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;Finally&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">a</span><span class="params">()</span> &#123;</span><br><span class="line">        b();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">b</span><span class="params">()</span> &#123;</span><br><span class="line">        a();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> exception;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> oop.demo07.Person;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test2</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">a</span> <span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">b</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Ctrl + Alt + T</span></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            System.out.println(a / b);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(e); <span class="comment">//打印错误的栈信息</span></span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">new</span> <span class="title class_">Test2</span>().test(<span class="number">1</span>, <span class="number">0</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (ArithmeticException e) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(e);</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//假设这方法中，处理不了异常。方法上抛出异常</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">test</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b)</span> <span class="keyword">throws</span> ArithmeticException &#123;</span><br><span class="line">        <span class="keyword">if</span> (b == <span class="number">0</span>) &#123; <span class="comment">//throw throws</span></span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">ArithmeticException</span>(); <span class="comment">// 主动的抛出异常，一般在方法中使用</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="自定义异常"><a href="#自定义异常" class="headerlink" title="自定义异常"></a>自定义异常</h2><ul><li>使用Java内置的异常类可以描述在编程</li></ul><h3 id="实际应用中的经验总结"><a href="#实际应用中的经验总结" class="headerlink" title="实际应用中的经验总结"></a>实际应用中的经验总结</h3><ul><li>处理运行时异常时，采用逻辑去合理规避同时辅助try-catch处理</li><li>在多重catch块后面，可以加一个catch（Exception）来处理可能会被遗漏的异常</li><li>对于不确定的代码，也可以加上try-catch，处理潜在的异常</li><li>尽量去处理异常，切忌只是简单地调用printStackTrace()去打印输出</li><li>具体如何处理异常，要根据不同地业务需求和异常类型去决定</li><li>尽量添加finally语句块去释放占用的资源，IO~  Scanner~</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> exception.demo02;</span><br><span class="line"></span><br><span class="line"><span class="comment">//自定义的异常类</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyException</span> <span class="keyword">extends</span> <span class="title class_">Exception</span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//传递数字 &gt; 10</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> detail;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">MyException</span><span class="params">(<span class="type">int</span> a)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.detail = a;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//toString：异常的打印信息</span></span><br><span class="line">    <span class="comment">//alt + insert -&gt;toString()</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">toString</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;MyException&#123;&quot;</span> + detail + <span class="string">&#x27;&#125;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> exception.demo02;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//可能存在异常的方法</span></span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">test</span><span class="params">(<span class="type">int</span> a)</span> <span class="keyword">throws</span> MyException &#123;</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;传递的参数为：&quot;</span> + a);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (a &gt; <span class="number">10</span>) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">MyException</span>(a); <span class="comment">//抛出</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;OK&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            test(<span class="number">11</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (MyException e) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;MyException =&gt;&quot;</span> + e);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 开发 </category>
          
          <category> 后端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>内部类 (Java)</title>
      <link href="/2025/02/09/2025-2-9-%E5%86%85%E9%83%A8%E7%B1%BB-Java/"/>
      <url>/2025/02/09/2025-2-9-%E5%86%85%E9%83%A8%E7%B1%BB-Java/</url>
      
        <content type="html"><![CDATA[<h1 id="内部类"><a href="#内部类" class="headerlink" title="内部类"></a>内部类</h1><ul><li>内部类就是在一个类的内部再定义一个类：比如，A类中定义一个B类，那么B类相对于A类来说就成为内部类，而A类相对B类来说就是外部类了。</li></ul><ol><li>成员内部类</li><li>静态内部类</li><li>局部内部类</li><li>匿名内部类</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> oop.demo10;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Outer</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> <span class="variable">id</span> <span class="operator">=</span> <span class="number">18</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">out</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;Outer Method&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Inner</span> &#123;</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">in</span><span class="params">()</span> &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;Inner Method&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//获得外部类的私有属性</span></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">getID</span><span class="params">()</span> &#123;</span><br><span class="line">            System.out.println(id);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//局部内部类</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">method</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">class</span> <span class="title class_">Inner</span> &#123;</span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">in</span><span class="params">()</span> &#123;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//一个java类中可以有多个class类，但只能有一个public class</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">A</span> &#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> oop;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> oop.demo10.Outer;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Application</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Outer</span> <span class="variable">outer</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Outer</span>();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//通过这个外部类来实例化内部类</span></span><br><span class="line">        Outer.<span class="type">Inner</span> <span class="variable">inner</span> <span class="operator">=</span> outer.<span class="keyword">new</span> <span class="title class_">Inner</span>();</span><br><span class="line">        inner.getID(); <span class="comment">//18</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> oop.demo10;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Apple</span> <span class="variable">apple</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Apple</span>();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//匿名内部类：没有名字初始化类，不用讲实例保存到变量中</span></span><br><span class="line">        <span class="keyword">new</span> <span class="title class_">Apple</span>().eat();</span><br><span class="line"></span><br><span class="line">        <span class="type">UserService</span> <span class="variable">userService</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">UserService</span>() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">hello</span><span class="params">()</span> &#123;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Apple</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">eat</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;1&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">interface</span> <span class="title class_">UserService</span> &#123;</span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">hello</span><span class="params">()</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 开发 </category>
          
          <category> 后端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>static (Java)</title>
      <link href="/2025/02/09/2025-2-9-static-Java/"/>
      <url>/2025/02/09/2025-2-9-static-Java/</url>
      
        <content type="html"><![CDATA[<h1 id="static"><a href="#static" class="headerlink" title="static"></a><em>static</em></h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> oop.demo07;</span><br><span class="line"></span><br><span class="line"><span class="comment">//static</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Student</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="type">int</span> age; <span class="comment">//静态变量 多线程</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">double</span> score; <span class="comment">//非静态变量</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span> &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">go</span><span class="params">()</span> &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Student</span> <span class="variable">stu_1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Student</span>();</span><br><span class="line"></span><br><span class="line">        System.out.println(Student.age);</span><br><span class="line">        <span class="comment">//System.out.println(Student.score);报错</span></span><br><span class="line">        System.out.println(stu_1.age);</span><br><span class="line">        System.out.println(stu_1.score);</span><br><span class="line"></span><br><span class="line">        go();</span><br><span class="line">        <span class="comment">//run();报错</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> oop.demo07;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Person</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//匿名代码块 赋初始值</span></span><br><span class="line">    &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;匿名代码块&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//静态代码块 只执行一次</span></span><br><span class="line">    <span class="keyword">static</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;静态代码块&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//构造方法 </span></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Person</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;构造方法&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line"></span><br><span class="line">        <span class="type">Person</span> <span class="variable">person1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Person</span>();</span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">        静态代码块</span></span><br><span class="line"><span class="comment">        匿名代码块</span></span><br><span class="line"><span class="comment">        构造方法</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        System.out.println(<span class="string">&quot;=======================&quot;</span>);</span><br><span class="line">        <span class="type">Person</span> <span class="variable">person2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Person</span>();</span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">        匿名代码块</span></span><br><span class="line"><span class="comment">        构造方法</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> oop.demo07;</span><br><span class="line"></span><br><span class="line"><span class="comment">//静态导入包</span></span><br><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> java.lang.Math.random;</span><br><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> java.lang.Math.PI;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line"></span><br><span class="line">        System.out.println(Math.random());</span><br><span class="line"></span><br><span class="line">        System.out.println(random());</span><br><span class="line"></span><br><span class="line">        System.out.println(PI);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 开发 </category>
          
          <category> 后端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>抽象类 (Java)</title>
      <link href="/2025/02/09/2025-2-9-%E6%8A%BD%E8%B1%A1%E7%B1%BB-Java/"/>
      <url>/2025/02/09/2025-2-9-%E6%8A%BD%E8%B1%A1%E7%B1%BB-Java/</url>
      
        <content type="html"><![CDATA[<h1 id="抽象类"><a href="#抽象类" class="headerlink" title="抽象类"></a>抽象类</h1><ol><li>不能new抽象类，只能靠子类去实现它（约束）</li><li>抽象类中可以写普通的方法</li><li>抽象方法必须在抽象类中</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> oop.demo08;</span><br><span class="line"></span><br><span class="line"><span class="comment">//abstract 抽象类：类 extends 单继承 （接口可以多继承）</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">class</span> <span class="title class_">Action</span> &#123;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//约束：有人帮我们实现</span></span><br><span class="line">    <span class="comment">//abstract 抽象方法：只有方法名字，没有方法的实现</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">void</span> <span class="title function_">doSomething</span><span class="params">()</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> oop.demo08;</span><br><span class="line"></span><br><span class="line"><span class="comment">//继承的子类必须实现抽象类的方法（重写）</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">A</span> <span class="keyword">extends</span> <span class="title class_">Action</span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">doSomething</span><span class="params">()</span> &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 开发 </category>
          
          <category> 后端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>接口 (Java)</title>
      <link href="/2025/02/09/2025-2-9-%E6%8E%A5%E5%8F%A3-Java/"/>
      <url>/2025/02/09/2025-2-9-%E6%8E%A5%E5%8F%A3-Java/</url>
      
        <content type="html"><![CDATA[<h1 id="接口"><a href="#接口" class="headerlink" title="接口"></a>接口</h1><ul><li><p>普通类：只有具体实现</p></li><li><p>抽象类：具体实现和规范（抽象方法）都有</p></li><li><p>接口：只有规范</p></li><li><p>接口的本质是契约，制定好后大家遵守</p></li></ul><h2 id="作用"><a href="#作用" class="headerlink" title="作用"></a>作用</h2><ol><li>约束</li><li>定义一些方法，让不同的人实现</li><li>方法：public abstract</li><li>常量：public static final</li><li>接口不能被实例化，接口中没有构造方法</li><li>implement可以实现多个接口</li><li>必须要重写接口中的方法</li></ol><p>example:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> oop.demo09;</span><br><span class="line"></span><br><span class="line"><span class="comment">//interface 定义的关键字,接口都需要有实现类</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">UserService</span> &#123;</span><br><span class="line">    <span class="comment">//常量 public static final</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">age</span> <span class="operator">=</span> <span class="number">18</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//接口中的所有定义都是抽象的 public abstract</span></span><br><span class="line">    <span class="comment">//增删改查</span></span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">add</span><span class="params">(String name)</span>;</span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">delete</span><span class="params">(String name)</span>;</span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">update</span><span class="params">(String name)</span>;</span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">query</span><span class="params">(String name)</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> oop.demo09;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">TimeService</span> &#123;</span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">timer</span><span class="params">()</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> oop.demo09;</span><br><span class="line"></span><br><span class="line"><span class="comment">//抽象类 extends</span></span><br><span class="line"><span class="comment">//类 可以实现接口 implements 接口</span></span><br><span class="line"><span class="comment">//实现了接口的类，需要重写接口中的方法</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//多继承：利用接口实现多继承</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserServiceImpl</span> <span class="keyword">implements</span> <span class="title class_">UserService</span>, TimeService&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">add</span><span class="params">(String name)</span> &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">delete</span><span class="params">(String name)</span> &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">update</span><span class="params">(String name)</span> &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">query</span><span class="params">(String name)</span> &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">timer</span><span class="params">()</span> &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 开发 </category>
          
          <category> 后端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>封装、继承、多态 (Java)</title>
      <link href="/2025/02/07/2025-2-7-%E5%B0%81%E8%A3%85%E3%80%81%E7%BB%A7%E6%89%BF%E3%80%81%E5%A4%9A%E6%80%81-Java/"/>
      <url>/2025/02/07/2025-2-7-%E5%B0%81%E8%A3%85%E3%80%81%E7%BB%A7%E6%89%BF%E3%80%81%E5%A4%9A%E6%80%81-Java/</url>
      
        <content type="html"><![CDATA[<h1 id="封装、继承、多态"><a href="#封装、继承、多态" class="headerlink" title="封装、继承、多态"></a>封装、继承、多态</h1><h2 id="封装"><a href="#封装" class="headerlink" title="封装"></a>封装</h2><h3 id="该露的露，该藏的藏"><a href="#该露的露，该藏的藏" class="headerlink" title="该露的露，该藏的藏"></a>该露的露，该藏的藏</h3><ul><li>程序设计要追求**”高内聚，低耦合”**。高内聚：类的内部数据操作细节自己完成，不允许外部干涉；低耦合：仅暴露少量的方法给外部使用</li></ul><h3 id="封装（数据的隐藏）"><a href="#封装（数据的隐藏）" class="headerlink" title="封装（数据的隐藏）"></a>封装（数据的隐藏）</h3><ul><li>通常应禁止直接访问一个对象中数据的实际表示，而应通过操作接口来访问，这称为信息的隐藏</li></ul><h3 id="属性私有-get-set"><a href="#属性私有-get-set" class="headerlink" title="属性私有 get &#x2F; set"></a>属性私有 get &#x2F; set</h3><p>example：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> oop.demo03;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Student</span> &#123;</span><br><span class="line">    <span class="comment">// 属性私有</span></span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> age;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">char</span> sex;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//提供一些可以操作这个属性的方法</span></span><br><span class="line">    <span class="comment">//提供一些 public 的get、set方法</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//get获取这个数据</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getName</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>.name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//set为这个数据设置值</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setName</span><span class="params">(String name)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// alt + insert -&gt; Getter and Setter</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getAge</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setAge</span><span class="params">(<span class="type">int</span> age)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (age &gt; <span class="number">120</span> || age &lt; <span class="number">0</span>) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;The age is illegal&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="built_in">this</span>.age = age;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">char</span> <span class="title function_">getSex</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> sex;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setSex</span><span class="params">(<span class="type">char</span> sex)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.sex = sex;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> oop.demo03;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Application</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Student</span> <span class="variable">s1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Student</span>();</span><br><span class="line"></span><br><span class="line">        s1.setName(<span class="string">&quot;Xiao Jinghuai&quot;</span>);</span><br><span class="line">        System.out.println(s1.getName());</span><br><span class="line"></span><br><span class="line">        s1.setAge(<span class="number">18</span>);</span><br><span class="line">        System.out.println(s1.getAge());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="作用"><a href="#作用" class="headerlink" title="作用"></a>作用</h3><ol><li>提高程序安全性，保护数据</li><li>隐藏代码实现细节</li><li>统一接口</li><li>增加系统可维护性</li></ol><h2 id="继承"><a href="#继承" class="headerlink" title="继承"></a>继承</h2><ul><li><p>本质：对某一类的抽象，实现对现实世界更好的建模</p></li><li><p><strong>extends</strong>的意思是“扩展”。子类是父类的扩展</p></li><li><p>JAVA中只有单继承，没有多继承</p></li></ul><p>继承是类和类之间的一种关系。除此外，类和类间的关系还有依赖、组合、聚合等</p><p>继承关系的两个类，一个为子类，一个为父类。子类继承父类，使用关键词extends表示</p><ul><li>object类</li><li>super</li><li>方法重写</li></ul><p>example：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> oop.demo04;</span><br><span class="line"><span class="comment">//Person 人：父类</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Person</span> &#123;</span><br><span class="line">    <span class="comment">//public</span></span><br><span class="line">    <span class="comment">//protected</span></span><br><span class="line">    <span class="comment">//default</span></span><br><span class="line">    <span class="comment">//private</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> <span class="variable">money</span> <span class="operator">=</span> <span class="number">10_0000_0000</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">say</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;hello world!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getMoney</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> money;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setMoney</span><span class="params">(<span class="type">int</span> money)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.money = money;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> oop.demo04;</span><br><span class="line"><span class="comment">//学生 is 人：子类</span></span><br><span class="line"><span class="comment">//子类继承父类，拥有父类的全部方法</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Student</span> <span class="keyword">extends</span> <span class="title class_">Person</span>&#123;</span><br><span class="line">    <span class="comment">//ctrl + h</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> oop;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> oop.demo04.Student;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Application</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Student</span> <span class="variable">stu_1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Student</span>();</span><br><span class="line"></span><br><span class="line">        stu_1.say();</span><br><span class="line">        System.out.println(stu_1.getMoney());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="super关键字"><a href="#super关键字" class="headerlink" title="super关键字"></a>super关键字</h3><h4 id="注意点"><a href="#注意点" class="headerlink" title="注意点"></a>注意点</h4><ol><li>super调用父类的构造方法，必须在构造方法的第一个</li><li>super必须只能出现在子类的方法或者构造方法中</li><li>super和this不能同时调用构造方法</li></ol><h4 id="super-和-this"><a href="#super-和-this" class="headerlink" title="super 和 this"></a>super 和 this</h4><ol><li>代表的对象不同：<ul><li>this：本身调用者这个对象</li><li>super：代表父类对象的应用</li></ul></li><li>前提：<ul><li>this：没有继承也可以使用</li><li>super：只能在继承条件下使用</li></ul></li><li>构造方法：<ul><li>this()：本类的构造</li><li>super()：父类的构造</li></ul></li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> oop.demo05;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Person</span> <span class="comment">/*extends Object*/</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Person</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;Person Parameterless execution&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">protected</span> <span class="type">String</span> <span class="variable">name</span> <span class="operator">=</span> <span class="string">&quot;Xiao Jinghuai&quot;</span>;</span><br><span class="line">    <span class="comment">// private的东西无法被继承</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">print</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;Person&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> oop.demo05;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Student</span> <span class="keyword">extends</span> <span class="title class_">Person</span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Student</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="comment">//隐藏代码：调用了父类的无参构造</span></span><br><span class="line">        <span class="built_in">super</span>();</span><br><span class="line">        System.out.println(<span class="string">&quot;Student Parameterless execution&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="type">String</span> <span class="variable">name</span> <span class="operator">=</span> <span class="string">&quot;zerd1y&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">print</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;Student&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">test1</span><span class="params">()</span> &#123;</span><br><span class="line">        print(); <span class="comment">//Student</span></span><br><span class="line">        <span class="built_in">this</span>.print(); <span class="comment">//Student</span></span><br><span class="line">        <span class="built_in">super</span>.print(); <span class="comment">//Person</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">test2</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(name); <span class="comment">//zerd1y</span></span><br><span class="line">        System.out.println(<span class="built_in">this</span>.name); <span class="comment">//zerd1y</span></span><br><span class="line">        System.out.println(<span class="built_in">super</span>.name); <span class="comment">//Xiao Jinghuai</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> oop;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> oop.demo05.Student;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Application</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Student</span> <span class="variable">stu_0</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Student</span>();</span><br><span class="line"></span><br><span class="line">        stu_0.test1();</span><br><span class="line">        stu_0.test2();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="方法的重写"><a href="#方法的重写" class="headerlink" title="方法的重写"></a>方法的重写</h3><h4 id="重写：需要有继承关系，子类重写父类的方法"><a href="#重写：需要有继承关系，子类重写父类的方法" class="headerlink" title="重写：需要有继承关系，子类重写父类的方法"></a>重写：需要有继承关系，子类重写父类的方法</h4><ol><li>方法名必须相同</li><li>参数列表必须相同</li><li>修饰符：范围可以扩大但不能缩小 public &gt; protected &gt; default &gt; private</li><li>抛出异常：范围可以缩小但不能扩大 Exception &gt; ClassNotFoundException</li><li>子类的方法和父类要一致，方法体不同</li></ol><h4 id="为什么需要重写"><a href="#为什么需要重写" class="headerlink" title="为什么需要重写"></a>为什么需要重写</h4><ol><li>父类的功能，子类不一定需要 &#x2F; 不一定满足</li><li>Alt + Insert：override</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> oop.demo05;</span><br><span class="line"></span><br><span class="line"><span class="comment">//重写都是方法的重写，和属性无关</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">B</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//静态</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">test1</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;B&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">test2</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;B_B&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> oop.demo05;</span><br><span class="line"></span><br><span class="line"><span class="comment">//继承</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">A</span> <span class="keyword">extends</span> <span class="title class_">B</span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//静态</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">test1</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;A&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//Override重写</span></span><br><span class="line">    <span class="meta">@Override</span> <span class="comment">//注解：有功能的注释</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">test2</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;A_A&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> oop;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> oop.demo05.A;</span><br><span class="line"><span class="keyword">import</span> oop.demo05.B;</span><br><span class="line"></span><br><span class="line"><span class="comment">//静态方法：只看左边（类加载时确定）</span></span><br><span class="line"><span class="comment">//非静态：重写：子类重写了父类的方法（public）</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Application</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//方法的调用只和左边（定义的数据类型）有关</span></span><br><span class="line">        <span class="type">A</span> <span class="variable">a</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">A</span>();</span><br><span class="line">        a.test1(); <span class="comment">// A</span></span><br><span class="line">        a.test2(); <span class="comment">// A_A</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//父类的引用指向子类</span></span><br><span class="line">        <span class="type">B</span> <span class="variable">b</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">A</span>();</span><br><span class="line">        b.test1(); <span class="comment">// B</span></span><br><span class="line">        b.test2(); <span class="comment">// A_A</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="多态"><a href="#多态" class="headerlink" title="多态"></a>多态</h2><ul><li>同一方法可以根据发送对象的不同而采用多种不同的行为方式</li><li>一个对象的实际类型是确定的，但可以指向对象的引用类型有很多（父类，有关系的类）</li><li>多态存在的条件：<ol><li>有继承关系</li><li>子类重写父类的方法</li><li>父类引用指向子类对象</li></ol></li><li>注意：多态是方法的多态，属性没有多态性</li><li>instanceof 类型转换 引用类型</li></ul><p>example:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> oop.demo06;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Person</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">say</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;Person&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> oop.demo06;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Student</span> <span class="keyword">extends</span> <span class="title class_">Person</span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">say</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;Student&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;run&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> oop;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> oop.demo06.Person;</span><br><span class="line"><span class="keyword">import</span> oop.demo06.Student;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Application</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//一个对象的实际类型是确定的</span></span><br><span class="line">        <span class="comment">//可以指向的引用类型就不确定了：父类的引用指向子类</span></span><br><span class="line"></span><br><span class="line">        <span class="type">Student</span> <span class="variable">s1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Student</span>();</span><br><span class="line">        <span class="type">Person</span> <span class="variable">s2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Student</span>(); <span class="comment">//父类型，指向子类，但是不能调用子类独有的方法。同名方法：有重写调重写</span></span><br><span class="line">        <span class="type">Object</span> <span class="variable">s3</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Student</span>();</span><br><span class="line"></span><br><span class="line">        s1.say(); <span class="comment">//Student</span></span><br><span class="line">        s2.say(); <span class="comment">//Student 子类重写了父类的方法</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//对象能执行哪些方法，看对象左边类型</span></span><br><span class="line">        s1.run(); <span class="comment">//run</span></span><br><span class="line">        <span class="comment">//s2.run(); //报错</span></span><br><span class="line">        ((Student)s2).run(); <span class="comment">//run(强制转换)</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="多态注意事项"><a href="#多态注意事项" class="headerlink" title="多态注意事项"></a>多态注意事项</h3><ol><li><p>多态是方法的多态，属性没有多态</p></li><li><p>父类和子类，有联系 类型转换异常 ClassCastException</p></li><li><p>存在条件：继承关系 方法需重写 父类引用指向子类 Father f1 &#x3D; new Son();</p><p>无法重写：</p><ul><li><em>static</em>：静态方法：属于类，它不属于实例</li><li><em>final</em>：常量</li><li><em>private</em></li></ul></li></ol><h3 id="instanceof"><a href="#instanceof" class="headerlink" title="instanceof"></a><em>instanceof</em></h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> oop;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> oop.demo06.Person;</span><br><span class="line"><span class="keyword">import</span> oop.demo06.Student;</span><br><span class="line"><span class="keyword">import</span> oop.demo06.Teacher;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Application</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Object &gt; String</span></span><br><span class="line">        <span class="comment">// Object &gt; Person &gt; Teacher</span></span><br><span class="line">        <span class="comment">// Object &gt; Person &gt; Student</span></span><br><span class="line">        <span class="comment">// X instanceof Y: XY存在父子关系，则编译通过</span></span><br><span class="line">        <span class="type">Object</span> <span class="variable">object</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Student</span>();</span><br><span class="line"></span><br><span class="line">        System.out.println(object <span class="keyword">instanceof</span> Student); <span class="comment">//true</span></span><br><span class="line">        System.out.println(object <span class="keyword">instanceof</span> Person); <span class="comment">//true</span></span><br><span class="line">        System.out.println(object <span class="keyword">instanceof</span> Object); <span class="comment">//true</span></span><br><span class="line">        System.out.println(object <span class="keyword">instanceof</span> Teacher); <span class="comment">//false</span></span><br><span class="line">        System.out.println(object <span class="keyword">instanceof</span> String); <span class="comment">//false</span></span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;====================================================&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="type">Person</span> <span class="variable">person</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Student</span>();</span><br><span class="line"></span><br><span class="line">        System.out.println(person <span class="keyword">instanceof</span> Student); <span class="comment">//true</span></span><br><span class="line">        System.out.println(person <span class="keyword">instanceof</span> Person); <span class="comment">//true</span></span><br><span class="line">        System.out.println(person <span class="keyword">instanceof</span> Object); <span class="comment">//true</span></span><br><span class="line">        System.out.println(person <span class="keyword">instanceof</span> Teacher); <span class="comment">//false</span></span><br><span class="line">        <span class="comment">//System.out.println(person instanceof String); 编译报错</span></span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;====================================================&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="type">Student</span> <span class="variable">student</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Student</span>();</span><br><span class="line"></span><br><span class="line">        System.out.println(student <span class="keyword">instanceof</span> Student); <span class="comment">//true</span></span><br><span class="line">        System.out.println(student <span class="keyword">instanceof</span> Person); <span class="comment">//true</span></span><br><span class="line">        System.out.println(student <span class="keyword">instanceof</span> Object); <span class="comment">//true</span></span><br><span class="line">        <span class="comment">//System.out.println(student instanceof Teacher); 编译报错</span></span><br><span class="line">        <span class="comment">//System.out.println(student instanceof String); 编译报错</span></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="类型转换"><a href="#类型转换" class="headerlink" title="类型转换"></a>类型转换</h3><ol><li>父类引用子类的对象</li><li>子类转父类，向上转型</li><li>父类转子类，向下转型，强制转换</li><li>方便方法调用，减少重复代码</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> oop;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> oop.demo06.Person;</span><br><span class="line"><span class="keyword">import</span> oop.demo06.Student;</span><br><span class="line"><span class="keyword">import</span> oop.demo06.Teacher;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Application</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//类型转换</span></span><br><span class="line">        <span class="comment">//高                  低</span></span><br><span class="line">        <span class="type">Person</span> <span class="variable">student</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Student</span>();</span><br><span class="line"></span><br><span class="line">        ((Student)student).run();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//子类转换为父类，可能会丢失方法</span></span><br><span class="line">        <span class="type">Student</span> <span class="variable">student1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Student</span>();</span><br><span class="line">        student1.run();</span><br><span class="line">        <span class="type">Person</span> <span class="variable">person</span> <span class="operator">=</span> student1;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 开发 </category>
          
          <category> 后端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>面向对象 (Java)</title>
      <link href="/2025/02/05/2025-2-5-%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1-Java/"/>
      <url>/2025/02/05/2025-2-5-%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1-Java/</url>
      
        <content type="html"><![CDATA[<h1 id="面向对象"><a href="#面向对象" class="headerlink" title="面向对象"></a>面向对象</h1><h2 id="面向过程-面向对象"><a href="#面向过程-面向对象" class="headerlink" title="面向过程 &amp; 面向对象"></a>面向过程 &amp; 面向对象</h2><h3 id="面向过程"><a href="#面向过程" class="headerlink" title="面向过程"></a>面向过程</h3><ul><li>步骤清晰简单，第一步做什么，第二步做什么…</li><li>适合处理较简单的问题</li></ul><h3 id="面向对象-1"><a href="#面向对象-1" class="headerlink" title="面向对象"></a>面向对象</h3><ul><li><strong>分类</strong>的思维模式，先解决问题需要哪些分类，然后对分类进行单独思考。最后对某个分类下的细节进行面向过程的思索</li><li>适合处理复杂的问题，需要多人协作的问题</li></ul><ol><li>对于复杂的事物，为了从宏观上、整体上分析，需要使用面向对象</li><li>具体到微观操作，仍需要面向过程</li></ol><h2 id="什么是面向对象"><a href="#什么是面向对象" class="headerlink" title="什么是面向对象"></a>什么是面向对象</h2><ul><li><p>面向对象编程（Object-Orien Programming，OOP）</p></li><li><p>本质：<strong>以类的方式组织代码，以对象的方式封装数据</strong></p></li><li><p><strong>抽象思维</strong></p></li><li><p>三大特性：</p><p><strong>封装</strong></p><p><strong>继承</strong></p><p><strong>多态</strong></p></li><li><p>从认识的角度：现有对象后有类。对象，是具体的事物。类，是抽象的，是对象的抽象</p></li><li><p>从代码运行的角度：先有类后有对象。类，是对象的模板</p></li></ul><h2 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h2><p>方法的定义：</p><ul><li>修饰符</li><li>返回类型</li><li>break 和 return 的区别</li><li>方法名：驼峰命名</li><li>参数列表：（参数列表，参数名）</li><li>异常抛出</li></ul><p>方法的调用：</p><ul><li>静态方法</li><li>非静态方法</li><li>形参和实参</li><li>值传递（Java）和引用传递</li><li>this关键字</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> oop;</span><br><span class="line"><span class="comment">//值传递</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Demo02</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">a</span> <span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line">        System.out.println(a); <span class="comment">// 1</span></span><br><span class="line"></span><br><span class="line">        Demo02.change(a);</span><br><span class="line">        System.out.println(a); <span class="comment">// 1</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//返回值为空</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">change</span><span class="params">(<span class="type">int</span> x)</span> &#123;</span><br><span class="line">        x = <span class="number">10</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> oop;</span><br><span class="line"><span class="comment">//引用传递：对象，本质还是值传递</span></span><br><span class="line"><span class="comment">//对象，内存</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Demo03</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Person</span> <span class="variable">man</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Person</span>();</span><br><span class="line">        System.out.println(man.name); <span class="comment">// null</span></span><br><span class="line"></span><br><span class="line">        Demo03.change(man);</span><br><span class="line">        System.out.println(man.name); <span class="comment">// Xiao Jinghuai</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">change</span><span class="params">(Person human)</span> &#123;</span><br><span class="line">        <span class="comment">// human是一个对象：指向-&gt;Person human = new Person()。这是一个具体的人，可以改变属性</span></span><br><span class="line">        human.name = <span class="string">&quot;Xiao Jinghuai&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//定义一个Person类，有一个属性：name</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Person</span> &#123;</span><br><span class="line">    String name; <span class="comment">//null</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="创建于初始化对象"><a href="#创建于初始化对象" class="headerlink" title="创建于初始化对象"></a>创建于初始化对象</h2><ul><li><strong>使用new关键字创建对象</strong></li><li>使用new关键字创建的时候，除了分配内存空间之外，还会 创建好的对象进行<strong>默认的初始化</strong>以及对类中<strong>构造器的调用</strong></li><li>类中的构造器也成为构造方法，是在进行创建对象的时候必须要调用的。并且构造器有以下两点：<ol><li>必须和类的名字相同</li><li>必须没有返回类型，也不能写void</li></ol></li></ul><p>example:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> oop.demo02;</span><br><span class="line"><span class="comment">//学生类</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Student</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//属性：字段</span></span><br><span class="line">    String name;</span><br><span class="line">    <span class="type">int</span> age;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//方法</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">study</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="built_in">this</span>.name + <span class="string">&quot;is studying&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> oop.demo02;</span><br><span class="line"><span class="comment">// 一个项目应该只存在一个main方法</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Application</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//类：抽象的，实例化</span></span><br><span class="line">        <span class="comment">//类实例化后会返回一个自己的对象</span></span><br><span class="line">        <span class="comment">//student对象就是一个Student类的具体实例</span></span><br><span class="line">        <span class="type">Student</span> <span class="variable">student_1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Student</span>();</span><br><span class="line">        <span class="type">Student</span> <span class="variable">student_2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Student</span>();</span><br><span class="line"></span><br><span class="line">        student_1.name = <span class="string">&quot;Xiao Jinghuai&quot;</span>;</span><br><span class="line">        student_1.age = <span class="number">18</span>;</span><br><span class="line"></span><br><span class="line">        student_2.name = <span class="string">&quot;zerd1y&quot;</span>;</span><br><span class="line">        student_2.age = <span class="number">20</span>;</span><br><span class="line"></span><br><span class="line">        System.out.println(student_1.name);</span><br><span class="line">        System.out.println(student_2.name);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="构造器"><a href="#构造器" class="headerlink" title="构造器"></a>构造器</h2><h3 id="构造器-1"><a href="#构造器-1" class="headerlink" title="构造器"></a>构造器</h3><ol><li>和类名相同</li><li>没有返回值</li></ol><h3 id="作用"><a href="#作用" class="headerlink" title="作用"></a>作用</h3><ol><li>new本质在调用构造器</li><li>初始化对象的值</li></ol><h3 id="注意点"><a href="#注意点" class="headerlink" title="注意点"></a>注意点</h3><ol><li>定义有参构造后，如果想使用无参构造，显示的定义一个无参构造</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> oop.demo02;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Person</span> &#123;</span><br><span class="line">    <span class="comment">// 一个类即使什么都不写，也会存在一个方法</span></span><br><span class="line">    <span class="comment">// 显示的定义构造器</span></span><br><span class="line">    String name;</span><br><span class="line">    <span class="type">int</span> age;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Person</span><span class="params">()</span> &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Person</span><span class="params">(String name)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Person</span><span class="params">(String name, <span class="type">int</span> age)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">        <span class="built_in">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> oop.demo02;</span><br><span class="line"><span class="comment">// 一个项目应该只存在一个main方法</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Application</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        </span><br><span class="line">        <span class="type">Person</span> <span class="variable">person</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Person</span>();</span><br><span class="line">        System.out.println(person.name);</span><br><span class="line">        </span><br><span class="line">        <span class="type">Person</span> <span class="variable">person1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Person</span>(<span class="string">&quot;Jinghuai Xiao&quot;</span>);</span><br><span class="line">        System.out.println(person1.name);</span><br><span class="line">        </span><br><span class="line">        <span class="type">Person</span> <span class="variable">person2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Person</span>(<span class="string">&quot;zerd1y&quot;</span>, <span class="number">18</span>);</span><br><span class="line">        System.out.println(person2.name);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="创建对象内存分析"><a href="#创建对象内存分析" class="headerlink" title="创建对象内存分析"></a>创建对象内存分析</h3><p><img src="/../img/screenshot/memory_analyse.png" alt="内存分析"></p>]]></content>
      
      
      <categories>
          
          <category> 开发 </category>
          
          <category> 后端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数组 (Java)</title>
      <link href="/2025/02/03/2025-2-3-%E6%95%B0%E7%BB%84-Java/"/>
      <url>/2025/02/03/2025-2-3-%E6%95%B0%E7%BB%84-Java/</url>
      
        <content type="html"><![CDATA[<h1 id="数组"><a href="#数组" class="headerlink" title="数组"></a>数组</h1><h2 id="数组声明"><a href="#数组声明" class="headerlink" title="数组声明"></a>数组声明</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">dataType[] arrayRefVar;  <span class="comment">//首选</span></span><br><span class="line"></span><br><span class="line">dataType arrayRefVar[];</span><br></pre></td></tr></table></figure><h2 id="数组创建"><a href="#数组创建" class="headerlink" title="数组创建"></a>数组创建</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dataType[] arrayRefVar = <span class="keyword">new</span> <span class="title class_">dataType</span>[arraySize];</span><br></pre></td></tr></table></figure><ul><li><p>获取数组长度</p><p><code>arrays.length</code></p></li><li><p>example:</p></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> array;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Demo01</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">int</span>[] numbers;</span><br><span class="line"></span><br><span class="line">        numbers = <span class="keyword">new</span> <span class="title class_">int</span>[<span class="number">10</span>];</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; <span class="number">10</span>; i++) &#123;</span><br><span class="line">            numbers[i] = i;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="数组初始化"><a href="#数组初始化" class="headerlink" title="数组初始化"></a>数组初始化</h2><h3 id="内存分析"><a href="#内存分析" class="headerlink" title="内存分析"></a>内存分析</h3><p><img src="/../img/screenshot/java_memory1.png" alt="内存"></p><p><img src="/../img/screenshot/java_memory2.png" alt="Java内存"></p><h3 id="三种初始化"><a href="#三种初始化" class="headerlink" title="三种初始化"></a>三种初始化</h3><ol><li><p>静态初始化</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span>[] arrays = &#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>&#125;;</span><br><span class="line">Man[] mans = &#123;<span class="keyword">new</span> <span class="title class_">Man</span>(<span class="number">1</span>, <span class="number">1</span>), <span class="keyword">new</span> <span class="title class_">Man</span>(<span class="number">2</span>, <span class="number">2</span>)&#125;;</span><br></pre></td></tr></table></figure></li><li><p>动态初始化</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span>[] arrays = <span class="keyword">new</span> <span class="title class_">int</span>[<span class="number">2</span>];</span><br><span class="line">a[<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line">a[<span class="number">1</span>] = <span class="number">2</span>;</span><br></pre></td></tr></table></figure></li><li><p>数组的默认初始化</p><p>默认值为0</p></li></ol><ul><li><p>越界报错：</p><p><code>ArrayIndexOutofBounds</code></p></li><li><p>for-each循环：</p><p>输入<code>arrays.for</code>输出</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="type">int</span> array : arrays) &#123;</span><br><span class="line">            </span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure></li></ul><h2 id="多维数组"><a href="#多维数组" class="headerlink" title="多维数组"></a>多维数组</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> array;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Demo02</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">int</span>[][] array = &#123;&#123;<span class="number">1</span>, <span class="number">2</span>&#125;, &#123;<span class="number">3</span>, <span class="number">4</span>&#125;, &#123;<span class="number">5</span>, <span class="number">6</span>&#125;&#125;;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span>[] rows : array) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> number : rows) &#123;</span><br><span class="line">                System.out.println(number);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Arrays类"><a href="#Arrays类" class="headerlink" title="Arrays类"></a>Arrays类</h2><ul><li>工具类：java.util.Arrays</li><li>查看JDK帮助文档</li></ul><p>example：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> array;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Demo03</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">int</span>[] a = &#123;<span class="number">6</span>, <span class="number">5</span>, <span class="number">4</span>, <span class="number">3</span>, <span class="number">2</span>, <span class="number">1</span>&#125;;</span><br><span class="line"></span><br><span class="line">        System.out.println(a);</span><br><span class="line">        System.out.println(Arrays.toString(a));</span><br><span class="line">        Arrays.sort(a);</span><br><span class="line">        System.out.println(Arrays.toString(a));</span><br><span class="line">        Arrays.fill(a, <span class="number">2</span>, <span class="number">4</span>, <span class="number">0</span>);</span><br><span class="line">        System.out.println(Arrays.toString(a));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="冒泡排序"><a href="#冒泡排序" class="headerlink" title="冒泡排序"></a>冒泡排序</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> array;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Demo04</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">int</span>[] a = &#123;<span class="number">1</span>, <span class="number">3</span>, <span class="number">5</span>, <span class="number">7</span>, <span class="number">9</span>, <span class="number">2</span>, <span class="number">4</span>, <span class="number">6</span>, <span class="number">8</span>, <span class="number">10</span>&#125;;</span><br><span class="line">        <span class="type">int</span>[] sort_a = sort(a);</span><br><span class="line">        System.out.println(Arrays.toString(sort_a));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span>[] sort(<span class="type">int</span>[] array) &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">tmp</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; array.length - <span class="number">1</span>; i++) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">0</span>; j &lt; array.length - <span class="number">1</span> - i; j++) &#123;</span><br><span class="line">                <span class="keyword">if</span> (array[j + <span class="number">1</span>] &lt; array[j]) &#123;</span><br><span class="line">                    tmp = array[j];</span><br><span class="line">                    array[j] = array[j + <span class="number">1</span>];</span><br><span class="line">                    array[j + <span class="number">1</span>] = tmp;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> array;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="稀疏数组"><a href="#稀疏数组" class="headerlink" title="稀疏数组"></a>稀疏数组</h2><p>当一个数组中大部分元素为0，或为同一值的时候，可用稀疏数组保存该数组。</p><p>处理方式：</p><ul><li>记录数组有几行几列，有多少不同值</li><li>把有不同值元素的行列及值记录在一个小规模的数组中，缩小数组规模</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> array;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Demo05</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">int</span>[][] array1 = <span class="keyword">new</span> <span class="title class_">int</span>[<span class="number">11</span>][<span class="number">11</span>];</span><br><span class="line">        array1[<span class="number">1</span>][<span class="number">2</span>] = <span class="number">1</span>;</span><br><span class="line">        array1[<span class="number">2</span>][<span class="number">3</span>] = <span class="number">2</span>;</span><br><span class="line">        System.out.println(<span class="string">&quot;Original Array&quot;</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span>[] ints : array1) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> anInt : ints) &#123;</span><br><span class="line">                System.out.print(anInt + <span class="string">&quot;\t&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> <span class="variable">sum</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span>[] ints : array1) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> anInt : ints) &#123;</span><br><span class="line">                <span class="keyword">if</span> (anInt != <span class="number">0</span>) &#123;</span><br><span class="line">                    sum++;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">&quot;Value: &quot;</span> + sum);</span><br><span class="line"></span><br><span class="line">        <span class="type">int</span>[][] array2 = <span class="keyword">new</span> <span class="title class_">int</span>[sum + <span class="number">1</span>][<span class="number">3</span>];</span><br><span class="line">        array2[<span class="number">0</span>][<span class="number">0</span>] = <span class="number">11</span>;</span><br><span class="line">        array2[<span class="number">0</span>][<span class="number">1</span>] = <span class="number">11</span>;</span><br><span class="line">        array2[<span class="number">0</span>][<span class="number">2</span>] = sum;</span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> <span class="variable">cnt</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; array1.length; i++) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">0</span>; j &lt; array1[i].length; j++) &#123;</span><br><span class="line">                <span class="keyword">if</span> (array1[i][j] != <span class="number">0</span>) &#123;</span><br><span class="line">                    cnt++;</span><br><span class="line">                    array2[cnt][<span class="number">0</span>] = i;</span><br><span class="line">                    array2[cnt][<span class="number">1</span>] = j;</span><br><span class="line">                    array2[cnt][<span class="number">2</span>] = array1[i][j];</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;Sparse array&quot;</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; array2.length; i++) &#123;</span><br><span class="line">            System.out.println(</span><br><span class="line">                    array2[i][<span class="number">0</span>] + <span class="string">&quot;\t&quot;</span></span><br><span class="line">                    + array2[i][<span class="number">1</span>] + <span class="string">&quot;\t&quot;</span></span><br><span class="line">                    + array2[i][<span class="number">2</span>] + <span class="string">&quot;\t&quot;</span></span><br><span class="line">            );</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;Restore&quot;</span>);</span><br><span class="line">        <span class="type">int</span>[][] array3 = <span class="keyword">new</span> <span class="title class_">int</span> [array2[<span class="number">0</span>][<span class="number">0</span>]][array2[<span class="number">0</span>][<span class="number">1</span>]];</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>; i &lt; array2.length; i++) &#123;</span><br><span class="line">            array3[array2[i][<span class="number">0</span>]][array2[i][<span class="number">1</span>]] = array2[i][<span class="number">2</span>];</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;Output&quot;</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span>[] ints : array3) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> anInt : ints) &#123;</span><br><span class="line">                System.out.print(anInt + <span class="string">&quot;\t&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 开发 </category>
          
          <category> 后端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>可变参数 (Java)</title>
      <link href="/2025/02/02/2025-2-2-%E5%8F%AF%E5%8F%98%E5%8F%82%E6%95%B0-Java/"/>
      <url>/2025/02/02/2025-2-2-%E5%8F%AF%E5%8F%98%E5%8F%82%E6%95%B0-Java/</url>
      
        <content type="html"><![CDATA[<h1 id="可变参数（Java）"><a href="#可变参数（Java）" class="headerlink" title="可变参数（Java）"></a>可变参数（Java）</h1><ul><li>方法声名中，在指定参数类型后加一个省略号（…）</li><li><strong>一个方法中只能指定一个可变参数，且必须时方法的最后一个参数</strong>。任何普通参数必须在它之前声名。</li></ul><p>example:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> method;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Demo02</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        printMax(<span class="number">11</span>, <span class="number">22</span>, <span class="number">33</span>, <span class="number">44</span>, <span class="number">55</span>, <span class="number">66</span>);</span><br><span class="line">        printMax(<span class="keyword">new</span> <span class="title class_">double</span>[] &#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>&#125;);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">printMax</span><span class="params">(<span class="type">double</span>... numbers)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (numbers.length == <span class="number">0</span>) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;No argument passed&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="type">double</span> <span class="variable">result</span> <span class="operator">=</span> numbers[<span class="number">0</span>];</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>; i &lt; numbers.length; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (numbers[i] &gt; result) &#123;</span><br><span class="line">                result = numbers[i];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">&quot;The max value is &quot;</span> + result);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="命令行传参"><a href="#命令行传参" class="headerlink" title="命令行传参"></a>命令行传参</h2><p>code example：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> method;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Demo03</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; args.length; i++) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;args[&quot;</span> + i + <span class="string">&quot;]: &quot;</span> + args[i]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="编译代码"><a href="#编译代码" class="headerlink" title="编译代码"></a>编译代码</h4><ol><li>代码文件所在位置代开命令行：</li></ol><p><img src="/../img/screenshot/terminal_pass_args.png" alt="打开文件"></p><ol start="2"><li>上方文件路径输入cmd：</li></ol><p><img src="/../img/screenshot/open_terminal.png" alt="打开命令行"></p><ol start="3"><li><p>输入</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">javac Demo03.java</span><br></pre></td></tr></table></figure><p>编译文件，生成Demo03.class文件</p></li></ol><h4 id="命令行传参，运行文件"><a href="#命令行传参，运行文件" class="headerlink" title="命令行传参，运行文件"></a>命令行传参，运行文件</h4><p>输入：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java Demo03.java +参数</span><br></pre></td></tr></table></figure><p><img src="/../img/screenshot/terminal_pass_args_demo.png" alt="运行"></p>]]></content>
      
      
      <categories>
          
          <category> 开发 </category>
          
          <category> 后端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>方法 (Java)</title>
      <link href="/2025/01/31/2025-1-31-%E6%96%B9%E6%B3%95-Java/"/>
      <url>/2025/01/31/2025-1-31-%E6%96%B9%E6%B3%95-Java/</url>
      
        <content type="html"><![CDATA[<h1 id="方法-Java"><a href="#方法-Java" class="headerlink" title="方法 (Java)"></a>方法 (Java)</h1><p>什么是方法：</p><ul><li>语句的集合，它们在一起执行一个功能</li><li>包含于类或对象中</li><li>在程序中创建，在其他地方被引用</li></ul><p>设计方法的原则：<strong>原子性</strong>：</p><ul><li><strong>一个方法只完成1个功能，利于后期扩展</strong></li></ul><p>命名原则：驼峰原则</p><ul><li>例子：System.out.printIn()</li></ul><h2 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h2><p>类似于C语言中的函数，<strong>用来完成特定功能的代码片段</strong></p><p><strong>方法包含一个方法头和一个方法体</strong>，下面是一个方法的所有部分：</p><ul><li>**修饰符：**修饰符，这是可选的，告诉编译器如何调用该方法。定义了该方法的访问类型。</li><li><strong>返回值类型 ：<strong>方法可能会返回值。returnValueType 是方法返回值的数据类型。有些方法执行所需的操作，但没有返回值。在这种情况下，returnValueType 是关键字</strong>void</strong>。</li><li>**方法名：**是方法的实际名称。方法名和参数表共同构成方法签名。</li><li>**参数类型：**参数像是一个占位符。当方法被调用时，传递值给参数。这个值被称为实参或变量。参数列表是指方法的参数类型、顺序和参数的个数。参数是可选的，方法可以不包含任何参数。</li><li>**方法体：**方法体包含具体的语句，定义该方法的功能。</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">修饰符 返回值类型 方法名(参数类型 参数名)&#123;</span><br><span class="line">    ...</span><br><span class="line">    方法体</span><br><span class="line">    ...</span><br><span class="line">    <span class="keyword">return</span> </span><br></pre></td></tr></table></figure><p>example：</p><p><img src="/../img/screenshot/method_java.png" alt="方法"></p><h2 id="调用"><a href="#调用" class="headerlink" title="调用"></a>调用</h2><ul><li><p>调用方法：对象名.方法名（实参列表）</p></li><li><p>两种调用方式：</p><ol><li><p>方法返回一个值：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="variable">larger</span> <span class="operator">=</span> max(<span class="number">30</span>, <span class="number">40</span>);</span><br></pre></td></tr></table></figure></li><li><p>方法返回void，用一条语句调用：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">System.out.println(<span class="string">&quot;Hello, zerd1y&quot;</span>);</span><br></pre></td></tr></table></figure></li></ol></li><li><p>注：值传递（Java）和引用传递</p></li></ul><h2 id="重载"><a href="#重载" class="headerlink" title="重载"></a>重载</h2><p>重载就是在一个类中，有相同的函数名称，但形参不同的函数。</p><p>规则：</p><ul><li><strong>方法名称相同</strong></li><li><strong>参数列表不同（个数不同，类型不同，参数排列顺序不同）</strong></li><li>返回类型可相同可不同</li><li>仅仅返回类型不同不足以成为方法的重载</li></ul><p>实现理论：</p><p>方法名称相同时，编译器会根据方法的参数个数、参数类型等去逐个匹配，以选择对应的方法，如果匹配失败，则编译器报错</p>]]></content>
      
      
      <categories>
          
          <category> 开发 </category>
          
          <category> 后端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux-ubuntu安装</title>
      <link href="/2025/01/30/2025-1-30-Linux-ubuntu%E5%AE%89%E8%A3%85/"/>
      <url>/2025/01/30/2025-1-30-Linux-ubuntu%E5%AE%89%E8%A3%85/</url>
      
        <content type="html"><![CDATA[<h1 id="Linux-ubuntu安装"><a href="#Linux-ubuntu安装" class="headerlink" title="Linux-ubuntu安装"></a>Linux-ubuntu安装</h1><p>也是开启了我的 Windows-Linux双系统 哈哈哈</p><p>指导视频：</p><p>[指导视频](<a href="https://www.bilibili.com/video/BV1Cc41127B9?spm_id_from=333.788.videopod.episodes&vd_source=576643da9ada88d09d6bb8cd5b9f4066">Windows11 安装 Ubuntu 避坑指南_哔哩哔哩_bilibili</a>)</p><h2 id="心得"><a href="#心得" class="headerlink" title="心得"></a>心得</h2><ul><li><p>第一次装会很费力，遇到问题：</p><ol><li><p>b站找视频：（通用的安装教程、针对你笔记本品牌型号的操作视频  都要看看）</p></li><li><p>b站视频下方的评论区：说不定有大神是你的笔记本型号的，会在评论区发布一些针对你笔记本的tips</p><p>（上方指导视频下方有个用华硕的大神评论帮助了我很多嘻嘻）</p></li><li><p>CSDN搜一搜（不喜欢掘金，不想用StackOverflow哈哈哈）</p></li><li><p>问chatgpt&#x2F;claude&#x2F;deepseek&#x2F;通义千问&#x2F;豆包&#x2F;kimi</p></li></ol></li><li><p>为什么要装Linux：</p><p>下面会提到哦！</p><p>不过计算机专业的学生迟早都要接触Linux的啦，无论是做开发还是算法，Linux在开源和性能方面一直很强</p></li><li><p>真的不行就去电脑市场装吧，电脑变砖我可不负责</p></li><li><p>一些特定的步骤我会用 ‘* ’标注：</p><ol><li>这些步骤可能是安装过程试错出来的</li><li>针对华硕天选5pro</li></ol></li></ul><h2 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h2><ol><li><p>笔记本 ：</p><ul><li>我用的是华硕天选5pro（Windows11）</li></ul></li><li><p>U盘：</p><ul><li><p>牌子：金士顿或者闪迪（牌子太烂可能在写入文件&#x2F;格式化的时候U盘直接报废）</p></li><li><p>大于8GB</p></li><li><p>我用的64GB，因为之后可能还会往U盘里装文件</p></li></ul></li></ol><h2 id="小提示"><a href="#小提示" class="headerlink" title="*小提示"></a>*小提示</h2><ol><li><p>Windows机安装Linux有两种方法：</p><ul><li>虚拟机安装</li><li>双系统安装（需要额外准备U盘启动）</li></ul></li><li><p>虚拟机安装：</p><ul><li>优点：简单（额其实装Linux系统都挺麻烦的，坑还多，虚拟机会相对简单些）</li><li>缺点：<ol><li>占用大量内存和CPU（其实2种方法都会占用挺多）</li><li><strong>对外部硬件支持不够好</strong>：如果你想跑深度学习，使用传感器，虚拟机无法充分发挥计算机的性能，效率相对较低</li></ol></li></ul></li><li><p>双系统安装：</p><ul><li>优点：性能相对好</li><li>缺点：<ol><li>操作相对麻烦</li><li>一台电脑同一个时间只能使用一个操作系统，Linux和Windows切换需要重启</li></ol></li></ul></li><li><p>我采用的使双系统安装，一方面使之后做项目导师会让我跑深度学习相关的，另一方面是目前我正在学习《视觉SLAM十四将》，书中比较推荐双系统</p></li></ol><h2 id="下载Ubuntu安装映像文件"><a href="#下载Ubuntu安装映像文件" class="headerlink" title="下载Ubuntu安装映像文件"></a>下载Ubuntu安装映像文件</h2><ol><li><p>直接搜索Ubuntu即可</p></li><li><p>或者点链接：[下载链接](<a href="https://cn.ubuntu.com/download/desktop">下载Ubuntu桌面系统 | Ubuntu</a>)</p></li></ol><p><strong>注意：</strong></p><ul><li>Ubuntu会一直更新，下载LTS版本即可</li><li>文件比较大，几个GB，如果下载速度慢请使用代理（魔法）</li></ul><h2 id="制作Ubuntu安装盘"><a href="#制作Ubuntu安装盘" class="headerlink" title="制作Ubuntu安装盘"></a>制作Ubuntu安装盘</h2><p>参考视频：(Bilibili)</p><p><a href="%5Bwin11%E4%B8%8B%E7%94%A8rufus%E5%AE%89%E8%A3%85Ubuntu%E5%8F%8C%E7%B3%BB%E7%BB%9F_%E5%93%94%E5%93%A9%E5%93%94%E5%93%A9_bilibili%5D(https://www.bilibili.com/video/BV1BP411577g/?spm_id_from=333.1391.0.0&vd_source=576643da9ada88d09d6bb8cd5b9f4066)">链接1</a></p><p>[链接2](<a href="https://www.bilibili.com/video/BV1wo4y177Gk?spm_id_from=333.788.videopod.sections&vd_source=576643da9ada88d09d6bb8cd5b9f4066">手把手教你安装双系统 windows11+ubuntu 22.04(1)_哔哩哔哩_bilibili</a>)</p><h3 id="下载Rufus"><a href="#下载Rufus" class="headerlink" title="*下载Rufus"></a>*下载Rufus</h3><p><em><strong>建议用Rufus写入文件，我之前用了win32diskimager写不进去</strong></em></p><p>直接搜索“rufus下载”：[链接](<a href="https://rufus.ie/zh/">Rufus - 轻松创建 USB 启动盘</a>)</p><h3 id="写入文件"><a href="#写入文件" class="headerlink" title="写入文件"></a>写入文件</h3><p><img src="/../img/screenshot/rufus.png" alt="Rufus写入"></p><ul><li>设备：U盘名称（或者其他的，总之不是你电脑上的CD什么盘）</li><li>引导类型选择：刚刚下载的Ubuntu映像文件</li><li>分区类型：GPT</li><li>文件系统：NTFS</li></ul><h2 id="关闭BitLocker"><a href="#关闭BitLocker" class="headerlink" title="关闭BitLocker"></a>关闭BitLocker</h2><p><em><strong>最怕的事情莫过于在操作时突然跳出BitLocker让你输入一串你不知道的密码</strong></em></p><p>BitLocker原本是用于电脑丢失时防止他人强行入侵系统窃取信息</p><p>但是如果你不自己查阅Microsoft官网给你的BitLocker并记住，BitLocker相当于是阻止你装Linux</p><p><em><strong>如果你不考虑丢电脑的事情，建议拿到电脑就关闭BitLocker，因为随着电脑文件越来越多，BitLocker解密的时间会越来越长</strong></em></p><h2 id="关闭独显直连"><a href="#关闭独显直连" class="headerlink" title="关闭独显直连"></a>关闭独显直连</h2><p>我没有进行这一步操作，没有出现什么问题。</p><p>这步操作属于小部分笔记本电脑的“坑”，如果在后面的操作出现问题，那可能是这里出现了问题</p><h2 id="压缩Windows分区"><a href="#压缩Windows分区" class="headerlink" title="压缩Windows分区"></a>压缩Windows分区</h2><p>我从D盘压缩了200GB</p><h2 id="开启安全引导（天选5pro）"><a href="#开启安全引导（天选5pro）" class="headerlink" title="*开启安全引导（天选5pro）"></a>*开启安全引导（天选5pro）</h2><ul><li><strong>不太确定其他电脑需不需这一步，天选5pro需要，否则之后的操作电脑可能会蓝屏</strong></li><li>操作链接<a href="https://blog.csdn.net/Kr_Krypton/article/details/135961324?fromshare=blogdetail&sharetype=blogdetail&sharerId=135961324&sharerefer=PC&sharesource=zerd1y&sharefrom=from_link">操作链接：第6、8步骤</a></li></ul><h2 id="关闭Secure-Boot安全启动"><a href="#关闭Secure-Boot安全启动" class="headerlink" title="*关闭Secure Boot安全启动"></a>*关闭Secure Boot安全启动</h2><ul><li><strong>很重要！不关闭的话就等着电脑蓝屏吧（因为我的电脑就蓝屏了呜呜）</strong></li><li>不同电脑BIOS操作不同，自己搜索对应视频一步一步来</li></ul><p>视频链接：[链接（天选5pro）](<a href="https://www.bilibili.com/video/BV1hR4y1p7tP/?spm_id_from=333.1391.0.0&vd_source=576643da9ada88d09d6bb8cd5b9f4066">华硕笔记本电脑开启&#x2F;关闭安全启动（Secure boot）方法；快速确认自己电脑TPM版本！_哔哩哔哩_bilibili</a>)</p><h3 id="华硕天选5pro操作"><a href="#华硕天选5pro操作" class="headerlink" title="华硕天选5pro操作"></a>华硕天选5pro操作</h3><ol><li>重启电脑，在快要跳出开机的logo时，疯狂按左上角ESC进入BIOS模式</li><li>进入 -高级设置-安全：<ul><li>你会发现很逆天的事情：安全启动开启，还没法关闭</li></ul></li><li>进入密钥管理（Key Management）：<ul><li>删除Platform Key（5pro是最上面的）</li><li>其他的也可以删除，反正我把第2个也删除了</li></ul></li><li>按F10保存并退出，重启时重复步骤1，发现安全启动关闭</li><li><em><strong>等到完全安装好后，可回到BIOS这里，把密钥回复出厂设置，这样删除的密钥就可以回来啦</strong></em></li><li><em><strong>完全安装好后，可以开启Secure Boot安全启动</strong></em></li></ol><h2 id="关闭Intel-RST（切换为AHCI）"><a href="#关闭Intel-RST（切换为AHCI）" class="headerlink" title="*关闭Intel RST（切换为AHCI）"></a>*关闭Intel RST（切换为AHCI）</h2><ul><li><strong>也很重要，否则Windows和Linux无法兼容</strong></li><li><em><strong>完全安装好后，也要保持关闭（切换为AHCI）！！！</strong></em></li><li>操作链接<a href="https://blog.csdn.net/Kr_Krypton/article/details/135961324?fromshare=blogdetail&sharetype=blogdetail&sharerId=135961324&sharerefer=PC&sharesource=zerd1y&sharefrom=from_link">操作链接：第6、8步骤</a></li></ul><h2 id="BIOS设置U盘引导"><a href="#BIOS设置U盘引导" class="headerlink" title="BIOS设置U盘引导"></a>BIOS设置U盘引导</h2><p>把U盘选项拖到Windows选项上面即可：</p><p><img src="/../img/screenshot/BIOS-U.png" alt="U盘引导"></p><h2 id="第一次启动U盘"><a href="#第一次启动U盘" class="headerlink" title="第一次启动U盘"></a>第一次启动U盘</h2><p>前面设置好后，按F10重启电脑</p><ul><li>无法重启 &#x2F; 卡住了，长按电源键强制重启</li><li>在logo页面一直跳动，拔掉U盘等待 &#x2F; 强制重启</li></ul><h2 id="安装Ubuntu"><a href="#安装Ubuntu" class="headerlink" title="安装Ubuntu"></a>安装Ubuntu</h2><p>参考视频操作即可：<a href="%5B%E5%AE%89%E8%A3%85Ubuntu%E7%9A%84%E8%BF%87%E7%A8%8B%E6%AD%A5%E9%AA%A4_%E5%93%94%E5%93%A9%E5%93%94%E5%93%A9_bilibili%5D(https://www.bilibili.com/video/BV1Cc41127B9?spm_id_from=333.788.videopod.episodes&vd_source=576643da9ada88d09d6bb8cd5b9f4066&p=13)">安装Ubuntu</a></p><ul><li><p>不联网实测会快一些</p></li><li><p>这个视频的操作算比较简单的了，也没有什么坑，如果碰到坑的话大概率是前面某个步骤在你的笔记本上没设置好。</p></li></ul><h2 id="连接Wi-Fi，更换国内镜像源"><a href="#连接Wi-Fi，更换国内镜像源" class="headerlink" title="连接Wi-Fi，更换国内镜像源"></a>连接Wi-Fi，更换国内镜像源</h2><ul><li>按照上面视频做就好</li><li>个人感觉设置后速度还是很慢，我挂代理了（还得是魔法）</li></ul><h2 id="系统时间同步"><a href="#系统时间同步" class="headerlink" title="系统时间同步"></a>系统时间同步</h2><p><strong>安装双系统后你会发现切换系统后，显示时间会不准确（比如慢8h）</strong></p><p>操作指南：[视频连接](<a href="https://www.bilibili.com/video/BV1kk4y1j7kY/?spm_id_from=333.1391.0.0&vd_source=576643da9ada88d09d6bb8cd5b9f4066">Linux WIndows双系统时间问题_哔哩哔哩_bilibili</a>)</p><ul><li><p>主要就是一行代码：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> timedatectl set-local-rtc 1</span><br></pre></td></tr></table></figure><p>这行代码是把调整Ubuntu的时间调整正确，不改变Windows时间</p></li><li><p>如果切换回Windows发现时间不正确，进入Windows“日期和时间设置”-点击“立即同步”，</p><p>重新同步下Windows时间即可</p></li></ul><h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><h3 id="页面"><a href="#页面" class="headerlink" title="页面"></a>页面</h3><p>如果感觉ubuntu网页、软件界面太小（字体太小，行高太小）</p><p>用快捷键：</p><p><code>ctrl + =</code>：增大</p><p><code>ctrl + -</code>：减小</p><h3 id="科学上网"><a href="#科学上网" class="headerlink" title="科学上网"></a>科学上网</h3><ul><li>感觉不是clash的问题（clash verge必须下载linux版本debian系）</li><li>可能和机场的兼容性有关，狗狗机场的节点好像不太使用linux ubuntu</li></ul>]]></content>
      
      
      <categories>
          
          <category> 开发 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>hexo-butterfly 个人博客</title>
      <link href="/2025/01/29/2025-1-29-hexo-butterfly-%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"/>
      <url>/2025/01/29/2025-1-29-hexo-butterfly-%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/</url>
      
        <content type="html"><![CDATA[<h1 id="hexo-butterfly-个人博客"><a href="#hexo-butterfly-个人博客" class="headerlink" title="hexo-butterfly 个人博客"></a>hexo-butterfly 个人博客</h1><h2 id="小tips"><a href="#小tips" class="headerlink" title="小tips"></a>小tips</h2><ol><li><p>本地编辑完，本地部署3连：</p><ul><li>hexo clean</li><li>hexo generate</li><li>hexo server</li></ul></li><li><p>部署到vercel上自己的服务器：</p><p>先在个人blog文件夹用git bash打开</p><ul><li>hexo clean</li><li>hexo generate</li><li>hexo deploy</li></ul></li><li><p>background图片部署：</p><ul><li>用网页上的图片（不要用本地的相对地址，绝对地址）</li><li>直接在background后复制链接，不要在链接外面加url()</li></ul></li><li><p><code>hexo deploy</code>部署过程停滞不前</p><ul><li><p>可能是网络原因</p></li><li><p>现在我是用https来执行git操作，不用ssh执行了。在_config,yml中完成deploy配置修改</p></li><li><p>原来：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">  <span class="attr">repo:</span> <span class="string">git@github.com:zerd1y/zerd1y.github.io</span></span><br><span class="line">  <span class="attr">branch:</span> <span class="string">main</span></span><br></pre></td></tr></table></figure></li><li><p>现在：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">  <span class="attr">repository:</span> <span class="string">https://github.com/zerd1y/zerd1y.github.io</span></span><br><span class="line">  <span class="attr">branch:</span> <span class="string">main</span></span><br></pre></td></tr></table></figure></li></ul></li></ol>]]></content>
      
      
      <categories>
          
          <category> 开发 </category>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Blog </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>尺取法（双指针）</title>
      <link href="/2025/01/28/2025-1-29-%E5%B0%BA%E5%8F%96%E6%B3%95/"/>
      <url>/2025/01/28/2025-1-29-%E5%B0%BA%E5%8F%96%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<h1 id="尺取法（双指针）"><a href="#尺取法（双指针）" class="headerlink" title="尺取法（双指针）"></a>尺取法（双指针）</h1><h3 id="题目链接"><a href="#题目链接" class="headerlink" title="题目链接"></a>题目链接</h3><p><a href="%5B%E5%AD%97%E7%AC%A6%E4%B8%B2%5D(https://ac.nowcoder.com/acm/problem/18386)">题目链接</a></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line">string s;</span><br><span class="line"><span class="type">int</span> ch[<span class="number">26</span>], ans = <span class="number">1e8</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">f</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">26</span>; i++) &#123;</span><br><span class="line"><span class="keyword">if</span>(!ch[i]) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">cin &gt;&gt; s;</span><br><span class="line"><span class="type">int</span> len = s.<span class="built_in">length</span>();</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> l = <span class="number">0</span>, r = <span class="number">0</span>; r &lt; len; r++) &#123;</span><br><span class="line">ch[s[r] - <span class="string">&#x27;a&#x27;</span>]++;</span><br><span class="line"><span class="keyword">while</span> (<span class="built_in">f</span>()) &#123;</span><br><span class="line">ans = <span class="built_in">min</span>(ans, r - l + <span class="number">1</span>);</span><br><span class="line">ch[s[l] - <span class="string">&#x27;a&#x27;</span>]--;</span><br><span class="line">l++;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; ans &lt;&lt; endl;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><h3 id="尺取法的基本思想"><a href="#尺取法的基本思想" class="headerlink" title="尺取法的基本思想"></a>尺取法的基本思想</h3><ol><li><strong>初始化两个指针</strong>：通常是一个左指针（<code>left</code>）和一个右指针（<code>right</code>），初始时都指向数组的起始位置。</li><li><strong>移动右指针</strong>：扩展窗口，直到窗口内的元素满足某个条件。</li><li><strong>移动左指针</strong>：收缩窗口，直到窗口内的元素不再满足条件。</li><li><strong>重复上述步骤</strong>：直到右指针遍历完整个数组。</li></ol><h3 id="尺取法的适用场景"><a href="#尺取法的适用场景" class="headerlink" title="尺取法的适用场景"></a>尺取法的适用场景</h3><p>尺取法通常用于解决以下类型的问题：</p><ul><li>查找满足某种条件的最短或最长子数组。</li><li>计算满足某种条件的子数组的数量。</li><li>处理涉及连续子数组的问题。</li></ul><h2 id="Happy-New-Year！"><a href="#Happy-New-Year！" class="headerlink" title="Happy New Year！"></a>Happy New Year！</h2>]]></content>
      
      
      <categories>
          
          <category> 基础知识 </category>
          
          <category> 算法与数据结构 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 算法与数据结构 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>初识SLAM</title>
      <link href="/2025/01/27/2025-1-27-%E5%88%9D%E8%AF%86SLAM/"/>
      <url>/2025/01/27/2025-1-27-%E5%88%9D%E8%AF%86SLAM/</url>
      
        <content type="html"><![CDATA[<h1 id="初识SLAM"><a href="#初识SLAM" class="headerlink" title="初识SLAM"></a>初识SLAM</h1><p><img src="/../img/screenshot/slambook2_2-0.png" alt="初识SLAM"></p><h2 id="相机"><a href="#相机" class="headerlink" title="相机"></a>相机</h2><h3 id="单目相机"><a href="#单目相机" class="headerlink" title="单目相机"></a>单目相机</h3><ul><li><p>优点：结构简单，成本低</p></li><li><p>缺点：无法计算 深度 + 尺度</p><p>无法计算物体与相机间的距离，单目SLAM估计的轨迹和地图与真实值相差一个因子</p></li></ul><h3 id="双目相机"><a href="#双目相机" class="headerlink" title="双目相机"></a>双目相机</h3><ul><li>优点：克服深度问题（距离）</li><li>缺点：计算量大</li></ul><h3 id="深度相机（RGB-D相机）"><a href="#深度相机（RGB-D相机）" class="headerlink" title="深度相机（RGB-D相机）"></a>深度相机（RGB-D相机）</h3><ul><li>优点：节省计算资源（通过红外结构光&#x2F;Time-of-Flight（ToF））</li><li>缺点：测量范围窄，噪声大，视野小，易受日光干扰，无法测量透射材质</li></ul><h2 id="视觉SLAM的目标"><a href="#视觉SLAM的目标" class="headerlink" title="视觉SLAM的目标"></a>视觉SLAM的目标</h2><p><em><strong>通过一些图像，进行定位和地图构建</strong></em></p><h2 id="经典视觉SLAM框架"><a href="#经典视觉SLAM框架" class="headerlink" title="经典视觉SLAM框架"></a>经典视觉SLAM框架</h2><p><img src="/../img/screenshot/SLAM_framework.png" alt="经典视觉SLAM框架"></p><h3 id="视觉里程计（前端）"><a href="#视觉里程计（前端）" class="headerlink" title="视觉里程计（前端）"></a>视觉里程计（前端）</h3><ul><li>目的：通过相邻帧间的图像，估计相机运动，回复场景的空间结构</li><li>问题：出现累计漂移（每次估计有误差）</li><li>解决：后端优化，回环检测</li></ul><h3 id="后端优化"><a href="#后端优化" class="headerlink" title="后端优化"></a>后端优化</h3><ul><li><p>目的：处理SLAM过程中的噪声问题</p><p>①如何从带有噪声的数据中估计整个系统的状态</p><p>②这个状态估计的不确定性有多大（最大后验概率估计）</p></li><li><p>本质：对运动主体自身和周围环境空间不确定性的估计</p></li></ul><h3 id="回环检测"><a href="#回环检测" class="headerlink" title="回环检测"></a>回环检测</h3><ul><li>目的：解决位置估计随时间漂移的问题</li><li>方法：让机器人具有识别到过的场景的能力（判断图像相似性），然后修正</li></ul><h3 id="建图"><a href="#建图" class="headerlink" title="建图"></a>建图</h3><h4 id="度量地图"><a href="#度量地图" class="headerlink" title="度量地图"></a>度量地图</h4><ul><li>特点：精确地表示地图中物体地的位置关系</li><li>缺点：耗费大量存储空间，许多细节无用，一致性问题</li></ul><h4 id="拓扑地图"><a href="#拓扑地图" class="headerlink" title="拓扑地图"></a>拓扑地图</h4><ul><li>特点：强调地图元素之间的关系</li><li>缺点：不擅长表达具有复杂结构的地图</li></ul><h2 id="SLAM问题的数学描述"><a href="#SLAM问题的数学描述" class="headerlink" title="SLAM问题的数学描述"></a>SLAM问题的数学描述</h2><p><img src="/../img/screenshot/SLAM_math_description.png" alt="SLAM问题的数学描述"></p><h3 id="状态估计问题（转化）"><a href="#状态估计问题（转化）" class="headerlink" title="状态估计问题（转化）"></a>状态估计问题（转化）</h3><h4 id="噪声"><a href="#噪声" class="headerlink" title="噪声"></a>噪声</h4><ul><li>线性&#x2F;非线性系统</li><li>高斯&#x2F;非高斯系统</li></ul><h4 id="主流优化技术（优化技术明显优于滤波技术）"><a href="#主流优化技术（优化技术明显优于滤波技术）" class="headerlink" title="主流优化技术（优化技术明显优于滤波技术）"></a>主流优化技术（优化技术明显优于滤波技术）</h4><ul><li>图优化</li></ul>]]></content>
      
      
      <categories>
          
          <category> AI </category>
          
          <category> 计算机视觉 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 计算机视觉 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>初认识Java</title>
      <link href="/2025/01/24/2025-1-24-%E5%88%9D%E8%AF%86Java/"/>
      <url>/2025/01/24/2025-1-24-%E5%88%9D%E8%AF%86Java/</url>
      
        <content type="html"><![CDATA[<h1 id="初识Java"><a href="#初识Java" class="headerlink" title="初识Java"></a>初识Java</h1><p><em>语言只是实现目标的工具，而不是目标本身。</em>——Gosling</p><p><em>程序设计语言的成功更多地取决于其支持系统（support system）的能力，而不是语法的精巧性。</em></p><h2 id="Java"><a href="#Java" class="headerlink" title="Java"></a>Java</h2><ul><li>优点：<ol><li>功能齐全</li><li>有一个高质量的执行环境</li><li>有一个庞大的库</li></ol></li><li>缺点：由于兼容性需求，新增的一些特性就没有原有的特性那么精巧</li></ul><h2 id="Java特性"><a href="#Java特性" class="headerlink" title="Java特性"></a>Java特性</h2><h3 id="简单性"><a href="#简单性" class="headerlink" title="简单性"></a>简单性</h3><p>Java语法是C++语法的一个“纯净”版本</p><h3 id="面向对象"><a href="#面向对象" class="headerlink" title="面向对象"></a>面向对象</h3><p>Java面向对象特性与C++旗鼓相当，不同点在于多重继承，有更简单的接口概念，提供了更丰富的运行时自省功能。</p><h3 id="分布式"><a href="#分布式" class="headerlink" title="分布式"></a>分布式</h3><p>Java有一个丰富的例程库，用于处理HTTP和FTP之类的TCP&#x2F;IP协议。Java应用程序可通过URL打开和访问网上的对象。</p><h3 id="健壮性"><a href="#健壮性" class="headerlink" title="健壮性"></a>健壮性</h3><p>方便问题检测，没有C++那么恶心的指针bug。</p><h3 id="安全性"><a href="#安全性" class="headerlink" title="安全性"></a>安全性</h3><p>虽然Java安全模型没有原先预想的那么成功，但在那个时代已经相当超前。</p><h3 id="体系结构中立"><a href="#体系结构中立" class="headerlink" title="体系结构中立"></a>体系结构中立</h3><p>为Java“虚拟机”产生编译型代码。</p><h3 id="可移植性"><a href="#可移植性" class="headerlink" title="可移植性"></a>可移植性</h3><p>除了与用户界面有关的部分，其他库能很好支持平台独立性，不用操心底层操作系统。</p><h3 id="解释性"><a href="#解释性" class="headerlink" title="解释性"></a>解释性</h3><p>Java解释器可以在任何移植了解释器的机器上直接执行Java字节码。</p><p>“快捷而具有探索性”</p><h3 id="高性能"><a href="#高性能" class="headerlink" title="高性能"></a>高性能</h3><p>即时编译器</p><h3 id="多线程"><a href="#多线程" class="headerlink" title="多线程"></a>多线程</h3><h3 id="动态性"><a href="#动态性" class="headerlink" title="动态性"></a>动态性</h3><h2 id="hello-world"><a href="#hello-world" class="headerlink" title="hello world"></a>hello world</h2><ol><li>随便建一个文件夹，放代码</li><li>新建一个java文件：<ul><li>文件后缀为<code>.java</code></li><li><code>hello.java</code></li><li>【坑】系统可能没有显示文件后缀名，我们需要动手打开</li></ul></li><li>写代码</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">hello</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        System.out.print(<span class="string">&quot;hello world!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>4.编译javac Java文件，会生成一个class文件</p><p>5.运行class文件</p><p><img src="/../img/java-hello%20world.png" alt="run_java"></p><h3 id="可能遇到的bug"><a href="#可能遇到的bug" class="headerlink" title="可能遇到的bug"></a>可能遇到的bug</h3><ol><li>单词大小写不能错，<strong>Java对大小写敏感</strong></li><li>尽量用英文</li><li>文件名和类名必须一致，且首字母大写</li><li>符号不能用中文</li></ol><h2 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h2><ol><li><strong>局部变量</strong>：定义在方法、构造器或块（block）中的变量。它们的作用域仅限于该方法、构造器或块内部，并且必须在声明时初始化才能使用。</li><li><strong>成员变量（实例变量）</strong>：定义在类中，但在方法、构造器或任何块之外的变量。每个对象实例都有自己的一份成员变量副本，因此这些变量与对象的生命周期相同。</li><li><strong>静态变量（类变量）</strong>：也是定义在类中，但在方法、构造器或任何块之外，并且使用<code>static</code>关键字修饰的变量。无论创建了多少个类的对象，静态变量只有一个副本，被该类的所有实例共享。</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Demo03</span> &#123;</span><br><span class="line">    <span class="comment">// 常量</span></span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">double</span> <span class="variable">PI</span> <span class="operator">=</span> <span class="number">3.14</span>;</span><br><span class="line">    <span class="keyword">final</span> <span class="keyword">static</span> <span class="type">double</span> <span class="variable">JI</span> <span class="operator">=</span> <span class="number">3.555</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 类变量 static</span></span><br><span class="line">    <span class="keyword">static</span> <span class="type">double</span> <span class="variable">salary</span> <span class="operator">=</span> <span class="number">20000</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 属性：变量</span></span><br><span class="line">    <span class="comment">// 实例变量：从属于对象，默认值为 0 0.0 u0000 false</span></span><br><span class="line">    <span class="comment">// 除了基本类型，其余默认值为null</span></span><br><span class="line">    String name;</span><br><span class="line">    <span class="type">int</span> age;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// main方法</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">// 局部变量，必须声名和初始化值</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">10</span>;</span><br><span class="line">        System.out.println(i);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//变量类型 变量名 = new Demo03();</span></span><br><span class="line">        <span class="type">Demo03</span> <span class="variable">demo03</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Demo03</span>();</span><br><span class="line">        System.out.println(demo03.age);</span><br><span class="line">        System.out.println(demo03.name);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 类变量 static</span></span><br><span class="line">        System.out.println(salary);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 其他方法</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">add</span><span class="params">()</span> &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="运算符"><a href="#运算符" class="headerlink" title="运算符"></a>运算符</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> operator;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Demo01</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">        A = 0011 1100</span></span><br><span class="line"><span class="comment">        B = 0000 1101</span></span><br><span class="line"><span class="comment">        -------------</span></span><br><span class="line"><span class="comment">        A&amp;B = 0000 1100    与：对应都1，结果为1</span></span><br><span class="line"><span class="comment">        A|B = 0011 1101    或：有一位为1，结果为1</span></span><br><span class="line"><span class="comment">        A^B = 0011 0001    异或：对应不同，结果为1</span></span><br><span class="line"><span class="comment">        ~B = 1111 0010     取反：0变1，1变0</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">        -------------------------------------------------------------------------</span></span><br><span class="line"><span class="comment">        -------------------------------------------------------------------------</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">        2*8 = 16    2*2*2*2</span></span><br><span class="line"><span class="comment">        效率极高！！</span></span><br><span class="line"><span class="comment">        &lt;&lt; *2             左移</span></span><br><span class="line"><span class="comment">        &gt;&gt; /2             右移</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">        0000 0000     0</span></span><br><span class="line"><span class="comment">        0000 0001     1</span></span><br><span class="line"><span class="comment">        0000 0010     2</span></span><br><span class="line"><span class="comment">        0000 0011     3</span></span><br><span class="line"><span class="comment">        0000 0100     4</span></span><br><span class="line"><span class="comment">        0000 1000     8</span></span><br><span class="line"><span class="comment">        0001 0000     16</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        System.out.println(<span class="number">2</span>&lt;&lt;<span class="number">3</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">        -------------------------------------------------------------------------</span></span><br><span class="line"><span class="comment">        -------------------------------------------------------------------------</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//字符串连接符</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">a</span> <span class="operator">=</span> <span class="number">10</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">b</span> <span class="operator">=</span> <span class="number">20</span>;</span><br><span class="line">        System.out.println(<span class="string">&quot;&quot;</span> + a + b);</span><br><span class="line">        System.out.println(a + b + <span class="string">&quot;&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="包机制"><a href="#包机制" class="headerlink" title="包机制"></a>包机制</h2><ul><li><p><strong>包的本质：文件夹</strong></p></li><li><p><em><strong>一般利用公司域名倒置作为包名：</strong></em></p><pre><code> ` www.baidu.com`   -&gt; `com.baidu.www`</code></pre></li><li><p>语法格式：</p><pre><code> `package pkg1[.pkg2[.pkg3...]];`</code></pre></li><li><p>调包：</p><p><code>import package1[.package2...].(classname|*)</code>;</p></li></ul><h2 id="JavaDoc"><a href="#JavaDoc" class="headerlink" title="JavaDoc"></a>JavaDoc</h2><ol><li><p>阿里巴巴Java开发手册：</p><p><a href="%5B%E3%80%8A%E9%98%BF%E9%87%8C%E5%B7%B4%E5%B7%B4Java%E5%BC%80%E5%8F%91%E6%89%8B%E5%86%8C%EF%BC%88%E7%BB%88%E6%9E%81%E7%89%88%EF%BC%89%E3%80%8B%E5%85%8D%E8%B4%B9%E5%9C%A8%E7%BA%BF%E9%98%85%E8%AF%BB_%E8%97%8F%E7%BB%8F%E9%98%81-%E9%98%BF%E9%87%8C%E4%BA%91%E5%BC%80%E5%8F%91%E8%80%85%E7%A4%BE%E5%8C%BA%5D(https://developer.aliyun.com/ebook/386/read?spm=a2c6h.26392459.ebook-detail.2.63392867wkBzZl)">阿里巴巴Java开发手册</a></p></li><li><p>JDK文档：</p><p>[JDK文档](<a href="https://docs.oracle.com/javase/8/docs/api/">Overview (Java Platform SE 8 )</a>)</p></li><li><p>参考代码：</p></li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> pre_learn;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Jinghuai Xiao</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@version</span> -0.0</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@since</span> 2025/1/26</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Doc</span> &#123;</span><br><span class="line">    String name;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@author</span> Jinghuai Xiao</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> name</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> Exception</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">test</span><span class="params">(String name)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li><p>命令行生成JavaDoc：</p><ol><li>打开该文件位置：</li></ol><p><img src="/../img/screenshot/javadoc1.png" alt="IDEA中打开文件"></p><ol start="2"><li>上方输入cmd打开终端：</li></ol><p><img src="/../img/screenshot/javadoc2.png" alt="打开终端"></p><ol start="3"><li><p>输入代码，进行编码：</p><p>   <code>javadoc -encoding UTF-8 -charset UTF-8 Doc.java</code></p></li></ol><p><img src="/../img/screenshot/javadoc3.png" alt="编码"></p><ol start="4"><li>查看文档：</li></ol><p><img src="/../img/screenshot/javadoc4.png" alt="查看文档"></p></li><li><p>用IDEA生成JavaDoc：</p><p><a href="https://blog.csdn.net/qq_44122193/article/details/114789427?fromshare=blogdetail&sharetype=blogdetail&sharerId=114789427&sharerefer=PC&sharesource=zerd1y&sharefrom=from_link">用IDEA生成JavaDoc</a></p></li></ul><h2 id="流程控制"><a href="#流程控制" class="headerlink" title="流程控制"></a>流程控制</h2><h3 id="Scanner"><a href="#Scanner" class="headerlink" title="Scanner"></a>Scanner</h3><ol><li><p>基本语法：</p><p><code>Scanner s = new Scanner(System.in);</code></p></li><li><p>输入：</p><p><code>scanner.next()</code></p><p><code>scanner.nextLine()</code></p></li><li><p>判断：</p><p><code>scanner.hasNext()</code></p><p><code>scanner.hasNextLine()</code></p></li><li><p>代码1：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Demo01</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">//创建一个扫描器对象，用于接收键盘数据</span></span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">scanner</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;用next方式接收：&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//判断用户有没有输入字符串</span></span><br><span class="line">        <span class="keyword">if</span> (scanner.hasNextLine()) &#123;</span><br><span class="line">            <span class="comment">//使用next方式接收</span></span><br><span class="line">            <span class="type">String</span> <span class="variable">str</span> <span class="operator">=</span> scanner.next();</span><br><span class="line">            System.out.println(<span class="string">&quot;输出内容为：&quot;</span> + str);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//凡是属于IO流的类如果不关闭会一直占用资源，要养成好习惯关掉</span></span><br><span class="line">        scanner.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p>代码2：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Demo02</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">//创建一个扫描器对象，用于接收键盘数据</span></span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">scanner</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;用next方式接收：&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//判断用户有没有输入字符串</span></span><br><span class="line">        <span class="keyword">if</span> (scanner.hasNextLine()) &#123;</span><br><span class="line">            <span class="comment">//使用nextLine方式接收</span></span><br><span class="line">            <span class="type">String</span> <span class="variable">str</span> <span class="operator">=</span> scanner.nextLine();</span><br><span class="line">            System.out.println(<span class="string">&quot;输出内容为：&quot;</span> + str);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//凡是属于IO流的类如果不关闭会一直占用资源，要养成好习惯关掉</span></span><br><span class="line">        scanner.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>区别：</p><ul><li><code>scanner.next()</code>：不能得到带空格字符串</li><li><code>scanner.nextLine()</code>：可以获得空白</li></ul></li><li><p>代码3：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Demo03</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">scanner</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 从键盘中读取数据</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="type">float</span> <span class="variable">f</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;请输入整数：&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (scanner.hasNextInt()) &#123;</span><br><span class="line">            i = scanner.nextInt();</span><br><span class="line">            System.out.println(<span class="string">&quot;整数数据：&quot;</span> + i);</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;输入的不是整数数据&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (scanner.hasNextFloat()) &#123;</span><br><span class="line">            f = scanner.nextFloat();</span><br><span class="line">            System.out.println(<span class="string">&quot;小数数据：&quot;</span> + f);</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;输入的不是小数数据&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        scanner.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p>代码4：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Demo04</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">scanner</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line"></span><br><span class="line">        <span class="type">double</span> <span class="variable">sum</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">cnt</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span>(scanner.hasNextDouble()) &#123;</span><br><span class="line">            <span class="type">double</span> <span class="variable">tmp</span> <span class="operator">=</span> scanner.nextDouble();</span><br><span class="line">            sum += tmp;</span><br><span class="line">            cnt++;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(cnt + <span class="string">&quot;个数的和为：&quot;</span> + sum);</span><br><span class="line">        System.out.println(cnt + <span class="string">&quot;个数的平均数为：&quot;</span> + sum / cnt);</span><br><span class="line">        scanner.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ol>]]></content>
      
      
      <categories>
          
          <category> 开发 </category>
          
          <category> 后端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MarkDown</title>
      <link href="/2025/01/23/2025-1-23-MarkDown/"/>
      <url>/2025/01/23/2025-1-23-MarkDown/</url>
      
        <content type="html"><![CDATA[<h1 id="MarkDown"><a href="#MarkDown" class="headerlink" title="MarkDown"></a>MarkDown</h1><h2 id="标题"><a href="#标题" class="headerlink" title="标题"></a>标题</h2><h3 id="三级标题"><a href="#三级标题" class="headerlink" title="三级标题"></a>三级标题</h3><h4 id="四级标题"><a href="#四级标题" class="headerlink" title="四级标题"></a>四级标题</h4><p>支持到6级</p><h2 id="字体"><a href="#字体" class="headerlink" title="字体"></a>字体</h2><p><strong>hello, world!</strong></p><p><em>hello, world!</em></p><p><em><strong>hello, world!</strong></em></p><p><del>hello, world!</del></p><h2 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h2><blockquote><p>后端——Java</p></blockquote><h2 id="分割线"><a href="#分割线" class="headerlink" title="分割线"></a>分割线</h2><hr><hr><h2 id="图片"><a href="#图片" class="headerlink" title="图片"></a>图片</h2><p><em>本地图片</em></p><p><img src="/../img/LofiSu1.jpg" alt="loacal_image"></p><p><em>网络图片</em></p><p><img src="https://i.pinimg.com/736x/6a/fd/1d/6afd1d8ae3f3cc7dc9baba8be29826a9.jpg" alt="web_image"></p><h2 id="超链接"><a href="#超链接" class="headerlink" title="超链接"></a>超链接</h2><p><a href="%5Bzerd1y-blog%5D(https://www.zerd1y.com/)">点击跳转到我的博客</a></p><p><em>markdown无法直接跳转，但是写入网站可以跳转</em></p><h2 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h2><ol><li>有序号的排序</li><li>B</li><li>C</li></ol><ul><li>“-“号空格</li><li>B</li><li>C</li></ul><h2 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h2><table><thead><tr><th>name</th><th>sex</th><th>birthday</th></tr></thead><tbody><tr><td>zerd1y</td><td>male</td><td>2006.8.16</td></tr></tbody></table><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><p><code>hello</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span></span><br></pre></td></tr></table></figure><h2 id="查看源码"><a href="#查看源码" class="headerlink" title="查看源码"></a>查看源码</h2><p>点击左下角<code>&lt;/&gt;</code>，可进入源码模式</p><h2 id="渲染LaTeX语法"><a href="#渲染LaTeX语法" class="headerlink" title="渲染LaTeX语法"></a>渲染LaTeX语法</h2><p>Typora 需要 <strong>开启数学公式支持</strong> 才能正确渲染 LaTeX 语法</p><ul><li>打开Typora，左上角<code>文件</code> -&gt; <code>偏好设置</code></li><li>在<code>Markdown</code>选项下，找到<code>内联数学</code>并勾选它</li><li>关闭设置窗口，重新打开Typora</li></ul>]]></content>
      
      
      <categories>
          
          <category> 基础知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MarkDown </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>常用快捷键</title>
      <link href="/2025/01/23/2025-1-23-%E5%B8%B8%E7%94%A8%E5%BF%AB%E6%8D%B7%E9%94%AE/"/>
      <url>/2025/01/23/2025-1-23-%E5%B8%B8%E7%94%A8%E5%BF%AB%E6%8D%B7%E9%94%AE/</url>
      
        <content type="html"><![CDATA[<h1 id="常用快捷键"><a href="#常用快捷键" class="headerlink" title="常用快捷键"></a>常用快捷键</h1><h2 id="Windows"><a href="#Windows" class="headerlink" title="Windows"></a>Windows</h2><ol><li>Ctrl+C：复制</li><li>Ctrl+V：粘贴</li><li>Ctrl+A：全选</li><li>Ctrl+X：剪切</li><li>Ctrl+Z：撤销</li><li>Ctrl+S：保存</li><li>Alt+F4：关闭窗口</li><li>Shift+DELET：永久删除（正常删除在回收站）</li><li>Ctrl+Shift+Esc &#x2F; 任务栏右键：打开任务管理器（死机必用）</li><li>Windows+R：运行（程序 &#x2F; 命令行）</li></ol><h3 id="其他快捷键"><a href="#其他快捷键" class="headerlink" title="其他快捷键"></a>其他快捷键</h3><ol><li>Ctrl+D：复制当前行到下一行（IntelliJ IDEA）</li></ol><h2 id="Linux"><a href="#Linux" class="headerlink" title="Linux"></a>Linux</h2><ol><li><code>PrtSc</code>截图（键盘右上角）</li></ol>]]></content>
      
      
      <categories>
          
          <category> 基础知识 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>基本Dos命令</title>
      <link href="/2025/01/23/2025-1-23-%E5%9F%BA%E6%9C%ACDos%E5%91%BD%E4%BB%A4/"/>
      <url>/2025/01/23/2025-1-23-%E5%9F%BA%E6%9C%ACDos%E5%91%BD%E4%BB%A4/</url>
      
        <content type="html"><![CDATA[<h1 id="基本Dos命令"><a href="#基本Dos命令" class="headerlink" title="基本Dos命令"></a>基本Dos命令</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#盘符切换 e:</span></span><br><span class="line"><span class="comment">#查看当前目录所有文件 dir</span></span><br><span class="line"><span class="comment">#切换目录 cd (change directory)</span></span><br><span class="line"><span class="built_in">cd</span> .. <span class="comment">#切换上级目录</span></span><br><span class="line"><span class="comment">#推出终端 exit</span></span><br><span class="line"><span class="comment">#查看电脑ip ipconfig</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#打开应用</span></span><br><span class="line">      calc 计算器</span><br><span class="line">      mspaint 画图</span><br><span class="line">      notepad 记事本</span><br><span class="line"><span class="comment">#ping 命令</span></span><br><span class="line">      ping www.baidu.com</span><br><span class="line"><span class="comment">#文件操作</span></span><br><span class="line">      md 创建目录名 (make directory)</span><br><span class="line">      rd 删除目录名 (remove directory)</span><br><span class="line">      <span class="built_in">cd</span>&gt; 创建文件名</span><br><span class="line">      del 删除文件名 </span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 基础知识 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>高斯滤波</title>
      <link href="/2025/01/06/2025-1-6-%E9%AB%98%E6%96%AF%E6%BB%A4%E6%B3%A2/"/>
      <url>/2025/01/06/2025-1-6-%E9%AB%98%E6%96%AF%E6%BB%A4%E6%B3%A2/</url>
      
        <content type="html"><![CDATA[<h1 id="高斯滤波"><a href="#高斯滤波" class="headerlink" title="高斯滤波"></a>高斯滤波</h1><ul><li><p>用于图像处理中的预处理操作</p></li><li><p>将低像素进行锐化，使图像更清晰</p></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> cv2 <span class="keyword">as</span> cv</span><br><span class="line"></span><br><span class="line">INITIAL_KERNEL_SIZE = <span class="number">1</span></span><br><span class="line">INITIAL_SIGMA_VALUE = <span class="number">150</span></span><br><span class="line">MAX_SIGMA_VALUE = <span class="number">300</span></span><br><span class="line">MAX_KERNEL_SIZE = <span class="number">6</span></span><br><span class="line">WINDOW_NAME = <span class="string">&quot;Gaussian Blur Demo&quot;</span></span><br><span class="line">TRACKBAR_KERNEL_SIZE = <span class="string">&quot;Size&quot;</span></span><br><span class="line">TRACKBAR_SIGMA_VALUE = <span class="string">&quot;Sigma&quot;</span></span><br><span class="line"></span><br><span class="line">ksize = INITIAL_KERNEL_SIZE * <span class="number">2</span> + <span class="number">3</span></span><br><span class="line">sigma = INITIAL_SIGMA_VALUE / <span class="number">10.0</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">update_kernel_size</span>(<span class="params">kernel_size</span>):</span><br><span class="line">    <span class="keyword">global</span> ksize</span><br><span class="line">    ksize = kernel_size * <span class="number">2</span> + <span class="number">3</span></span><br><span class="line">    <span class="built_in">print</span>(ksize, sigma)</span><br><span class="line">    apply_gaussian_blur()</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">update_sigma_value</span>(<span class="params">sigma_value</span>):</span><br><span class="line">    <span class="keyword">global</span> sigma</span><br><span class="line">    sigma = sigma_value / <span class="number">10.0</span></span><br><span class="line">    <span class="built_in">print</span>(ksize, sigma)</span><br><span class="line">    apply_gaussian_blur()</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">apply_gaussian_blur</span>():</span><br><span class="line">    dst = cv.GaussianBlur(src, (ksize, ksize), sigma)</span><br><span class="line">    cv.imshow(WINDOW_NAME, dst)</span><br><span class="line"></span><br><span class="line">src = cv.imread(<span class="string">&quot;LofiSu1.jpg&quot;</span>, <span class="number">0</span>)</span><br><span class="line"></span><br><span class="line">cv.namedWindow(WINDOW_NAME)</span><br><span class="line"></span><br><span class="line">cv.createTrackbar(TRACKBAR_KERNEL_SIZE, WINDOW_NAME, INITIAL_KERNEL_SIZE, MAX_KERNEL_SIZE, update_kernel_size)</span><br><span class="line">cv.createTrackbar(TRACKBAR_SIGMA_VALUE, WINDOW_NAME, INITIAL_SIGMA_VALUE, MAX_SIGMA_VALUE, update_sigma_value)</span><br><span class="line"></span><br><span class="line">apply_gaussian_blur()</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> cv.waitKey(<span class="number">0</span>) == <span class="number">27</span>:</span><br><span class="line">    cv.destroyAllWindows()</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> AI </category>
          
          <category> 计算机视觉 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 计算机视觉 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>My First Blog</title>
      <link href="/2025/01/04/2025-1-4-My-First-Blog/"/>
      <url>/2025/01/04/2025-1-4-My-First-Blog/</url>
      
        <content type="html"><![CDATA[<h1 id="我的第一篇博客"><a href="#我的第一篇博客" class="headerlink" title="我的第一篇博客"></a>我的第一篇博客</h1><p>今天是2025-1-4，大一上的期末周<br>每到期末周课就少起来了，对这一点我还感到挺开心的，就是考试和出成绩的时候会有些痛苦</p><p>至于为什么诞生了这篇博客：<br>1.自学后端开发的时候，b站大学的老师建议我搭建个人blog，来记录自己的计算机开发学习经历，感觉这还挺酷的<br>2.对于我们计算机学生而言，有三张脸：个人web（blog），GitHub，LinkedIn。<br>这三张脸是我们面对社会的最直接的脸面，无论是教授&#x2F;学者&#x2F;ceo&#x2F;cto，还是hr&#x2F;同事&#x2F;同学，他们都能通过这3张脸来认识你，了解你的兴趣，技术栈，个人能力，项目，paper等等。同时，我们展示这三张脸来向社会展示自己的能力，以争取工作&#x2F;研究学术&#x2F;创业的机会。<br>3.看到前辈的一些个人web，感觉好好看，单纯喜欢想自己做一个。</p><p>希望自己能坚持下来，不在于有多宏伟，多频繁的产出，但希望自己能在这里记录我学到的一些知识，一些看法，一些碎碎念，成为我这些年来的记忆。</p><p>文笔不好，事实上在现实生活中我本身就不是巧嘴滑舌的人<br>对我而言，仅仅只是作为一些记录<br>如果能对你有一点点的帮助，那再好不过了。</p>]]></content>
      
      
      <categories>
          
          <category> 碎碎念 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 碎碎念 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
